<?xml version="1.0" encoding="UTF-8"?>
<uma:MethodLibrary xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:uma="http://www.eclipse.org/epf/uma/1.0.3" name="library.xmi" briefDescription="" id="_y62TUKVPEdmMZJIzZ1W7Pw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" tool="epf=1.0.0">
  <MethodPlugin name="openup_basic" briefDescription="The OpenUP/Basic is an iterative software development process that is minimal, complete, and extensible." id="_0TLvwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-25T08:30:48" changeDescription="" version="" userChangeable="true">
    <Copyright>_uuunoPsDEdmyhNQr5STrZQ</Copyright>
    <ReferencedMethodPlugin>_WCUhAO8KEdmKSqa_gSYthg</ReferencedMethodPlugin>
    <MethodPackage xsi:type="uma:ContentCategoryPackage" name="ContentCategories" id="_F6sgkNZqEduNivIYTvKuLw">
      <ContentCategory xsi:type="uma:CustomCategory" name="getting_started" briefDescription="This area provides information useful for understanding how to deploy and adopt OpenUP/Basic." id="_cp6ycBOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/mic.gif" presentationName="Getting Started" shapeicon="openup_basic/customcategories/resources/icon_introL.gif" variabilityType="na">
        <CategorizedElement>_vEruwN-rEdqiM_wFaqLjNg</CategorizedElement>
        <CategorizedElement>_ClDF4BOHEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_UaGfECcTEduSX6N2jUafGA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="about" briefDescription="" id="_ClDF4BOHEduCNqgZdt_OaA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/about.gif" presentationName="About" shapeicon="openup_basic/customcategories/resources/processicon.gif" variabilityType="na">
        <CategorizedElement>_8tSNMPGYEdqiDINUyockoA</CategorizedElement>
        <CategorizedElement>_uvje4D_fEdqDFvujd6NHiA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="core_principles_cat" briefDescription="Four core principles capture the general intentions behind this process and create  the foundation for interpreting roles and work products and performing tasks." id="_HEu9QBOHEduCNqgZdt_OaA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Core Principles" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <CategorizedElement>_ssG6MMvpEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_KkTIsMp7EdqC_NfSivunjA</CategorizedElement>
        <CategorizedElement>_9gocwMvoEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_GXiogMvoEdqukPpotm3DYg</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="openup_basic_views" briefDescription="" id="_NIIYMBOJEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic Views" variabilityType="na">
        <Presentation name="openup_basic_views,_NIIYMBOJEduCNqgZdt_OaA" briefDescription="" id="-8uqXjzIOnt6LVDae6Uv_0w" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-23T12:16:33" changeDescription="" version="">
          <MainDescription><![CDATA[[to do]]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_SEztkBOJEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_2l8U4K4sEdudp4CB-AFxtw</CategorizedElement>
        <CategorizedElement>_RdM7MMXnEduywMSzPTUUwA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="openup_basic_deprecated" briefDescription="" id="_SEztkBOJEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic - deprecated" variabilityType="na">
        <Presentation name="openup_basic,_SEztkBOJEduCNqgZdt_OaA" briefDescription="" id="-nY50CawHefla4zauYddVfw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T07:48:17" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_i-BDsNogEdqfmNgIq7q3Xw</CategorizedElement>
        <CategorizedElement>_cp6ycBOGEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_HEu9QBOHEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_V2BQkEmbEdu0xduwSKie-w</CategorizedElement>
        <CategorizedElement>_TZIJ0O8NEdmKSqa_gSYthg</CategorizedElement>
        <CategorizedElement>_s4Z9AMWXEdqWePvIjHInwg</CategorizedElement>
        <CategorizedElement>__BZycP1UEdmek8CQTQgrOQ</CategorizedElement>
        <CategorizedElement>_0uyGoMlgEdmt3adZL5Dmdw</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="sub_processes" briefDescription="OpenUP/Basic is organized into four major areas of content, also known as sub-processes." id="_V2BQkEmbEdu0xduwSKie-w" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Sub-processes" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <Presentation name="new_custom_category,_V2BQkEmbEdu0xduwSKie-w" briefDescription="" id="-1ZoXO1IRfkXUKej4bNv8cw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T08:05:33" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[&nbsp;]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_r8cVIEmbEdu0xduwSKie-w</CategorizedElement>
        <CategorizedElement>_57_ZMEmbEdu0xduwSKie-w</CategorizedElement>
        <CategorizedElement>_Aoz2gEmcEdu0xduwSKie-w</CategorizedElement>
        <CategorizedElement>_HEVvgEmcEdu0xduwSKie-w</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="collab_commun_subprocess" briefDescription="This layer is the foundation for OpenUP, reflecting the collaborative nature of the process." id="_r8cVIEmbEdu0xduwSKie-w" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Communication and Collaboration" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <Presentation name="new_custom_category,_r8cVIEmbEdu0xduwSKie-w" briefDescription="" id="-NMF-a9hwKjzWNfHzzseDYQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-13T11:56:55" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The communication and collaboration layer is the foundation for OpenUP, reflecting the collaborative nature of the
    process. It contains all of the roles in OpenUP/Basic: Stakeholder, Analyst, Developer, Architect, Tester, Project
    Manager, and Any Role.&nbsp;Team members taking on these roles need to collaborate to jointly capture and define the
    intent of the stakeholders, to jointly develop the solution, and to jointly manage the project.
</p>
<p>
    This foundational layer reflects and enables us to express the nature of self-organized teams, where team members must
    broaden their perspectives of what their roles&nbsp;are and where their responsibilities end. As an example, the
    Analyst cannot say “I documented the requirements, now it is up to the Developer to implement them.” The Analyst's job
    is not primarily to document requirements; it is to communicate that the stakeholder intent is understood and reflected
    in a validated build. Documenting requirements may help you&nbsp;achieve&nbsp;that objective, but it is only one of
    many available tools. Other tools to use include working with developers on the design, working with testers on what
    needs to be tested, and using the build to ensure that&nbsp;it does what the stakeholders need it to do.
</p>
<p>
    To help the team to collaborate effectively, the foundational collaboration layer provides you with a set of <a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" guid="_HEu9QBOHEduCNqgZdt_OaA">practices</a> that have been shown to motivate effective collaboration. These practices
    apply to work done in all sub-processes.<br />
    &nbsp;
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_KkTIsMp7EdqC_NfSivunjA</CategorizedElement>
        <CategorizedElement>_TZIJ0O8NEdmKSqa_gSYthg</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="intent_subprocess" briefDescription="The intent sub-process deals with how to channel the intent of stakeholders to the rest of the development team, to ensure that validated builds with incremental capabilities reflect stakeholder intents." id="_57_ZMEmbEdu0xduwSKie-w" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Intent" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <Presentation name="new_custom_category,_57_ZMEmbEdu0xduwSKie-w" briefDescription="" id="-QRnsN2e6IQlSMaRts-wFNw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T08:16:21" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The intent sub-process deals with how to channel the intent of stakeholders to the rest of the development team, to
    ensure that validated builds with incremental capabilities reflect stakeholder intents. This is done by capturing and
    communicating the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">vision</a>&nbsp;to all team members, and by translating the vision into test cases and
    requirements of different types to allow the team to understand what capabilities needs to be delivered to address
    stakeholder intent.
</p>
<p>
    You find the most tasks for the intent sub-process in the <strong>Requirements</strong> discipline, and the task Create
    Test Cases in the <strong>Test</strong> discipline. The corresponding work products are found under
    <strong>Requirements</strong> and <strong>Test</strong> domains.
</p>
<p>
    The intent sub-process is built upon the foundational <a class="elementLink" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">Collaboration and Communication</a><a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">&nbsp;</a>layer. That layer constitutes the backbone of OpenUP in order to reflect the
    following:
</p>
<ul>
    <li>
        all roles in OpenUP are involved in intent development to ensure that as a minimum, all team members properly
        understand stakeholders’ intent.
    </li>
    <li>
        make sure that the best practices for collaborative development provided in the collaboration layer guides any work
        related to intent.
    </li>
</ul>
<p>
    The intent sub-process is written in such a way that your organization can modify it to fit your style of development
    and stakeholder collaboration, without necessarily impacting how you deal with the other sub-processes of <a class="elementLink" href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" guid="_Aoz2gEmcEdu0xduwSKie-w">Management</a><a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" guid="_Aoz2gEmcEdu0xduwSKie-w">&nbsp;</a>and <a class="elementLink" href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" guid="_HEVvgEmcEdu0xduwSKie-w">Solution</a><a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" guid="_HEVvgEmcEdu0xduwSKie-w">&nbsp;</a>development .
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_ssG6MMvpEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_0TR2ZMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0TwXgMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_allMQMWfEdqiT9CqkRksWQ</CategorizedElement>
        <CategorizedElement>_vUzp0MWeEdqiT9CqkRksWQ</CategorizedElement>
        <CategorizedElement>_0o9ygclgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0pJ_xslgEdmt3adZL5Dmdw</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="management_subprocess" briefDescription="The Management sub-process deals with management of the project, including project planning, iteration planning, day-to-day management of the work within the iteration, and iteration assessments." id="_Aoz2gEmcEdu0xduwSKie-w" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Management" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <Presentation name="new_custom_category,_Aoz2gEmcEdu0xduwSKie-w" briefDescription="" id="-q8ubSlQ5miYcY1JXdj1fbQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T08:03:50" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    It is important to note that the Management sub-process is built on the foundational <a class="elementLink" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">Collaboration and Communication</a>&nbsp;layer&nbsp;to reflect the collaborative nature
    of management of an OpenUP project. The manager should not plan an iteration in isolation, and then tell the team
    members their assignments. Instead, the manager should be more of a coach, involving the entire team in the planning
    process to ensure that:
</p>
<ul>
    <li>
        Everybody’s knowledge is reflected in the plan
    </li>
    <li>
        All team members estimate their own work
    </li>
    <li>
        Each team member signs up to take on a task, rather than being told exactly what to do.
    </li>
</ul>
<p>
    You will find the tasks for the Management sub-process in the <strong>Project Management</strong> discipline and the
    corresponding work products under Project Management domain.
</p>
<p>
    The Management sub-process is written in such a way that your organization can modify it to fit your style of
    development, without necessarily affecting how you deal with the other sub-processes of&nbsp;<a class="elementLink" href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" guid="_HEVvgEmcEdu0xduwSKie-w">Solution</a><a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" guid="_HEVvgEmcEdu0xduwSKie-w">&nbsp;</a>and <a class="elementLink" href="./../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" guid="_57_ZMEmbEdu0xduwSKie-w">Intent</a>.<br />
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_GXiogMvoEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_0TqQ4MlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_QxjGYMWfEdqiT9CqkRksWQ</CategorizedElement>
        <CategorizedElement>_0pWNA8lgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0nJNkslgEdmt3adZL5Dmdw</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="solution_subprocess" briefDescription="The Solution sub-process describes all aspects of creating the architecture, designing, implementing, and testing the application." id="_HEVvgEmcEdu0xduwSKie-w" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Solution" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <Presentation name="new_custom_category,_HEVvgEmcEdu0xduwSKie-w" briefDescription="" id="-qwWeiX7WrSVHSluBe-J7yw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T08:25:13" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The Solution sub-process, among others, guides how you perform the following actions:
</p>
<ul>
    <li>
        Determine architectural feasibility
    </li>
    <li>
        Define architecture
    </li>
    <li>
        Develop the architecture for, design, implement, and test a major change
    </li>
    <li>
        Design, implement, and test a small change
    </li>
    <li>
        Implement and test a trivial change
    </li>
    <li>
        Test and validate builds of incrementally improved quality
    </li>
</ul>
<p>
    You find the tasks for this&nbsp;sub-process in the disciplines&nbsp;<strong>Analysis and Design,
    Implementation,</strong> and <strong>Test</strong>, and the corresponding work products under the <strong>Architecture,
    Development</strong>, and <strong>Test</strong> domains.
</p>
<p>
    The Solution sub-process is built upon the foundational <a class="elementLink" href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" guid="_r8cVIEmbEdu0xduwSKie-w">Collaboration and Communication</a>&nbsp;layer. This layer constitutes the backbone of
    OpenUP to ensure that:
</p>
<ul>
    <li>
        All roles in OpenUP are involved in solution development
    </li>
    <li>
        Validated builds are the responsibility of the entire team
    </li>
    <li>
        Best practices for collaborative development guide development of the solution<strong>.</strong>
    </li>
</ul>
<p>
    The Solution sub-process is written in such a way that your organization can modify it to fit your style of
    development, without necessarily affecting how you deal with the other sub-processes of <a class="elementLink" href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" guid="_Aoz2gEmcEdu0xduwSKie-w">Management</a><a class="elementLinkWithUserText" href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" guid="_Aoz2gEmcEdu0xduwSKie-w">&nbsp;</a>and <a class="elementLink" href="./../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" guid="_57_ZMEmbEdu0xduwSKie-w">Intent</a>.<br />
    &nbsp;
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_9gocwMvoEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_0TX9AMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0TeDoMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0TkKQMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_xITr8MWXEdqWePvIjHInwg</CategorizedElement>
        <CategorizedElement>_A9k3UMWfEdqiT9CqkRksWQ</CategorizedElement>
        <CategorizedElement>_ou4CMMWfEdqiT9CqkRksWQ</CategorizedElement>
        <CategorizedElement>_0sx7islgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0sluQslgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_h2-iAfimEdmugcVr9AdHjQ</CategorizedElement>
        <CategorizedElement>_0nz79clgEdmt3adZL5Dmdw</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="architectural_mechanisms" briefDescription="Information about how to use use architectural mechansims to create a robust architecture." id="_2l8U4K4sEdudp4CB-AFxtw" orderingGuide="" suppressed="false" presentationName="Architectural Mechanisms" variabilityType="na">
        <CategorizedElement>_0gvqoMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_mzxI0A4LEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_HrZGIA4MEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_w2ACwA4LEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_4k_HsA4LEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_4k_HsQ4LEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_4k_Hsg4LEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_0LcUkA4LEduibvKwrGxWxA</CategorizedElement>
        <CategorizedElement>_0YJvUMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_0cr7cACrEdu8m4dIntu6jA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="openup_basic_treebrowser" briefDescription="" id="_RdM7MMXnEduywMSzPTUUwA" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic" variabilityType="na">
        <CategorizedElement>_BTJ_YMXwEduywMSzPTUUwA</CategorizedElement>
        <CategorizedElement>__cft0MXxEduywMSzPTUUwA</CategorizedElement>
        <CategorizedElement>__BZycP1UEdmek8CQTQgrOQ</CategorizedElement>
        <CategorizedElement>_s4Z9AMWXEdqWePvIjHInwg</CategorizedElement>
        <CategorizedElement>_TZIJ0O8NEdmKSqa_gSYthg</CategorizedElement>
        <CategorizedElement>_0uyGoMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>_ClDF4BOHEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_UaGfECcTEduSX6N2jUafGA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="introduction_to_openup_basic" briefDescription="" id="_BTJ_YMXwEduywMSzPTUUwA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/mic.gif" presentationName="Introduction to OpenUP/Basic" shapeicon="openup_basic/customcategories/resources/icon_introL.gif" variabilityType="na">
        <Presentation name="new_custom_category,_BTJ_YMXwEduywMSzPTUUwA" briefDescription="" id="-TfxeHO_AJxYCzXVva0kSzQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-12T05:47:01" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<table width="589" align="center" border="0">
    <tbody>
        <tr>
            <td width="96">
                <div align="center">
                    <a
                    href="./../../openup_basic/customcategories/getting_started_with_openup,__cft0MXxEduywMSzPTUUwA.html"
                    guid="__cft0MXxEduywMSzPTUUwA"><img height="48" alt="getting started" src="openup_basic/customcategories/resources/GetStarted_48.gif" width="48"
                    usemap="#Map" border="0" /></a>
                </div>
            </td>
            <td width="95">
                <div align="center">
                    <a href="./../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html"
                    guid="_HEu9QBOHEduCNqgZdt_OaA"><img height="48" alt="core principles" src="openup_basic/customcategories/resources/CorePrinciples_48.gif"
                    width="48" usemap="#Map2" border="0" /></a>
                </div>
            </td>
            <td width="88">
                <div align="center">
                    <a href="./../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html"
                    guid="_TZIJ0O8NEdmKSqa_gSYthg"><img height="48" alt="roles" src="openup_basic/customcategories/resources/Roles_48.gif" width="48"
                    usemap="#Map3" border="0" /></a>
                </div>
            </td>
            <td width="98">
                <div align="center">
                    <a href="./../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html"
                    guid="_s4Z9AMWXEdqWePvIjHInwg"><img height="48" alt="work products" src="openup_basic/customcategories/resources/WorkProducts_48.gif" width="48"
                    usemap="#Map4" border="0" /></a>
                </div>
            </td>
            <td width="88">
                <div align="center">
                    <a
                    href="./../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html"
                    guid="__BZycP1UEdmek8CQTQgrOQ"><img height="48" alt="disciplines" src="openup_basic/customcategories/resources/Disciplines_48.gif" width="48"
                    usemap="#Map5" border="0" /></a>
                </div>
            </td>
            <td width="98">
                <div align="center">
                    <a href="./../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html"
                    guid="_0uyGoMlgEdmt3adZL5Dmdw"><img height="48" alt="lifecycle" src="openup_basic/customcategories/resources/LifeCycle_48.gif" width="48"
                    usemap="#Map6" border="0" /></a>
                </div>
            </td>
        </tr>
        <tr valign="top" align="middle">
            <td width="96">
                <div align="center">
                    <a class="elementLinkWithUserText"
                    href="./../../openup_basic/customcategories/getting_started_with_openup,__cft0MXxEduywMSzPTUUwA.html"
                    guid="__cft0MXxEduywMSzPTUUwA">Getting Started</a>
                </div>
            </td>
            <td width="95">
                <div align="center">
                    <a class="elementLinkWithUserText"
                    href="./../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html"
                    guid="_HEu9QBOHEduCNqgZdt_OaA">Core Principles</a>
                </div>
            </td>
            <td width="88">
                <div align="center">
                    <a class="elementLinkWithUserText"
                    href="./../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html"
                    guid="_TZIJ0O8NEdmKSqa_gSYthg">Roles</a>
                </div>
            </td>
            <td width="98">
                <div align="center">
                    <a class="elementLinkWithUserText"
                    href="./../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html"
                    guid="_s4Z9AMWXEdqWePvIjHInwg">Work Products</a>
                </div>
            </td>
            <td width="88">
                <div align="center">
                    <a class="elementLinkWithUserText"
                    href="./../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html"
                    guid="__BZycP1UEdmek8CQTQgrOQ">Disciplines</a>
                </div>
            </td>
            <td width="98">
                <div align="center">
                    <a class="elementLinkWithUserText"
                    href="./../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html"
                    guid="_0uyGoMlgEdmt3adZL5Dmdw">Lifecycle</a>
                </div>
            </td>
        </tr>
    </tbody>
</table>
<p>
    <strong>What is OpenUP/Basic?</strong>
</p>
<p>
    OpenUP/Basic is an open source software development process designed for small, co-located teams who want to take an <a
    class="elementLinkWithUserText"
    href="./../../openup_basic/guidances/guidelines/agile_and_unified,_qg1IAK__EduMeuOwJ2MpeQ.html"
    guid="_qg1IAK__EduMeuOwJ2MpeQ">agile approach</a> to development. OpenUP/Basic is an iterative process that is <a
    class="elementLink"
    href="./../../openup_basic/guidances/guidelines/minimal_complete_extensible,_Nm5vUK__EduMeuOwJ2MpeQ.html"
    guid="_Nm5vUK__EduMeuOwJ2MpeQ">Minimal, Complete, and Extensible</a>. It&nbsp;values collaboration and stakeholder
    value over unnecessary deliverables and formality.
</p>
<p>
    OpenUP/Basic is organized into four major areas of content: Communication&nbsp;and Collaboration, Intent, Solution, and
    Management.
</p>
<p align="center">
    <img height="350" alt="Four major areas upon which the OpenUP/Basic content is organized"
    src="openup_basic/customcategories/resources/OpenUp1_350.jpg" width="350" usemap="#Map7" border="0" /> <map id="Map7" name="Map7">
        <area shape="RECT" alt="Stakeholder" coords="144,5,207,62"
        href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ" />
        <area shape="POLY" alt="Tester" coords="336,242,310,287,254,256,278,209"
        href="./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html" guid="_0ZM4MclgEdmt3adZL5Dmdw" />
        <area shape="RECT" alt="Developer" coords="148,282,201,347"
        href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmd" />
        <area shape="POLY" alt="Architect" coords="66,199,14,232,40,283,96,249"
        href="./../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw" />
        <area shape="POLY" alt="Project Manager" coords="11,118,68,146,99,91,50,52"
        href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw" />
        <area shape="POLY" alt="Analyst" coords="258,99,312,66,338,114,284,145"
        href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw" />
        <area shape="CIRCLE" alt="Communication and Collaboration" coords="176,176,47"
        href="./../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" />
        <area shape="POLY" alt="Management" coords="85,219,70,163,115,89,169,72,169,117,124,144,120,197"
        href="./../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" />
        <area shape="POLY" alt="Intent" coords="181,116,223,143,229,196,264,219,283,160,245,94,181,70"
        href="./../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" />
        <area shape="POLY" alt="Solution" coords="129,211,176,235,221,210,257,231,214,271,133,272,94,232"
        href="./../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" />
    </map><br />
     &nbsp;
</p>
<br />
<br />
<p>
    OpenUP is characterized by four mutually supporting core principles:
</p>
<ul>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../openup_basic/guidances/concepts/core_principle_collaborate,_KkTIsMp7EdqC_NfSivunjA.html"
        guid="_KkTIsMp7EdqC_NfSivunjA">Collaborate</a> to align interests and share understanding
    </li>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../openup_basic/guidances/concepts/core_principle_balance,_ssG6MMvpEdqukPpotm3DYg.html"
        guid="_ssG6MMvpEdqukPpotm3DYg">Balance</a> competing priorities (needs and technical costs) to maximize stakeholder
        value
    </li>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../openup_basic/guidances/concepts/core_principle_focus,_9gocwMvoEdqukPpotm3DYg.html"
        guid="_9gocwMvoEdqukPpotm3DYg">Focus</a> on articulating the architecture to facilitate technical collaboration,
        reduce risk, and minimize scrap and rework.
    </li>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../openup_basic/guidances/concepts/core_principle_evolve,_GXiogMvoEdqukPpotm3DYg.html"
        guid="_GXiogMvoEdqukPpotm3DYg">Evolve</a> continuously to reduce risk, demonstrate results, and gain feedback from
        the customer<br />
    </li>
</ul>
<p>
    OpenUP/Basic is ready to use as-is; nothing needs to be added or removed. It can also be extended in large and small
    ways to add new development content or customize the process for your specific environment.
</p>
<p>
    <strong>Who should use OpenUP/Basic?</strong>
</p>
<p>
    OpenUP/Basic is most useful for four primary groups of users:
</p>
<ul>

    <li>
        Software development practitioners (developers, project managers, analysts, and testers) working together as a
        project team
    </li>
    <li>
        Stakeholders
    </li>
    <li>
        Software process engineers
    </li>
    <li>
        Instructors
    </li>
</ul>
<p>
    Software development practitioners can find guidance on what is required of them in the roles defined by OpenUP/Basic.
    Each role describes a set of activities and artifacts that the role is responsible for. Guidance is also given on how
    those roles collaborate.
</p>
<p>
    Stakeholders will find guidance on what they may expect from the software development team and how the software will be
    created. OpenUP/Basic also describes the stakeholders' responsibilities and how they can best work with the development
    team to obtain software that meets their needs.
</p>
<p>
    Software process engineers can use EPF Composer to extend and modify OpenUP/Basic. Modification may be as simple as
    altering templates for work products or as sophisticated as adding activities necessary for creating software in your
    specific environment, such as audits for safety-critical systems. In addition to modifying method content, process
    engineers can add, change, or remove process flows to add organization-specific capability patterns.
</p>
<p>
    OpenUP/Basic is appropriate for academic organizations also. As an open source process, it can serve as the basis for
    software engineering courses and, when combined with the EPF Composer, courses in software process engineering.<br />
</p>]]></MainDescription>
          <KeyConsiderations><![CDATA[<p>
    Use OpenUP/Basic as-is when you have a small,&nbsp;co-located team.
</p>
<p>
    Modify OpenUP/Basic for small teams with different circumstances, for instance a novel project or geographically
    distributed team members.
</p>]]></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_v2l6gK_5EduMeuOwJ2MpeQ</CategorizedElement>
        <CategorizedElement>_Nm5vUK__EduMeuOwJ2MpeQ</CategorizedElement>
        <CategorizedElement>_qg1IAK__EduMeuOwJ2MpeQ</CategorizedElement>
        <CategorizedElement>_UCOtoMXwEduywMSzPTUUwA</CategorizedElement>
        <CategorizedElement>_ZRHNUMXwEduywMSzPTUUwA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="core_principles_category" briefDescription="Four core principles capture the general intentions behind this process and create the foundation for interpreting roles and work products and performing tasks." id="_UCOtoMXwEduywMSzPTUUwA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="Core Principles" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <Presentation name="core_principles,_HEu9QBOHEduCNqgZdt_OaA" briefDescription="" id="-I2j8LuHkworb0Y3EIlWfDQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-13T07:02:46" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<h3>
    OpenUP Core Principles
</h3>
<p>
    OpenUP is based on four mutually supporting core principles:
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Collaborate to align interests and share understanding
</h4>
<p>
    Software is created by people with different interests and skills who must work together to create software
    effectively.
</p>
<p>
    Therefore, practices that foster a healthy team environment are key to success. A healthy team environment enables
    effective collaboration that align the interests of project participants (development team, quality assurance, product
    stakeholders, customers) and helps project participants develop a shared understanding of the project.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Balance competing priorities to maximize stakeholder value
</h4>
<p>
    Systems need to be developed by balancing different, and sometimes competing,&nbsp;perspectives. For example, do you
    want to minimize cost by reusing an existing capability, or by custom developing the capability to get it to do exactly
    what you want?
</p>
<p>
    Therefore, project participants and stakeholders must collaborate to develop a solution that maximizes Stakeholder
    benefits and is compliant with constraints placed on the project. Achieving balance is a dynamic process, because, as
    both the stakeholders and project participants learn more about the system, their priorities and constraints change.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Focus on articulating the architecture
</h4>
<p>
    Without an architectural foundation, a system will evolve in an inefficient and haphazard way. Such a system often
    proves difficult to evolve, reuse, or integrate without substantial rework. It’s also difficult to organize the team or
    communicate ideas without the common technical focus that the architecture provides.
</p>
<p>
    Therefore, use the architecture as a focal point for developers to align their interests and ideas by articulating the
    essential technical decisions through the growing architecture.<span style="mso-spacerun: yes">&nbsp;</span>
</p>
<h4>
    Evolve to continuously obtain feedback and improve
</h4>
<p>
    It is usually not possible to know all stakeholders needs, be aware of all project risks, comprehend all project
    technologies, or know how to effectively work with your colleagues. Even if it were possible to know all of this, some
    of it is likely to change over the life of the project.
</p>
<p>
    Therefore, divide the project into short, time-boxed iterations to demonstrate incremental value and to get early and
    continuous feedback.<span style="mso-spacerun: yes">&nbsp;</span>
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_ssG6MMvpEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_KkTIsMp7EdqC_NfSivunjA</CategorizedElement>
        <CategorizedElement>_9gocwMvoEdqukPpotm3DYg</CategorizedElement>
        <CategorizedElement>_GXiogMvoEdqukPpotm3DYg</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="fundamental_concepts" briefDescription="" id="_ZRHNUMXwEduywMSzPTUUwA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/concept_obj.gif" presentationName="OpenUP Fundamental Concepts" shapeicon="openup_basic/customcategories/resources/concept_dgm32.gif" variabilityType="na">
        <CategorizedElement>_0hmKgBOMEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_2plxwBOMEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_48EKsBOMEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>__ca5UBOMEduCNqgZdt_OaA</CategorizedElement>
        <CategorizedElement>_lam4ADkBEduxovfWMDsntw</CategorizedElement>
        <CategorizedElement>_KudM0NcJEdqz_d2XWoVt6Q</CategorizedElement>
        <CategorizedElement>_0bsLgMlgEdmt3adZL5Dmdw</CategorizedElement>
        <CategorizedElement>__O7tAMVvEduLYZUGfgZrkQ</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:CustomCategory" name="getting_started_with_openup" briefDescription="This area provides information useful for understanding how to deploy and adopt OpenUP/Basic." id="__cft0MXxEduywMSzPTUUwA" orderingGuide="" suppressed="false" nodeicon="openup_basic/customcategories/resources/mic.gif" presentationName="Getting Started" shapeicon="openup_basic/customcategories/resources/icon_introL.gif" variabilityType="na">
        <Presentation name="getting_started,_cp6ycBOGEduCNqgZdt_OaA" briefDescription="" id="-zy1Q3NXKXbiCP_zrjTxwaQ" orderingGuide="" suppressed="false" authors="Jim Ruehlin" changeDate="2007-03-01T10:31:38" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations><![CDATA[<p>
    OpenUP/Basic is a process for small, co-located teams. It can be used as-is, but if your team has significantly
    different characteristics the process should be modified or extended to address those needs.
</p>]]></KeyConsiderations>
        </Presentation>
        <CategorizedElement>_vEruwN-rEdqiM_wFaqLjNg</CategorizedElement>
        <CategorizedElement>_omneEMX4EduywMSzPTUUwA</CategorizedElement>
        <CategorizedElement>_t9yXEMX4EduywMSzPTUUwA</CategorizedElement>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Discipline" name="requirements" briefDescription="This discipline defines the minimal tasks required to elicit, analyze, specify, validate and manage the requirements for the system to be developed." id="_0TR2ZMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Requirements" variabilityType="na">
        <Presentation name="requirements,_0TR2ZMlgEdmt3adZL5Dmdw" briefDescription="" id="__rFCULv9EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-20T07:00:00" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Understand the problem to be solved
    </li>
    <li>
        Understand stakeholder needs (what users want)&nbsp;
    </li>
    <li>
        Define the requirements for the solution (what the system must do)
    </li>
    <li>
        Define the boundaries (scope) of the system
    </li>
    <li>
        Identify external interfaces for the system
    </li>
    <li>
        Identify technical constraints on the solution
    </li>
    <li>
        Provide the basis for planning iterations
    </li>
    <li>
        Provide the initial basis for estimating cost and schedule
    </li>
</ul>
<p>
    To achieve these goals, it is important to understand the definition and scope of the problem&nbsp;that we are trying
    to solve.&nbsp; <a class="elementLinkWithUserText" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholders</a>&nbsp;are identified and the problem to be solved is defined.
</p>
<p>
    Having agreed on the problem to be solved, the <a class="elementLink" href="./../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html" guid="_0Wh-sMlgEdmt3adZL5Dmdw">Requirements</a>&nbsp;for the system are elicited, organized, analyzed, validated and
    specified.
</p>
<p>
    Throughout the lifecycle, changes to the requirements are managed.
</p>
<p>
    The Requirements discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis & Design</a>&nbsp;discipline gets its primary input from the
        Requirements discipline
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a>&nbsp;discipline validates the system against the requirements
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration & Change Management</a>&nbsp;discipline provides the mechanisms to
        manage changes to the requirements
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a>&nbsp;discipline plans the project and assigns
        requirements&nbsp;to each iteration by analyzing the prioritized requirements and assigning work.&nbsp;
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
        <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
        <Concept>_VQ268O0KEdqHTdbLTmC5IQ</Concept>
        <Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_eYtQQO0KEdqHTdbLTmC5IQ</Concept>
        <Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
        <Concept>_zGqO0MDpEduTGJ8i4u8TMw</Concept>
        <Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
        <Checklist>_0WoFUMlgEdmt3adZL5Dmdw</Checklist>
        <Checklist>_0U6OEMlgEdmt3adZL5Dmdw</Checklist>
        <Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
        <Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
        <Guideline>_4BJ_YCxSEdqjsdw1QLH_6Q</Guideline>
        <Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
        <Guideline>_eyL0wCu-EdqSxKAVa9kmvA</Guideline>
        <Guideline>_OnoNQNSAEdmLhZ9H5Plxyw</Guideline>
        <Guideline>_1AOsMO0JEdqHTdbLTmC5IQ</Guideline>
        <Guideline>_wr24gNcGEdqz_d2XWoVt6Q</Guideline>
        <Guideline>_qq0GMAXkEduj_7BEUj1JfQ</Guideline>
        <Guideline>_6jXzYNcKEdqz_d2XWoVt6Q</Guideline>
        <Guideline>_0VAUsMlgEdmt3adZL5Dmdw</Guideline>
        <Task>_0fOAoMlgEdmt3adZL5Dmdw</Task>
        <Task>_0e1mIMlgEdmt3adZL5Dmdw</Task>
        <Task>_P9cMUPV_EdmdHa9MmVPgqQ</Task>
        <ReferenceWorkflow>_0o9ygclgEdmt3adZL5Dmdw</ReferenceWorkflow>
        <ReferenceWorkflow>_0pWNA8lgEdmt3adZL5Dmdw</ReferenceWorkflow>
        <ReferenceWorkflow>_0pJ_xslgEdmt3adZL5Dmdw</ReferenceWorkflow>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Discipline" name="analysis_and_design" briefDescription="This discipline explains how to create a design from requirements that can be implemented by developers." id="_0TX9AMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Analysis &amp; Design" variabilityType="na">
        <Presentation name="architecture,_0TX9AMlgEdmt3adZL5Dmdw" briefDescription="" id="_Bbq2MLv-EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-27T06:43:38" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purposes of Analysis &amp; Design are:
</p>
<ul>
    <li>
        To transform the requirements into a design of the system-to-be.
    </li>
    <li>
        To evolve a robust architecture for the system.
    </li>
    <li>
        To adapt the design to match the implementation environment.
    </li>
</ul>
<p>
    The Analysis &amp; Design discipline is related to other disciplines, as follows:
</p>
<ul>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a> discipline provides the primary input for Analysis and Design.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/implementation,_0TeDoMlgEdmt3adZL5Dmdw.html" guid="_0TeDoMlgEdmt3adZL5Dmdw">Implementation</a> discipline implements the design.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a> discipline tests system designed during Analysis and Design.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a> discipline plans the project, and each iteration.
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations><![CDATA[<p>
    Creating and applying architectural mechanisms is essential for creating a robust architecture. See more on
    architectural mechanisms at <a class="elementLink"
    href="./../../openup_basic/customcategories/architectural_mechanisms,_2l8U4K4sEdudp4CB-AFxtw.html"
    guid="_2l8U4K4sEdudp4CB-AFxtw">Architectural Mechanisms</a>.
</p>]]></KeyConsiderations>
        </Presentation>
        <Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
        <Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
        <Concept>_Z53x0BapEduSTJywppIxVQ</Concept>
        <Concept>_0YP18MlgEdmt3adZL5Dmdw</Concept>
        <Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
        <Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
        <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
        <Checklist>_17PYUNd6EdmIm-bsRSNCgw</Checklist>
        <Checklist>_0XSzsMlgEdmt3adZL5Dmdw</Checklist>
        <Guideline>_we3F4ACpEdu8m4dIntu6jA</Guideline>
        <Guideline>_T9nygClEEduLGM8dfVsrKg</Guideline>
        <Guideline>_mDf2EBapEduSTJywppIxVQ</Guideline>
        <Guideline>_0gpkAMlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_0gjdYMlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
        <Guideline>_42UD4A3tEduibvKwrGxWxA</Guideline>
        <Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_ienXEEyAEdu-df7p0PuRvQ</Guideline>
        <Guideline>_CFAswNbzEdqu5o2S60g5LA</Guideline>
        <Guideline>_1fM3AC9_EduW5uTjiIcspQ</Guideline>
        <Guideline>_2uan8NbyEdqu5o2S60g5LA</Guideline>
        <Task>_0f-1oMlgEdmt3adZL5Dmdw</Task>
        <Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
        <Task>_0fshwMlgEdmt3adZL5Dmdw</Task>
        <ReferenceWorkflow>_0sx7islgEdmt3adZL5Dmdw</ReferenceWorkflow>
        <ReferenceWorkflow>_0sluQslgEdmt3adZL5Dmdw</ReferenceWorkflow>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Discipline" name="implementation" briefDescription="This discipline explains how to implement a technical solution that conforms to the design, works within the architecture and supports the requirements." id="_0TeDoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Implementation" variabilityType="na">
        <Presentation name="development,_0TeDoMlgEdmt3adZL5Dmdw" briefDescription="" id="_D5dHQLv-EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T07:39:25" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Incrementally build the system.
    </li>
    <li>
        Verify that the technical units used to build the system work as specified.
    </li>
</ul>
<p>
    With each iteration, the tasks in this discipline will evolve an ever more capable and ever more stable <a class="elementLink" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a>.
</p>
<p>
    When working on the system, the <a class="elementLink" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">Developer</a>&nbsp;will use the architecture and also be constrained by the
    architecture.
</p>
<p>
    This&nbsp;discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a>&nbsp;discipline defines&nbsp;what will be implemented.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis & Design</a>&nbsp;discipline organizes and constrains the
        implementation.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/test,_0TkKQMlgEdmt3adZL5Dmdw.html" guid="_0TkKQMlgEdmt3adZL5Dmdw">Test</a>&nbsp;discipline validates that system&nbsp;built meets
        the&nbsp;requirements.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration & Change Management</a>&nbsp;discipline provides the mechanisms to
        manage changes to the system built.
    </li>
    <li>
        The <a class="elementLink" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a>&nbsp;discipline plans what functionality will be implemented
        in each iteration.
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
        <Concept>_aFeZgJquEdukqcRKZBQN9w</Concept>
        <Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_Poc7IPDzEdqYgerqi84oCA</Concept>
        <Concept>_0lnRMMqOEduwrYVlQ9zp3w</Concept>
        <Guideline>_0Y0dsMlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_eRutgC5QEduVhuZHT5jKZQ</Guideline>
        <Guideline>_i8bUEL6cEdqti4GwqTkbsQ</Guideline>
        <Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
        <Task>_0iL1EMlgEdmt3adZL5Dmdw</Task>
        <Task>_0hyzgMlgEdmt3adZL5Dmdw</Task>
        <Task>_0iYCUMlgEdmt3adZL5Dmdw</Task>
        <ReferenceWorkflow>_h2-iAfimEdmugcVr9AdHjQ</ReferenceWorkflow>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Discipline" name="test" briefDescription="This discipline defines the minimal set of tasks required to plan, implement, run and evaluate the testing of a system." id="_0TkKQMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test" variabilityType="na">
        <Presentation name="test,_0TkKQMlgEdmt3adZL5Dmdw" briefDescription="" id="_FuQswLv-EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T06:24:16" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Find and document defects.
    </li>
    <li>
        Validate and prove the assumptions made in design and requirement specifications through concrete demonstration.
    </li>
    <li>
        Validate that the software product works as designed.
    </li>
    <li>
        Validate that the requirements are implemented appropriately.
    </li>
</ul>
<p>
    A good test effort is based on the philosophy of test early and test often. In addition, it is driven by questions such
    as:
</p>
<ul>
    <li>
        How could this software break?
    </li>
    <li>
        In what possible situations could this software fail to work predictably?
    </li>
</ul>
<p>
    Testing challenges the assumptions, risks, and uncertainty inherent in the work of other disciplines, and addresses
    those concerns using concrete demonstration and impartial evaluation.
</p>
<p>
    The Test discipline is related to the other disciplines in the following ways:
</p>
<ul>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/requirements,_0TR2ZMlgEdmt3adZL5Dmdw.html" guid="_0TR2ZMlgEdmt3adZL5Dmdw">Requirements</a> discipline captures requirements for the software product, which is
        one of the primary inputs for identifying what tests to perform.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/analysis_and_design,_0TX9AMlgEdmt3adZL5Dmdw.html" guid="_0TX9AMlgEdmt3adZL5Dmdw">Analysis and Design</a> discipline determines the appropriate design for the
        software product, which is another important input for identifying what tests to perform.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/implementation,_0TeDoMlgEdmt3adZL5Dmdw.html" guid="_0TeDoMlgEdmt3adZL5Dmdw">Implementation</a> discipline produces builds of the software product that are
        validated by the Test discipline. Within an iteration, multiple builds will be tested - typically one per test
        cycle.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/project_management,_0TqQ4MlgEdmt3adZL5Dmdw.html" guid="_0TqQ4MlgEdmt3adZL5Dmdw">Project Management</a> discipline plans the project and the necessary work in each
        iteration. Described in an Iteration Plan, this artifact is an important input used when you define the correct
        evaluation mission for the test effort.
    </li>
    <li>
        The <a class="elementLinkWithUserText" href="./../../openup_basic/disciplines/config_and_change_management,_0TwXgMlgEdmt3adZL5Dmdw.html" guid="_0TwXgMlgEdmt3adZL5Dmdw">Configuration and Change Management</a> discipline controls changes within the
        project. The test effort verifies that each change has been completed appropriately. Test assets are kept
        under&nbsp;configuration management.<br />
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_0jnYcMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_0aJ6cMlgEdmt3adZL5Dmdw</Concept>
        <Concept>_0jhR0MlgEdmt3adZL5Dmdw</Concept>
        <Checklist>_0Zxf8MlgEdmt3adZL5Dmdw</Checklist>
        <Checklist>_0Z9tMMlgEdmt3adZL5Dmdw</Checklist>
        <Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_0jzlsMlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_0aDz0MlgEdmt3adZL5Dmdw</Guideline>
        <Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
        <Task>_0iwc0clgEdmt3adZL5Dmdw</Task>
        <Task>_0jVEkMlgEdmt3adZL5Dmdw</Task>
        <Task>_0jO98MlgEdmt3adZL5Dmdw</Task>
        <ReferenceWorkflow>_0o9ygclgEdmt3adZL5Dmdw</ReferenceWorkflow>
        <ReferenceWorkflow>_0nz79clgEdmt3adZL5Dmdw</ReferenceWorkflow>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Discipline" name="project_management" briefDescription="" id="_0TqQ4MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Project Management" variabilityType="na">
        <Presentation name="project_management,_0TqQ4MlgEdmt3adZL5Dmdw" briefDescription="" id="_GybfgLv-EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T12:15:05" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Keep the team focused on continually delivering tested software product for stakeholder evaluation
    </li>
    <li>
        Help prioritize the sequence of work
    </li>
    <li>
        Help create an effective working environment to maximize team productivity
    </li>
    <li>
        Keep stakeholders and the team informed on project progress
    </li>
    <li>
        Provide a framework to manage project risk and continually adapt to change
    </li>
</ul>
<p>
    Project management acts as a bridge between the stakeholders and the development team. It is important that project
    management activities add value to creating a high performance work environment where
</p>
<ul>
    <li>
        Stakeholders have confidence in the team’s ability to successfully deliver value and understand the capabilities
        and tradeoffs of the technical platform
    </li>
    <li>
        Project team members understand stakeholder intentions and confirm that understanding by continually producing a
        working software product for evaluation
    </li>
</ul>
<p>
    The <a class="elementLinkWithUserText" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">Project Manager</a> works with <a class="elementLinkWithUserText" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholders</a> to create a coarse-grained <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html" guid="_0a6vcMlgEdmt3adZL5Dmdw">Project Plan</a> based on the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">Vision</a>
    for the project. This project plan describes the lengths and objectives of the four <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/concepts/phase,__7xOEC7aEdqHMdmRzC0-2g.html" guid="__7xOEC7aEdqHMdmRzC0-2g">Phases</a> and the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html" guid="_lam4ADkBEduxovfWMDsntw">Iterations</a> within each phase.
</p>
<p>
    At the beginning of each iteration, the project manager works with stakeholders and the development team to prioritize
    requirements, change requests, and defects in the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Work Item List</a> and allocate them to the upcoming iteration.
</p>
<p>
    The project manager then works with the development team to create a fine-grained <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html" guid="_0aQBEslgEdmt3adZL5Dmdw">Iteration Plan</a> based on the objectives in the project plan and the work items
    assigned to the iteration. Team members volunteer to collaborate on allocated work items and provide the project
    manager with tasks and time estimates to deliver those work items.
</p>
<p>
    The team demonstrates they understand stakeholder intentions throughout each iteration by building a working software
    product that is demonstrated to stakeholders to affirm understanding and elicit feedback. At the end of each iteration,
    the evaluation of the final <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a>
    must include test results and should be captured in a <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/status_assessment,_0bA2EMlgEdmt3adZL5Dmdw.html" guid="_0bA2EMlgEdmt3adZL5Dmdw">Status Assessment</a> and communicated to all stakeholders and team members.
</p>
<p>
    The development team demonstrates continual progress to stakeholders by reporting closed-out work items in each
    iteration through the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/reports/project_burndown,_ePrt8Dj3EduxovfWMDsntw.html" guid="_ePrt8Dj3EduxovfWMDsntw">Project Burndown</a>. The team can use <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/reports/iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA.html" guid="_uAzgkDg3Edu4E8ZdmlYjtA">Iteration Burndown</a> to demonstrate progress during an iteration.
</p>
<p>
    Project management needs to consider the uncertainties facing the project (i.e. <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html" guid="_0bsLgMlgEdmt3adZL5Dmdw">Risks</a>) and pro-actively work with stakeholders and the team to continually adapt to
    changes in business needs, system requirements, and technical capabilities.
</p>
<p>
    Project Management is an umbrella discipline which has impact and is impacted by all other disciplines.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Task>_0l53cMlgEdmt3adZL5Dmdw</Task>
        <Task>_0lC70MlgEdmt3adZL5Dmdw</Task>
        <Task>_0keUEMlgEdmt3adZL5Dmdw</Task>
        <Task>_8S2aICbYEdqh1LYUOGRh2A</Task>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Discipline" name="config_and_change_management" briefDescription="This discipline explains how to control changes to artifacts, ensuring a synchronized evolution of the set of Work Products composing a software system." id="_0TwXgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Configuration &amp;amp; Change Management" variabilityType="na">
        <Presentation name="change_management,_0TwXgMlgEdmt3adZL5Dmdw" briefDescription="" id="_H9TXMLv-EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T07:05:40" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose of this discipline is to:
</p>
<ul>
    <li>
        Maintain a consistent set of work products as they evolve.
    </li>
    <li>
        Maintain consistent builds of the software.
    </li>
    <li>
        Provide an efficient means to adapt to changes and issues and re-plan work accordingly.
    </li>
    <li>
        Provide data for measuring progress.
    </li>
</ul>
<p>
    In many organizations, the term "configuration management" implies all of these things.
</p>
<p>
    Within the context of this process, configuration management refers to the ability to maintain&nbsp;<a class="elementLink" href="./../../openup_basic/guidances/termdefinitions/version,_eX8K8ElyEducWJcS4yanqg.html" guid="_eX8K8ElyEducWJcS4yanqg">version</a>s of artifacts and consistent&nbsp;<a class="elementLink" href="./../../openup_basic/guidances/termdefinitions/configuration,__Cw30ElxEducWJcS4yanqg.html" guid="__Cw30ElxEducWJcS4yanqg">configuration</a>s of artifacts, addressing the first two objectives listed above.
    Change Management refers to the process of managing changes to configuration controlled artifacts, addressing the
    latter two objectives listed above.
</p>
<p>
    Although it is important to keep up to date versions and configurations of all work product, the primary work products
    of concern&nbsp;are the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/implementation,_0YoQcMlgEdmt3adZL5Dmdw.html" guid="_0YoQcMlgEdmt3adZL5Dmdw">Artifact: Implementation</a>&nbsp;and&nbsp;the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">Artifact: Build</a>.
</p>
<p>
    Changes are managed via the <a class="elementLinkWithType" href="./../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html" guid="_0mwzEclgEdmt3adZL5Dmdw">Task: Request Change</a>&nbsp;and subsequent prioritization and disposition of change requests via the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>.
</p>
<p>
    This discipline spans the entire lifecycle. Every other discipline relies upon the configuration and change management
    discipline to maintain a consistent, up to date, set of work products and to prioritize and track changes to those work
    products throughout the lifecycle.
</p>
<p>
    Configuration and change management is done by everyone on the development team. Because of the importance and
    pervasiveness of this discipline, configuration and change management guidance is associated with tasks and work
    products in all other disciplines.
</p>]]></MainDescription>
          <KeyConsiderations><![CDATA[<p>
    It is assumed that the project has some form of configuration management system, such as CVS, to maintain version and
    configuration information and enable collaborative development of the system. Without this, all but the most trivial of
    development will be virtually impossible.
</p>]]></KeyConsiderations>
        </Presentation>
        <Concept>_6jdvECb3Edqh1LYUOGRh2A</Concept>
        <Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
        <Concept>_0cEmAMlgEdmt3adZL5Dmdw</Concept>
        <Guideline>_fnZj0NVXEdqy9sbRhejO5Q</Guideline>
        <Guideline>_i8bUEL6cEdqti4GwqTkbsQ</Guideline>
        <Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
        <Guideline>__yQQ4L6REdqti4GwqTkbsQ</Guideline>
        <Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
        <Task>_0mwzEclgEdmt3adZL5Dmdw</Task>
        <ReferenceWorkflow>_0pJ_xslgEdmt3adZL5Dmdw</ReferenceWorkflow>
      </ContentCategory>
      <ContentCategory xsi:type="uma:DisciplineGrouping" name="openup_basic_disciplines" briefDescription="This is the list of disciplines in OpenUP/Basic providing organization of tasks." id="__BZycP1UEdmek8CQTQgrOQ" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic Disciplines" variabilityType="na">
        <Presentation name="openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ" briefDescription="" id="_AYGfoP1VEdmek8CQTQgrOQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-10T01:19:05" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    This page allows you to navigate the published configuration from the perspective of <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html" guid="_x459ktnmEdmO6L4XMImrsA">tasks</a>, organized by <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/termdefinitions/discipline,_yGUuidnmEdmO6L4XMImrsA.html" guid="_yGUuidnmEdmO6L4XMImrsA">disciplines</a>. You can see the&nbsp;tasks that have been included,&nbsp;and visit
    each&nbsp;task page to see its definition and relationships to other elements.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Discipline>_0TR2ZMlgEdmt3adZL5Dmdw</Discipline>
        <Discipline>_0TX9AMlgEdmt3adZL5Dmdw</Discipline>
        <Discipline>_0TeDoMlgEdmt3adZL5Dmdw</Discipline>
        <Discipline>_0TkKQMlgEdmt3adZL5Dmdw</Discipline>
        <Discipline>_0TqQ4MlgEdmt3adZL5Dmdw</Discipline>
        <Discipline>_0TwXgMlgEdmt3adZL5Dmdw</Discipline>
      </ContentCategory>
      <ContentCategory xsi:type="uma:Domain" name="openup_basic_wp" briefDescription="This is the list of domains in OpenUp/Basic providing organization of work products." id="_s4Z9AMWXEdqWePvIjHInwg" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic Work Products" variabilityType="na">
        <Presentation name="openup_basic_domains,_s4Z9AMWXEdqWePvIjHInwg" briefDescription="" id="-15BvSftWbF7VdZ_W8YycBQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-10T01:14:59" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    This page allows you to navigate the published configuration from the perspective of <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/termdefinitions/work_product,_H4JXwB_SEdq6CKKKq4D7YA.html" guid="_H4JXwB_SEdq6CKKKq4D7YA">work products</a>, organized by <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/termdefinitions/domain,_yHEVYdnmEdmO6L4XMImrsA.html" guid="_yHEVYdnmEdmO6L4XMImrsA">domains</a>. You can see the work products that have been included, and visit each work
    product page to see its definition and relationships to other elements.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Subdomain name="architecture" briefDescription="This is the list of work products related to architecture domain." id="_xITr8MWXEdqWePvIjHInwg" orderingGuide="" suppressed="false" presentationName="Architecture" variabilityType="na">
          <Presentation name="architecture,_xITr8MWXEdqWePvIjHInwg" briefDescription="" id="-9qPK9k01PN_COE9YPXpw8Q" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-06T08:51:46" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
        </Subdomain>
        <Subdomain name="change_management" briefDescription="This is the list of work products related to change management domain." id="_vUzp0MWeEdqiT9CqkRksWQ" orderingGuide="" suppressed="false" presentationName="Change Management" variabilityType="na">
          <Presentation name="new_domain,_vUzp0MWeEdqiT9CqkRksWQ" briefDescription="" id="-X9nP8esP9nWMvx1wmMaJAA" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-06T08:54:47" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </Subdomain>
        <Subdomain name="development" briefDescription="This is the list of work products related to development domain." id="_A9k3UMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false" presentationName="Development" variabilityType="na">
          <Presentation name="new_domain,_A9k3UMWfEdqiT9CqkRksWQ" briefDescription="" id="-xO3vqWsd3W98UXFsyp-wGA" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-06T08:56:28" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <WorkProduct>_ZTGAYL3uEdqLRJZPGVbHDA</WorkProduct>
          <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0YuXEclgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0YoQcMlgEdmt3adZL5Dmdw</WorkProduct>
        </Subdomain>
        <Subdomain name="project_management" briefDescription="This is the list of work products related to project management domain." id="_QxjGYMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false" presentationName="Project Management" variabilityType="na">
          <Presentation name="new_domain,_QxjGYMWfEdqiT9CqkRksWQ" briefDescription="" id="-N4r_U0LZhZ_K-8gfHON9BA" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-06T08:58:20" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <WorkProduct>_0aQBEslgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0a6vcMlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0bA2EMlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
          <WorkProduct>_Ckay8Cc_EduIsqH1Q6ZuqA</WorkProduct>
        </Subdomain>
        <Subdomain name="requirements" briefDescription="This is the list of work products related to requirements domain." id="_allMQMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false" presentationName="Requirements" variabilityType="na">
          <Presentation name="new_domain,_allMQMWfEdqiT9CqkRksWQ" briefDescription="" id="-d5O4LFNaAs4YRDxfxH3CRw" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-06T08:59:52" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
          <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
          <WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
        </Subdomain>
        <Subdomain name="test" briefDescription="This is the list of work products related to test domain." id="_ou4CMMWfEdqiT9CqkRksWQ" orderingGuide="" suppressed="false" presentationName="Test" variabilityType="na">
          <Presentation name="new_domain,_ou4CMMWfEdqiT9CqkRksWQ" briefDescription="" id="-Mxgu9hq0upbMqZlq1xBFYw" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-06T09:00:58" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
          <WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
        </Subdomain>
      </ContentCategory>
      <ContentCategory xsi:type="uma:RoleSet" name="openup_basic_roles" briefDescription="This is the list of roles in OpenUP/Basic." id="_TZIJ0O8NEdmKSqa_gSYthg" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic Roles" variabilityType="na">
        <Presentation name="openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg" briefDescription="" id="_Tb5J8O8NEdmKSqa_gSYthg" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-27T10:09:15" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    This page allows you to navigate the published configuration from the perspective of <a class="elementLinkWithUserText"
    href="./../../base_concepts/guidances/termdefinitions/role,_yUefQNnmEdmO6L4XMImrsA.html"
    guid="_yUefQNnmEdmO6L4XMImrsA">roles</a>. You can see the roles that have been included, and visit each role page to
    see its definition and relationships to other elements.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
        <Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
        <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
        <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
        <Role>_0dsWoMlgEdmt3adZL5Dmdw</Role>
        <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
        <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="assessment" briefDescription="These work products result from the analysis or evaluation of some particular aspect of the project, organization, business, or solution being developed. They are often used to determine the health of different aspects of the project or the organization." id="_2VBNIDz6Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Assessment" variabilityType="na">
        <Presentation name="new_work_product_kind,_2VBNIDz6Edq03rqPoNVoKg" briefDescription="" id="-5S6ney_fFdEHm49XznPRiA" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:38:35" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_0bA2EMlgEdmt3adZL5Dmdw</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="concept" briefDescription="These work products present an overview of key ideas or basic background information. They ensure that everyone on a project has a common understanding of these items." id="_8XKVwDz6Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Concept" variabilityType="na">
        <Presentation name="new_work_product_kind,_8XKVwDz6Edq03rqPoNVoKg" briefDescription="" id="-Nl-rJ_6aaAG2jpJyGm_wcg" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:39:12" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="infrastructure" briefDescription="These work products provide the required tools and technical environment to setup the required development infrastructure for a project." id="_EL6rgDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Infrastructure" variabilityType="na">
        <Presentation name="new_work_product_kind,_EL6rgDz7Edq03rqPoNVoKg" briefDescription="" id="-CKZiRxRx_TZhMbquLd4Sqw" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:40:04" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="model" briefDescription="These work products are a special kind of specification that are an abstract representation or simulation of a &amp;quot;system&amp;quot; that provides a complete description of the system from a particular perspective. Models are often used to gain a better understanding of how the system works or to document design decisions for the actual implementation. Models are often made up of several different kinds of parts, these parts are categorized as Model Elements." id="_MQbUgDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Model" variabilityType="na">
        <Presentation name="new_work_product_kind,_MQbUgDz7Edq03rqPoNVoKg" briefDescription="" id="-ARfZUsgYE1XrKQlDgr9mEQ" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:40:58" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="model_element" briefDescription="These work products are the individual parts that make-up a Model." id="_SxUOoDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Model Element" variabilityType="na">
        <Presentation name="new_work_product_kind,_SxUOoDz7Edq03rqPoNVoKg" briefDescription="" id="-cW3aVzDjHhqkVayoItUQqw" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:41:44" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="plan" briefDescription="These work products provide a description of the means of achieving an objective. A successful project may include many different types of plans." id="_ZR7b8Dz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Plan" variabilityType="na">
        <Presentation name="new_work_product_kind,_ZR7b8Dz7Edq03rqPoNVoKg" briefDescription="" id="-vpMAMS8Cz-z9DQQhxbjjLA" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:42:22" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_0aQBEslgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_0a6vcMlgEdmt3adZL5Dmdw</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="project_data" briefDescription="These work products identify the information that is used to manage the project. Collected information may either be kept as permanent records or used solely on an interim basis at a particular point in the project." id="_hOaxYDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Project Data" variabilityType="na">
        <Presentation name="new_work_product_kind,_hOaxYDz7Edq03rqPoNVoKg" briefDescription="" id="-DBPx56p4GCNFpRTT8uOmiQ" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:43:18" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
        <WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_Ckay8Cc_EduIsqH1Q6ZuqA</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="solution" briefDescription="These work products consist of those that are part of the overall solution or product, or that contribute directly to it." id="_mC_6sDz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Solution" variabilityType="na">
        <Presentation name="new_work_product_kind,_mC_6sDz7Edq03rqPoNVoKg" briefDescription="" id="-sIh01vzZACgxRrG_sv7DVw" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:43:49" changeDescription="" version="">
          <MainDescription><![CDATA[<p>
    <font face="Arial" size="2">Many work products contribute to the overall solution or product.&nbsp; Tests and test data
    is needed to validate the solution.&nbsp; User support materials of all sorts are needed in the final product.&nbsp;
    Source code and other implementation elements are required to build the final product.&nbsp; These work products,
    including those that ship with the product, are categorized as Solution.</font>
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_0YuXEclgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_0YoQcMlgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
      </ContentCategory>
      <ContentCategory xsi:type="uma:WorkProductType" name="specification" briefDescription="These work products define the interfaces between different parts of the project, especially between different domains. They define exactly what something is or what it must do. For example, the Architecture shows how system requirements are mapped into design." id="_tJJeADz7Edq03rqPoNVoKg" orderingGuide="" suppressed="false" presentationName="Specification" variabilityType="na">
        <Presentation name="new_work_product_kind,_tJJeADz7Edq03rqPoNVoKg" briefDescription="" id="-C5ih3s1Vn_9qQbjm85-GYg" orderingGuide="" suppressed="false" authors="" changeDate="2005-10-14T11:44:42" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
        <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
        <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
      </ContentCategory>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ContentPackage" name="collaboration" briefDescription="Collaboration sub-process." id="_0UCrYclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
      <MethodPackage xsi:type="uma:ContentPackage" name="core_principles" briefDescription="" id="_OGGKkMpyEdqC_NfSivunjA" orderingGuide="" suppressed="false" global="false">
        <ContentElement xsi:type="uma:Concept" name="core_principle_collaborate" briefDescription="Develop collaborative practices that foster a healthy team environment. Good collaborative practices align the interests of project participants and help them develop a shared understanding of the project." id="_KkTIsMp7EdqC_NfSivunjA" orderingGuide="" suppressed="false" presentationName="Collaborate to align interests and share understanding" variabilityType="na">
          <Presentation name="core_principle_collaborate,_KkTIsMp7EdqC_NfSivunjA" briefDescription="" id="-IXfkG-XfnoEo0xgux482Kw" orderingGuide="" suppressed="false" authors="Steve Adolph" changeDate="2006-09-28T01:35:17" changeDescription="Initial Version |Removed metaphoric photo. Removed &quot;Don't go dark&quot; collaborative practice.|Removed metaphoric photo. Removed &quot;Don't go dark&quot; collaborative practice. Removed open_up from page name.|Added &quot;organize around the architecture practice&quot;" version="0.03">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Software is created by people with different interests and skills who must work together to create software
    effectively.
</p>
<p>
    Therefore, develop practices that foster a healthy team environment. A healthy team environment enables effective
    collaboration, which aligns the interests of project participants (development team, quality assurance, product
    stakeholders, customers) and helps project participants develop a shared understanding of the project.
</p>
<h3 style="MARGIN: 12pt 0in 3pt">
    Practices
</h3>
<p style="MARGIN: 12pt 0in 3pt">
    The next sections describe the practices associated with this principle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Maintain a common understanding
</h4>
<p>
    Project participants require a common understanding of a project to cooperate effectively. Otherwise, disorder sets in,
    because the team members cannot align their understanding and interests and will work with different purposes.
</p>
<p>
    Be proactive communicating and sharing information with project participants and do not assume that everyone will just
    find what they need to know or that each person has the same understanding of the project as everyone else. Use work
    products, such as the Vision, Work Items List, and Requirements to align the understanding between the stakeholders and
    developers. Use the architecture to focus and align the interests of the developers. At the end of each iteration, get
    agreement on whether the iteration goals have been reached, and, if not, what actions must be taken.
</p>
<h4 style="MARGIN: auto 0in">
    Foster a high-trust environment
</h4>
<p>
    People who do not feel safe will not communicate their ideas, take the initiative, or admit their ignorance. In these
    low-trust work environments, activities must be laboriously planned in detailed, carefully supervised, and extensively
    audited. A team working in a low-trust environment may not be able to keep up with rapid change.
</p>
<p>
    Therefore, take actions that foster a high-trust environment:
</p>
<ul>
    <li>
        <p>
            <strong>Manage by intent.</strong> Create an environment where teams manage themselves, and managers serve as
            mentors to teams to help them complete their objectives.
        </p>
    </li>
    <li>
        <p>
            <strong>Tear down the walls.</strong> Work to remove both the physical and mental barriers that inhibit
            development of a common understanding among project participants.
        </p>
    </li>
    <li>
        <p>
            <strong>Walk a mile (or 1.6 kilometers) in someone else's shoes.</strong> Respect and try to understand the
            perspectives of others before criticizing their ideas or responding to their criticism.
        </p>
    </li>
    <li>
        <p>
            <strong>Respond to conversations with relevance.</strong> People, especially technical workers, often respond
            with argument or disagreement, which leads to rivalry and the establishment of a pecking order in which only a
            few people contribute to the discussion. Develop and encourage behavior that values curiosity and relevance
            over argument and disagreement.
        </p>
    </li>
    <li>
        <p>
            <strong>Always look to yourself first for the source of communication problems.</strong> Understand that
            everyone has a perspective that is largely invisible to the individual (although it is often obvious to
            everyone else). Develop the habit of identifying the assumptions and prejudices within yourself that lead to
            argument or lack of communication. Learn to overcome these in the moment of the conversation. This takes
            practice. There are times when others may be intractable, but often the problem can be addressed by wrestling
            with your own perspective.
        </p>
    </li>
    <li>
        <p>
            <strong>Understand the constraints of the workplace culture.</strong> Some organizations operate in a way that
            allows people to admit mistakes, ask questions, and experiment. Some organizations limit these expressions, but
            they may change, with time and effort. Some organizations have no tolerance for error, and workers put
            themselves in danger by admitting mistakes or experimenting. Understand your environment and protect yourself
            accordingly. Understand that low-trust organizations have more problems in achieving their goals and provide a
            less satisfying environment.
        </p>
    </li>
</ul>
<h4 style="MARGIN: auto 0in">
    Share responsibility
</h4>
<p>
    There may be disadvantages for individuals when they work alone. Communication with the team can become sporadic, and
    then stop. People may get into trouble and not ask for help, or not realize that the team is in trouble and needs their
    help. Their understanding of the project may become misaligned with the rest of the team. In the worse situations,
    trust breaks down as individuals see the team working at different purposes to their interests.
</p>
<p>
    Therefore, while individuals have primary responsibility for their work products, responsibility for work products is
    shared. Nothing is someone else's responsibility. This may mean either taking up slack and working with someone who is
    lagging for some reason or asking for help. Experienced staff should be extra-vigilant and watch over less-experienced
    staff, encouraging them to ask for help if necessary.
</p>
<h4 style="MARGIN: auto 0in">
    Learn continuously
</h4>
<p>
    Not only is software development a fast-developing field where technical skills rapidly become obsolete, it is also an
    empirical process, where software is developed in a manner that sometimes resembles trial and error. Furthermore,
    software is developed by teams of people who must work together to achieve results.
</p>
<p>
    Therefore, continuously develop both your technical and interpersonal skills. Learn from the examples of your
    colleagues. Take the opportunity to be both a student of your colleagues, as well as a teacher to them. Always increase
    your personal ability to overcome your own antagonism toward other team members.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Organize around the architecture
</h4>
<br />
<p class="MsoNormal" style="MARGIN: 0in 0in 0pt">
    As projects grow in size, communication between team members becomes increasingly complex.<span     style="mso-spacerun: yes">&nbsp;</span>While all team members understand the overall system, they can focus primarily
    on the one or more subsystems they are responsible for. Organizing around the architecture also helps with
    communication by providing the team with a common vocabulary and shared mental model of the system<strong>.</strong>
    Communication between team members becomes increasingly complex. Therefore, organize the team around the architecture
    and the vocabulary and shared mental model of the system. However, be watchful that individuals and teams organized
    this way do not form a so-called <em>silo mentality</em>, where they focus strictly on their subsystems and become
    ignorant of the other subsystems.
</p>
<p>
    An architecture that reflects the organization’s structure is not evidence that the team has successfully organized
    around the architecture. If organizations and teams are not organized around the architecture, then the architecture
    will naturally conform to the organization, as a result of political and cultural influences. In the end, the
    architecture and the organization will almost always be a reflection of each other. The goal is to guide team
    organization from the needs of the architecture as much as possible.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="core_principle_evolve" briefDescription="Divide the project up into short, time-boxed iterations to demonstrate incremental value and obtain early and continuous feedback." id="_GXiogMvoEdqukPpotm3DYg" orderingGuide="" suppressed="false" presentationName="Evolve to continuously obtain feedback and improve" variabilityType="na">
          <Presentation name="core_principle_evolve,_GXiogMvoEdqukPpotm3DYg" briefDescription="" id="-aMD1wQVJLzzlMARfHBdOBQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T01:35:31" changeDescription="removed OpenUP from page name." version="0.02">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    It is usually not possible to know all stakeholders' needs, be aware of all project risks, comprehend all project
    technologies, or know how to work with your colleagues. Even if it were possible to know all of these things, they are
    likely to change over the life of the project. Therefore, divide the project into short, time-boxed iterations to
    demonstrate incremental value and to get early and continuous feedback.<span style="mso-spacerun: yes">&nbsp;</span>
</p>
<p>
    The intention behind this principle is to continuously get feedback and to improve both the product and the process of
    the project team. When you provide structure and create a mindset for continuous feedback and improvement, changes are
    accommodated more easily, feedback is captured early and often, high-priority risks are confronted early in the
    project. By constantly identifying and attacking risks, there is more confidence in project progress and quality.
</p>
<p>
    Not only does the product evolve, but the team also finds better ways to work together and get involved with
    stakeholders.<span style="mso-spacerun: yes">&nbsp;</span> The process followed by the team can be adjusted accordingly
    to leverage lessons learned and adjust project pace and needs.
</p>
<h3 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Practices
</h3>
<p style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    The next sections describe the practices associated with this principle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Develop your project in iterations
</h4>
<p>
    Developing a system in a single, linear pass is difficult, because it makes it expensive to incorporate changes and new
    knowledge. Worse, it can delay the discovery and mitigation of risks, because development efforts are scheduled later
    in the lifecycle.
</p>
<p>
    Therefore, divide your project into a series of time-boxed iterations, and plan your project iteratively. This
    iterative strategy enables you to incrementally deliver capabilities (such as an executable, usable subset of
    implemented and tested requirements) that can be assessed by stakeholders at the end of each iteration. This provides
    rapid and timely feedback loops so that issues can be addressed and improvements made at a lower cost. Also, this is
    accomplished while you still have sufficient budget and time left to do so, and you have not gone so far ahead that
    major rework is required. Iterative development enables teams to continuously improve software throughout the
    development <a href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" guid="_0uyGoMlgEdmt3adZL5Dmdw">lifecycle</a>.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Focus iterations on meeting the next management milestone
</h4>
<p>
    Without a focus to bring closure to important project issues, such as stakeholder concurrence regarding scope and
    proving the proposed architecture, a project can appear to make progress while risks and unresolved issues pile up.
</p>
<p>
    Therefore, divide the project into phases (such as Inception, Elaboration, Construction, and Transition), with each
    phase having a clearly visible management milestone. The focus of each iteration within a phase is on achieving that
    milestone. <span style="mso-spacerun: yes">&nbsp;</span>
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Manage risks
</h4>
<p>
    Deferring difficult and risky issues until later in a project significantly increases the risk of project failure. Such
    procrastination may lead to investing in the wrong technologies, a bad design, or a set of requirements that may not
    address stakeholder needs.
</p>
<p>
    Therefore, attack <a href="./../../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html" guid="_0bsLgMlgEdmt3adZL5Dmdw">risks</a> early, or they will attack you. Continuously identify and prioritize risks,
    and then devise strategies to mitigate them. Determine the focus of iterations based on risks. For example,
    architecturally significant risks should be addressed early in the project, no later than the end of Elaboration phase,
    when the architecture has been proven and baselined.
</p>
<p>
    At the beginning of each iteration, the entire team should consider what risks they are facing, and update the risk
    list. Make it each team member’s and stakeholder’s responsibility to have the courage to speak up and openly discuss
    risks, as well as to have the courage not to criticize the people who do speak up, even though the risk may point to a
    flaw in their area of responsibility. For each risk, articulate a plan for tracking and mitigating the risk.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Embrace and manage change
</h4>
<p>
    Change is inevitable, and while change presents opportunities to enhance stakeholder value, unconstrained change will
    result in a bloated, deficient system and unmet stakeholder needs. Furthermore, the later in the development cycle a
    change is made, the more the change is likely to cost.
</p>
<p>
    Therefore, both embrace and manage change. Embracing change helps you to build a system that addresses stakeholder
    needs, and managing change allows you to reduce costs and improve predictability of those changes. Changes made early
    in the project can usually be made with limited cost. As you progress in your project, changes can become increasingly
    costly.
</p>
<p>
    To satisfy customer needs, you typically need to introduce changes to the project, but the customer must be made aware
    of the impact that those changes have on the project cost and schedule. Understand the impact of a change in the
    current phase, and isolate team members from disruptive changes during the current iteration. Change requests are
    reviewed and prioritized during the current iteration, but are not acted upon until assigned to a future iteration.
</p>
<p>
    If necessary, document the changes. For informal projects, a discussion with stakeholders may be enough.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Measure progress objectively
</h4>
<p>
    If you do not objectively know how your project is progressing, you do not really know if it is failing or succeeding.
    Uncertainty and change make a software project’s progress difficult to measure objectively, and people have a most
    amazing ability to believe all is well in the face of catastrophe.
</p>
<p>
    Therefore, get a clear picture of project status by objectively measuring progress. The best measure of progress is the
    delivery of working software, which is something that you do by taking an evolutionary approach.<span     style="mso-spacerun: yes">&nbsp;</span>You can also define a set of objective <a href="./../../../openup_basic/guidances/concepts/metrics,_0mYYkMlgEdmt3adZL5Dmdw.html" guid="_0mYYkMlgEdmt3adZL5Dmdw">metrics</a> to collect during an iteration (for example, requirements that were
    implemented and validated, number of defects issued compared with number fixed) and review them as part of the <a href="./../../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html" guid="_0l53cMlgEdmt3adZL5Dmdw"><span     style="COLOR: windowtext">iteration assessment</span></a>. Do not rely on single metrics. Rather, use a combination of
    metrics and look for trends.
</p>
<h4 style="MARGIN: 12pt 0in 3pt; TEXT-ALIGN: justify" align="justify">
    Continuously re-evaluate what you do
</h4>
<p>
    People make mistakes during a project. If we chose to hide those mistakes, then we risk repeating the same mistakes. In
    addition, such repressed social dynamic issues can poison the team.
</p>
<p>
    Therefore, on a regular basis, ask questions and verify assumptions about the project. Regularly meet with the team
    to&nbsp;track status and identify risks and issues. This can be done daily when the team gathers to share the status of
    individual responsibilities and identify and address issues. At the end of iterations, <a href="./../../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html" guid="_0l53cMlgEdmt3adZL5Dmdw"><span     style="COLOR: windowtext">assess the status</span></a> of what has been done and look for areas of improvement that can
    be addressed in the next iteration. Have a retrospective review at the end of the project and capture lessons learned
    to run future projects in a more efficient way.
</p>
<p>
    If we always challenge what we do and seek new, innovative ways to develop software, we improve how we work. This leads
    to improved project results.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="core_principle_focus" briefDescription="Articulate essential technical decisions through a growing architecture." id="_9gocwMvoEdqukPpotm3DYg" orderingGuide="" suppressed="false" presentationName="Focus on articulating the architecture" variabilityType="na">
          <Presentation name="core_principle_focus,_9gocwMvoEdqukPpotm3DYg" briefDescription="" id="-HTMJFV29MTZkKWqnIo01Gg" orderingGuide="" suppressed="false" authors="Steve Adolph" changeDate="2006-09-28T01:35:45" changeDescription="Added first draft of content." version="0.02">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Without an architectural foundation, a system will evolve in an inefficient and haphazard way. Such a system often
    proves difficult to evolve, reuse, or integrate without substantial rework. It is also difficult to organize the team
    or communicate ideas without the common technical focus that the architecture provides.
</p>
<p>
    Therefore, use the architecture as a focal point for developers to align their interests and ideas by articulating the
    essential technical decisions through the growing architecture.
</p>
<h3>
    Practices
</h3>
<p>
    The next sections describe the practices associated with this principle.
</p>
<h4>
    Create the architecture for what you know today
</h4>
<p>
    As Albert Einstein said, make everything as simple as possible but no simpler. Software projects are
    resource-constrained, and the desire of developers to create elegant solutions may lead to a system of greater
    complexity than the stakeholder requires. Efforts to future-proof a system in a turbulent or uncertain environment will
    likely lead to code bloat , thus increasing overall cost with little actual benefit to show for it.
</p>
<p>
    Therefore, create architectures that address the stakeholder’s real needs, and provide appropriate flexibility and
    speed for the requirements as they are known today. Avoid the desire, no matter how well intentioned, to speculate on
    future requirements and thereby over-engineer the architecture: if you have the skill to architect something today,
    then clearly you must also have the skill to architect it tomorrow when you actually need to.
</p>
<h4>
    Cope with complexity by raising the level of abstraction
</h4>
<p>
    Software is complex, and people have a limited capacity for coping with complexity. As a system gets larger, it becomes
    difficult for the team to develop a common understanding of the system, because it is hard to see the bigger picture.
</p>
<p>
    Therefore, use models to raise the level of abstraction to focus on important high-level issues, such as relationships
    and patterns, rather than getting bogged down in details. Modeling raises the level of abstraction and allows the
    system to be more easily understood from different perspectives.
</p>
<h4>
    Let the problem drive the solution
</h4>
<p>
    The architecture may become difficult to maintain and adapt to new stakeholder needs when technology, rather than the
    problem, drives the solution.
</p>
<p>
    Therefore, let the needs of the stakeholders guide the architecture, instead.
</p>
<h4>
    Organize the architecture into loosely coupled, highly cohesive components
</h4>
<p>
    Tight coupling between components makes a system fragile and difficult to understand. Software is expensive to create,
    so if existing components can be reused, that may reduce effort required to create a system.
</p>
<p>
    Therefore, organize the architecture of the system into components that to maximize cohesion and minimize coupling.
    This improves comprehension, increases flexibility, and increases opportunities for re-use.
</p>
<h4>
    Reuse existing assets
</h4>
<p>
    It is wasteful to build what you can simply reuse, download, or even buy.
</p>
<p>
    Therefore, make every effort to reuse existing assets. Developers are often reluctant to reuse assets, because those
    assets do not exactly meet their needs or those assets are of poor quality. Be prepared to balance the savings you can
    realize using an existing asset, even if the asset requires distorting the architecture or relaxing a constraint.
</p>
<h4>
    Leverage the architecture as a collaborative tool
</h4>
<p>
    Lack of a common understanding by developers about a system leads to indecision and contrary opinions among developers
    and can quickly paralyze the project. Developers may have different mental models of the system and work at cross
    purposes to each other.
</p>
<p>
    Therefore, create and evolve the system architecture with the intention of using it to align the developer’s competing
    mental models of the system. A good architecture facilitates collaboration by providing a common vocabulary for all
    discussions regarding the system under development.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="core_principle_balance" briefDescription="Develop a solution that maximizes stakeholder benefits and complies with constraints  placed on the project." id="_ssG6MMvpEdqukPpotm3DYg" orderingGuide="" suppressed="false" presentationName="Balance competing priorities to maximize stakeholder value" variabilityType="na">
          <Presentation name="core_principle_balance,_ssG6MMvpEdqukPpotm3DYg" briefDescription="" id="-I4IbR1GW6IFBCdq9SiMUsw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T01:34:53" changeDescription="Removed metaphoric photo Removed open_up from page name." version="0.02">
            <MainDescription><![CDATA[<h3 style="MARGIN: 12pt 0in 3pt">
    Introduction
</h3>
<p style="MARGIN: 12pt 0in 3pt">
    Systems are rarely all things to all people. Often, attempts to make them so are wasteful and result in bloated
    systems.
</p>
<p>
    Therefore, project participants and stakeholders must collaborate to develop a solution that maximizes stakeholder
    benefits and complies with constraints placed on the project. Achieving balance is a dynamic process because as both
    the stakeholders and project participants learn more about the system, their priorities and constraints change.
</p>
<p>
    To be successful, stakeholders and the project participants must converge on a clear understanding and agreement of
    these three factors:
</p>
<ul>
    <li>
        Problem to be solved
    </li>
    <li>
        Constraints places on the development team (cost, schedule, resources, regulations)
    </li>
    <li>
        Constraints placed on the solution
    </li>
</ul>
<p>
    Collectively, these three items represent the requirements for the development of the system. The challenge for all
    project participants is creating a solution that maximizes value delivered to the stakeholders, subject to the
    constraints. Balance is about making the critical cost-benefit trade-offs between desired features and the subsequent
    design decisions that define the a<span>rchitecture of the system.</span>
</p>
<p>
    Discovering the balance point is challenging, elusive, and ongoing, because the balance point is dynamic. As the system
    evolves, stakeholder needs change, new opportunities appear, risks are resolved, new risks appear, and the development
    team discovers new realities about the system. Change happens throughout the development cycle. Therefore, stakeholders
    and developers must be prepared to re-evaluate commitments, reset expectations, and adjust plans accordingly as the
    system evolves.
</p>
<h3 style="MARGIN: 12pt 0in 3pt">
    Practices
</h3>
<p style="MARGIN: 12pt 0in 3pt">
    The next sections describe the practices associated with this principle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Know your audience
</h4>
<p>
    You cannot know how to make effective trade-offs if you do not know who the stakeholders are and what they really want.
</p>
<p>
    Therefore, know your stakeholders. Better yet, work closely with them to ensure that you know their needs. Start by
    identifying all stakeholders, and then maintain open and frequent communication and collaboration between them and the
    development team.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Separate the problem from the solution
</h4>
<p>
    Too often, we run headlong into a solution without understanding the problem. After all, we are taught how to solve
    problems, not how to define problems, so that's easier. However, this limits our understanding of the problem, imposes
    artificial constraints,&nbsp;and makes it difficult to balance trade-offs, or to even know what the trade-offs are.
</p>
<p>
    Therefore, make sure that you understand the problem before you define the solution. By clearly separating the problem
    (what the customer needs) from the solution (what the system must do), it is easier to maintain the proper focus and
    easier to accommodate alternate ways of solving the problem.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Create a shared understanding of the domain
</h4>
<p>
    Domain experts often have limited technical expertise; developers, architects and testers often have limited domain
    expertise; and reviewers and other stakeholders often have limited time to commit to the project and learn the problem
    domain. As a result, people often have an inconsistent or poor understanding of the problem domain, which causes
    communication problems and increases the likelihood of delivering poor value to the stakeholders.
</p>
<p>
    Therefore, enhance and share all parties’ understandings of the domain. A concise and shared understanding of the
    problem domain enhances communication and project effectiveness. Start by defining the problem in the Vision document.
    As your understanding increases, capture key domain concepts and terminology in the Glossary to ensure a consistent
    shared use of the language of the domain.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Use scenarios and use cases to capture requirements
</h4>
<p>
    Many companies still document requirements as a list of declarative statements, which are sometimes called the ”shall
    statements.” These lists are often difficult for stakeholders to understand, because they require the end user to read
    through and mentally translate the list into a visualization of how the requirements will interact with the system. .
</p>
<p>
    Therefore, use scenarios and use cases to capture functional requirements in a form that is easy for stakeholders to
    understand. Nonfunctional requirements, such as performance, stability, or usability requirements, are important and
    can be documented in the Supporting Requirements, using traditional techniques.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Establish and maintain agreement on priorities
</h4>
<p>
    Making poor decisions in deciding what to develop next can result in wasted effort, delivering capabilities that are
    never used, or identifying problems late in the project that result in delays and even project failure.
</p>
<p>
    Therefore, prioritize requirements for implementation by regularly working with the stakeholders during product
    evolution. Make choices that deliver value and reduce risks, while building a system that can evolve.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Make the trade-offs to maximize value
</h4>
<p>
    Cost-benefit trade-offs cannot be made independent of the architecture. Requirements establish the benefits of the
    system to the stakeholder, while architecture establishes the cost. The cost of a benefit may influence the
    stakeholder's perceived value of the benefit.
</p>
<p>
    Therefore, work with the stakeholders and developers to prioritize requirements and develop candidate architectures to
    implement those solutions. Use the candidate architectures to evaluate the cost of the benefits. Candidate solutions
    are considered at a high level when determining architectural feasibility. Different architectural perspectives can
    result in different assessment of cost versus benefit. The&nbsp;candidate architecture&nbsp;that provides the most
    coverage at the lowest cost is selected for further development.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Manage scope
</h4>
<p>
    Change is inevitable. Although change presents opportunities to enhance stakeholder value, unconstrained change will
    result in a bloated, deficient system and unmet stakeholder needs.
</p>
<p>
    Therefore, manage change while maintaining the agreements with the stakeholders. Modern processes always manage change,
    continually adapting to changes in the environment and stakeholder needs, assessing the impact of changes, making
    trade-offs, and re-prioritizing work. Stakeholder and developer expectations must be realistic and aligned throughout
    the development lifecycle.
</p>
<h4 style="MARGIN: 12pt 0in 3pt">
    Know when to stop
</h4>
<p>
    Over-engineering a system not only wastes resources but also leads to an overly complex system.
</p>
<p>
    Therefore, stop developing the system when the desired quality is achieved. Remember that “Quality is conformance to
    the requirements” <a href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[CRO79]</a>. This is what gives a sense of closure to the practice. Separate the problem
    from the solution, ensuring that the solution does, indeed, solve the problem. After the critical requirements are
    implemented and validated, the system is ready for stakeholder acceptance.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ContentPackage" name="uc_modeling" briefDescription="Elements specific to UC modeling." id="_L79ggDR5EdutE_HNDTJk5Q" orderingGuide="" suppressed="false" global="false">
        <ContentElement xsi:type="uma:Artifact" name="uc_model" briefDescription="" id="_W2SgEDR5EdutE_HNDTJk5Q" orderingGuide="" suppressed="false" presentationName="Use-Case Model" variabilityType="na"/>
      </MethodPackage>
      <ContentElement xsi:type="uma:Role" name="any_role" briefDescription="Anyone on a team can fill this role of performing general tasks." id="_0dsWoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Any Role" variabilityType="na">
        <Presentation xsi:type="uma:RoleDescription" name="any_role,_0dsWoMlgEdmt3adZL5Dmdw" briefDescription="" id="_NqqcUqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-11T08:34:17" changeDescription="" version="">
          <MainDescription><![CDATA[<p>
    This role allows anyone on a team to perform general tasks:
</p>
<ul>
    <li>
        Access artifacts in the configuration control system for development and maintenance
    </li>
    <li>
        Submit change requests for the project
    </li>
    <li>
        Participate in assessments and reviews
    </li>
    <li>
        Volunteer to work on a particular iteration
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <AssignmentApproaches></AssignmentApproaches>
          <Skills></Skills>
          <Synonyms></Synonyms>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:SupportingMaterial" name="references" briefDescription="Additional references that may be useful, including books, method plug-ins, and commercial methodology products." id="_9ToeIB83Edqsvps02rpOOg" orderingGuide="" suppressed="false" presentationName="References" variabilityType="na">
        <Presentation name="references,_9ToeIB83Edqsvps02rpOOg" briefDescription="" id="-aCI9T-9TIe8D35yXBU6qvg" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-13T11:43:56" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ADO03</a> </TD>
<TD colSpan=2>Adolph, Bramble, Cockburn, and Pols <EM>Patterns for Effective Use Cases</EM>, Addison Wesley, 2003. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ADO04</a> </TD>
<TD colSpan=2>Adolph, Bramble, Cockburn, and Pols <EM>Tutorial 17: Patterns for Writing Effective Use Cases</EM>, presented at the 19th Annual Conference on Object-Oriented Programming, Systems, Languages and Applications, 2004.</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALE77</a> </TD>
<TD colSpan=2>Alexander, C. <EM>A Pattern Language</EM>, Oxford University Press, 1977 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALE79</a> </TD>
<TD colSpan=2>Alexander, C., <EM>A Timeless Way of Building</EM>, Oxford University Press, 1979 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALL02</a> </TD>
<TD colSpan=2>Allamaraju, S. <EM>Architecture Paradox</EM>, <a href="http://www.sei.cmu.edu/architecture/essays.html">http://www.sei.cmu.edu/architecture/essays.html</a>. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">ALU03</a> </TD>
<TD colSpan=2>
<P>Alur, D., Crupi, J., Malks, D., <EM>Core J2EE Patterns: Best Practices and Design Strategies</EM>, Prentice Hall/Sun Press, 2001.</P></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%">
<P>AMB02</P>
<P>AMB03</P>
<P>AMB04</P>
<P>AMB06</P>
<P><a name="">BOE88</a> </P></TD>
<TD colSpan=2>
<P>Ambler, S.W. <EM>Agile Modeling: Effective Practices for Extreme Programming and Unified Process</EM>. Wiley Publishing, 2002.</P>
<P>Ambler, S.W. <EM>Agile Database Techniques: Effective Strategies for the Agile Software Developer</EM>.&nbsp; Wiley Publishing, 2003.</P>
<P>Ambler, S.W. <EM>The Object Primer 3rd Edition: Agile Model Driven Development with UML 2</EM>. Cambridge University Press, 2004.</P>
<P>Ambler, S.W. and Sadalage, P.J. <EM>Refactoring Databases: Evolutionary Database Design</EM>.&nbsp; Addison Wesley, 2006.</P>
<P>Boehm, B., Papaccio, C. <EM>Understanding and Controlling Software Cost</EM>, IEEE Trans. on Software Engineering, Oct. 1988. </P></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BOE95</a> </TD>
<TD colSpan=2>Boehm, B. <EM>Anchoring the Software Process</EM>, <a href="http://sunset.usc.edu/publications/TECHRPTS/1995/usccse95-507/ASP.pdf">http://sunset.usc.edu/publications/TECHRPTS/1995/usccse95-507/ASP.pdf</a> (Get <a href="http://www.adobe.com/products/acrobat/alternate.html" target="">Adobe reader</a>.) </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%">
<P>BRO95</P></TD>
<TD colSpan=2>
<P>Brooks, F.P <EM>The Mythical Man Month: Essays on Software Engineering, 20th Anniversary Edition</EM>.&nbsp;Addison Wesley Professional, 1995. </P></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BOO05</a> </TD>
<TD colSpan=2>Booch, G., Rumbaugh, J., Jacobson, I.<EM>The Unified Modeling Language User Guide</EM>, Addison-Wesley Professional, 2005</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">BUS96</a> </TD>
<TD colSpan=2>Buschmann, F., Meunier, R., Rohnert, H.,Sommerlad, P., Stal, M., <EM>Pattern-Oriented Software Architecture -- A System of Patterns</EM>, Wiley, 1996. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%">
<P><a name="">COH05</a>&nbsp;</P>
<P><a name="">COP95</a> </P></TD>
<TD colSpan=2>
<P>Cohn, M. <EM>Agile Estimation and Planning</EM>, Addison Wesley Longman, 2005 </P>Coplien, J., Schmidt, D., <EM>Pattern Languages of Program Design</EM>,Addison-Wesley Professional, 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">COP95</a> </TD>
<TD colSpan=2>Coplien, J., Schmidt, D., <EM>Pattern Languages of Program Design</EM>,Addison-Wesley Professional, 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">CRO79</a> </TD>
<TD colSpan=2>Crosby, Philip. <EM>Quality is Free: The Art of Making Quality Certain</EM>, McGraw-Hill, 1979. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">GAM95</a> </TD>
<TD colSpan=2>Gamma, E., Helm, R., Johnson, R., Vlissides, J., <EM>Design Patterns: Elements of Reusable Object-Oriented Software</EM>, Addison-Wesley Professional; 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">GAB98</a> </TD>
<TD colSpan=2>Gabriel, Richard P., <EM>Patterns of Software: Tales from the Software Community</EM>, Oxford University Press, 1998. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">GAR93</a> </TD>
<TD colSpan=2>David Garlan and Mary Shaw. <EM>An Introduction to Software Architecture</EM>,&nbsp; SEI Technical Report CMU/SEI-94-TR-21.&nbsp; </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">HIC03</a> </TD>
<TD colSpan=2>Hickey A., Davis, A. <EM>Elicitation Technique Selection: How Do the Experts Do It?</EM>, International Conference on Requirements Engineering (RE03), Los Alamitos, California: IEEE Computer Society Press, September 2003. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">HUL05</a> </TD>
<TD colSpan=2>Hull, E., Jackson, K. and&nbsp;Dick, J. <EM>Requirements Engineering</EM>, Second Edition. Springer, 2005. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">IEP1471</a> </TD>
<TD colSpan=2>IEEE <EM>Recommended Practice for Architectural Description</EM>, IEEE Std P1471, 2000.</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KAZ00</a> </TD>
<TD colSpan=2>Kazman, R., Carriere, S. J., Woods, S. G.&nbsp;<a href="http://www.sei.cmu.edu/staff/rkazman/annals-scenario.pdf">Toward a Discipline of Scenario-Based Architectural Engineering</a>,(Get <a href="http://www.adobe.com/products/acrobat/alternate.html" target="">Adobe reader</a>.) <a href="http://manta.cs.vt.edu./ase/">Annals of Software Engineering</a>, Vol. 9, 2000, 5-33. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KAZ04</a> </TD>
<TD colSpan=2>Kazman, R., Kruchten, P., Nord, R., Tomayko, J.&nbsp;<EM>Integrating Software-Architecture-Centric Methods into the Rational Unified Process</EM>, CMU-SEI Technical Reports, 2004. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KRO03</a> </TD>
<TD colSpan=2>Kroll, P. and&nbsp;Kruchten, P. <EM>The Rational Unified Process Made Easy</EM>, Addison Wesley, 2003. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%">KRO05 </TD>
<TD colSpan=2>Kroll, P. and&nbsp;MacIsaac, B. <EM>Agility and Discipline Made Easy</EM>, Addison Wesley, 2005. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">KRU95</a> </TD>
<TD colSpan=2>Kruchten, Phillipe B.,&nbsp; <EM>The 4+1 View Model of Architecture</EM>, IEEE Software, vol. 12, no. 6, pp 42-50, November 1995 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">MAR03</a>&nbsp;</TD>
<TD colSpan=2>Marick, B., <EM>Exploration Through Example</EM>, <a href="http://www.testing.com/cgi-bin/blog/2003/08/21#agile-testing-project-1">http://www.testing.com/cgi-bin/blog/2003/08/21#agile-testing-project-1</a></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">NBG01</a> </TD>
<TD colSpan=2>Eric J. Naiburg and Robert A. Maksimchuk. <EM>UML for Database Design</EM>, New York, NY: Addison Wesley, 2001</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">RUP06</a> </TD>
<TD colSpan=2>IBM Rational 2006. <EM>The Rational Unified Process.</EM> </TD></TR>
<TR>
<TD vAlign=top width="12%"></TD>
<TD width="10%"></TD>
<TD style="PADDING-BOTTOM: 10px" width="78%">A commercial methodology, also based on the Eclipse Process Framework, and advanced guidance on topics such as business modeling, portfolio management, asset-based development, real-time design, user experience, and so on. </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">OOP96</a> </TD>
<TD colSpan=2>The 1996 ACM Conference on Object-Oriented Programs, Systems, Languages and Applications (OOPSLA), <EM>The Origins of Pattern Theory, the Future of the Theory, And The Generation of a Living World.</EM></TD></TR>
<TR>
<TD vAlign=top width="12%"></TD>
<TD width="10%"></TD>
<TD style="PADDING-BOTTOM: 10px" width="78%">See <a href="http://www.patternlanguage.com/archive/ieee/ieeetext.htm" target="">http://www.patternlanguage.com/archive/ieee/ieeetext.htm</a></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">PW92</a> </TD>
<TD colSpan=2>Dewayne E. Perry and Alexander L. Wolf. <EM>Foundations for the Study of Software Architecture</EM>. ACM SIGSOFT Software Engineering Notes, 17(4):40-52, October 1992.</TD></TR>
<TR>
<TD vAlign=top width="12%"><a name="">SCH04</a> </TD>
<TD colSpan=2>Schwaber, K. <EM>Agile Project Management with Scrum.</EM> Microsoft Press 2004. </TD></TR>
<TR>
<TD vAlign=top width="12%"></TD>
<TD width="10%"></TD>
<TD style="PADDING-BOTTOM: 10px" width="78%">
<P>An excellent reference by one of the co-inventors of the Scrum project management method. </P></TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0 <table &gt;>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">SEI99</a> </TD>
<TD colSpan=2>SEI, 1999. <EM>Software Risk Evaluation (SRE) Method Description, v2.0.</EM> <BR><a href="http://www.sei.cmu.edu/pub/documents/99.reports/pdf/99tr029-body.pdf#search=%22software%20risk%20evaluation%22">http://www.sei.cmu.edu/pub/documents/99.reports/pdf/99tr029-body.pdf#search=%22software%20risk%20evaluation%22</a> (Get <a href="http://www.adobe.com/products/acrobat/alternate.html" target="">Adobe reader</a>.)</TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">TEL06</a> </TD>
<TD colSpan=2>Telelogic, 2006. <EM>Get It Right the First Time: Writing Better Requirements.</EM> </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">THA00</a> </TD>
<TD colSpan=2>Thayer, Richard H.&nbsp;and Dorfman, Merlin&nbsp;<EM>Software Requirements Engineering Second Edition</EM>, IEEE Computer Society, 2000 </TD></TR></TBODY></TABLE>
<TABLE width="100%" summary="layout table" border=0>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">UML05</a> </TD>
<TD colSpan=2>OMG, 2005. <EM>Unified Modeling Language 2.0: Superstructure.</EM> <BR><a href="http://www.omg.org/docs/formal/05-07-04.pdf" target="">http://www.omg.org/docs/formal/05-07-04.pdf</a>&nbsp;(Get <a href="http://www.adobe.com/products/acrobat/alternate.html" target="">Adobe reader</a>.) </TD></TR></TBODY>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">WIB04</a> </TD>
<TD colSpan=2>Wiborg-Weber, D., Vignaud, J. L. <EM>A Framework for Managing Component Based Development</EM>, Telelogic Whitepaper, 2004 <BR><a href="http://www.telelogic.com/download/index.cfm?id=4423" target="">http://www.telelogic.com/download/index.cfm?id=4423</a></TD></TR></TBODY>
<TBODY>
<TR>
<TD vAlign=top width="12%"><a name="">WIKP-MVC</a> </TD>
<TD colSpan=2>Wikipedia <EM>Model-view-controller</EM> <BR><a href="http://en.wikipedia.org/wiki/Model-view-controller" target="">http://en.wikipedia.org/wiki/Model-view-controller</a> </TD></TR></TBODY></TABLE>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Role" name="stakeholder" briefDescription="This role represents interest groups whose needs must be satisfied by the project. It is a role that may be played by anyone who is (or potentially will be) materially affected by the outcome of the project." id="_dTa6gMAYEdqX-s4mWhkyqQ" orderingGuide="" suppressed="false" presentationName="Stakeholder" variabilityType="na"/>
      <ContentElement xsi:type="uma:SupportingMaterial" name="openup_basic_home" briefDescription="" id="_i-BDsNogEdqfmNgIq7q3Xw" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/supportingmaterials/resources/mic.gif" presentationName="OpenUP/Basic" shapeicon="openup_basic/guidances/supportingmaterials/resources/icon_introL.gif" variabilityType="na">
        <Presentation name="intro_to_openup_basic,_i-BDsNogEdqfmNgIq7q3Xw" briefDescription="" id="-XR2Rbg25yN80p1exWC4MHg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T07:56:32" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<table>
    <tbody>
        <tr>
            <td>
                <table width="100%" border="0">
                    <tbody>
                        <tr>
                            <td width="58%">
                                <div align="center">
                                    <table width="589" align="center" border="0">
                                        <tbody>
                                            <tr>
                                                <td width="96">
                                                    <div align="center">
                                                        <img height="48" alt="getting started" src="openup_basic/guidances/supportingmaterials/resources/GetStarted_48.gif"                                                         width="48" usemap="#Map" border="0" />
                                                    </div>
                                                </td>
                                                <td width="95">
                                                    <div align="center">
                                                        <img height="48" alt="core principles" src="openup_basic/guidances/supportingmaterials/resources/CorePrinciples_48.gif"                                                         width="48" usemap="#Map2" border="0" />
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <img height="48" alt="roles" src="openup_basic/guidances/supportingmaterials/resources/Roles_48.gif" width="48"                                                         usemap="#Map3" border="0" />
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <img height="48" alt="work products" src="openup_basic/guidances/supportingmaterials/resources/WorkProducts_48.gif"                                                         width="48" usemap="#Map4" border="0" />
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <img height="48" alt="disciplines" src="openup_basic/guidances/supportingmaterials/resources/Disciplines_48.gif"                                                         width="48" usemap="#Map5" border="0" />
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <img height="48" alt="lifecycle" src="openup_basic/guidances/supportingmaterials/resources/LifeCycle_48.gif"                                                         width="48" usemap="#Map6" border="0" />
                                                    </div>
                                                </td>
                                            </tr>
                                            <tr valign="top" align="middle">
                                                <td width="96">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/customcategories/getting_started,_cp6ycBOGEduCNqgZdt_OaA.html" guid="_cp6ycBOGEduCNqgZdt_OaA">Getting Started</a>
                                                    </div>
                                                </td>
                                                <td width="95">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" guid="_HEu9QBOHEduCNqgZdt_OaA">Core Principles</a>
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html" guid="_TZIJ0O8NEdmKSqa_gSYthg">Roles</a>
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html" guid="_s4Z9AMWXEdqWePvIjHInwg">Work Products</a>
                                                    </div>
                                                </td>
                                                <td width="88">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html" guid="__BZycP1UEdmek8CQTQgrOQ">Disciplines</a>
                                                    </div>
                                                </td>
                                                <td width="98">
                                                    <div align="center">
                                                        <a class="elementLinkWithUserText" href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" guid="_0uyGoMlgEdmt3adZL5Dmdw">Lifecycle</a>
                                                    </div>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                    &nbsp;
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
                <p>
                    OpenUP/Basic is organized into four major areas of content, Communication&nbsp;and Collaboration,
                    Intent, Solution, and Management, also known as sub-processes.
                </p>
                <br />
            </td>
        </tr>
        <tr>
            <td>
                <p align="center">
                    <img height="350" alt="Four major areas upon which the OpenUP/Basic content is organized"                     src="openup_basic/guidances/supportingmaterials/resources/OpenUp1_350.jpg" width="350" usemap="#Map7" border="0" /> <map id="Map7" name="Map7">
                        <area shape="RECT" alt="Stakeholder" coords="144,5,207,62"                         href="./../../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html"                         guid="_dTa6gMAYEdqX-s4mWhkyqQ" />
                        <area shape="POLY" alt="Tester" coords="336,242,310,287,254,256,278,209"                         href="./../../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html"                         guid="_0ZM4MclgEdmt3adZL5Dmdw" />
                        <area shape="RECT" alt="Developer" coords="148,282,201,347"                         href="./../../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html"                         guid="_0YDosMlgEdmt3adZL5Dmd" />
                        <area shape="POLY" alt="Architect" coords="66,199,14,232,40,283,96,249"                         href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"                         guid="_0X9iEMlgEdmt3adZL5Dmdw" />
                        <area shape="POLY" alt="Project Manager" coords="11,118,68,146,99,91,50,52"                         href="./../../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html"                         guid="_0a0o0MlgEdmt3adZL5Dmdw" />
                        <area shape="POLY" alt="Analyst" coords="258,99,312,66,338,114,284,145"                         href="./../../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html"                         guid="_0VxJsMlgEdmt3adZL5Dmdw" />
                        <area shape="CIRCLE" alt="Communication and Collaboration" coords="176,176,47"                         href="./../../../openup_basic/customcategories/collab_commun_subprocess,_r8cVIEmbEdu0xduwSKie-w.html" />
                        <area shape="POLY" alt="Management" coords="85,219,70,163,115,89,169,72,169,117,124,144,120,197"                         href="./../../../openup_basic/customcategories/management_subprocess,_Aoz2gEmcEdu0xduwSKie-w.html" />
                        <area shape="POLY" alt="Intent" coords="181,116,223,143,229,196,264,219,283,160,245,94,181,70"                         href="./../../../openup_basic/customcategories/intent_subprocess,_57_ZMEmbEdu0xduwSKie-w.html" />
                        <area shape="POLY" alt="Solution" coords="129,211,176,235,221,210,257,231,214,271,133,272,94,232"                         href="./../../../openup_basic/customcategories/solution_subprocess,_HEVvgEmcEdu0xduwSKie-w.html" />
                    </map><br />
                    &nbsp;
                </p>
            </td>
        </tr>
        <tr>
            <td>
                <p align="left">
                    OpenUP/Basic is an iterative software development process with the following characteristics:
                </p>
                <div align="left">
                    <ul>
                        <li>
                            <strong>Minimal:</strong> Only fundamental process content is included
                        </li>
                        <li>
                            <strong>Complete:</strong> It can be manifested as an entire process to build a system
                        </li>
                        <li>
                            <strong>Extensible:</strong> It can be used as a foundation&nbsp;to add or tailor process
                            content
                        </li>
                    </ul>
                </div>
            </td>
        </tr>
    </tbody>
</table>
<p>
    <map id="Map" name="Map">
        <area shape="RECT" coords="0,1,47,47" alt="Getting Started"        href="./../../../openup_basic/customcategories/getting_started,_cp6ycBOGEduCNqgZdt_OaA.html" />
    </map><map id="Map2" name="Map2">
        <area shape="RECT" coords="0,0,48,47" alt="Core principles"        href="./../../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html" />
    </map><map id="Map3" name="Map3">
        <area shape="RECT" coords="0,0,48,48"   alt="Openup basic roles"      href="./../../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html" />
    </map><map id="Map4" name="Map4">
        <area shape="RECT" coords="0,1,48,48"    alt="Openup basic work product"     href="./../../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html" />
    </map><map id="Map5" name="Map5">
        <area shape="RECT" coords="0,0,47,48"    alt="Openup basic disciplines"     href="./../../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html" />
    </map><map id="Map6" name="Map6">
        <area shape="RECT" coords="0,0,47,48"  alt="Openup basic process"      href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html" />
    </map>
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Roadmap" name="openup_basic_roadmap" briefDescription="This roadmap presents an overview of OpenUP/Basic, its purpose and lifecycle." id="_vEruwN-rEdqiM_wFaqLjNg" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic Roadmap" variabilityType="na">
        <Presentation name="new_roadmap,_vEruwN-rEdqiM_wFaqLjNg" briefDescription="" id="-At_b3UIzbgdmtJsb2Ymfhg" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-01T07:29:08" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    OpenUP/Basic is for small teams, working together in the same location. The team needs to engage in plenty of daily
    face-to-face interaction. Team members include the stakeholders, developers, architects, project manager, and testers.
    Team members engage in significant collaboration, making their own decisions as to what needs to be worked on, what the
    priorities are, and how best to address stakeholder needs. The organization must support the team by allowing them this
    responsibility.
</p>
<p>
    Team members collaborate extensively. The presence of stakeholders as team members is critical to successfully
    realizing OpenUP/Basic.
</p>

<p>
    Team members participate in daily stand-up meetings to communicate status and issues. Problems are addressed outside of
    the daily meetings.
</p>
<p>
    OpenUP/Basic focuses on signficantly&nbsp;reducing risk early in the lifecycle. This requires regular risk review
    meetings and rigorous implementation of mitigation strategies.
</p>
<p>
    All work is listed, tracked, and assigned through the Work Item List. Team mebers use this single repository for all
    tasks that need to be recorded and tracked. This includes all change requests, bugs, and stakeholder requests.
</p>
<p>
    Use cases are used to elicit and describe requirements. Team members should develop skills at writing good use cases.
    Stakeholders are responsbile for reviewing and certifying the requirements are correct. Use cases are developed
    collaboratively.
</p>
<p>
    Architecturally significant requirements must be identified and stabilized in Elaboration so a robust architecture can
    be created that is the core of the system. An architecturally significant requirement change may arise later in
    development that must be addressed, but the risk of this happening is significantly reduced in the Elaboration
    iteration.
</p>
<p>
    Testing is performed....
</p>
<p>
    OpenUP/Basic doesn't include content for deployment, change management, or environment (such as customizing this
    process or setting up development environments). OpenUP/Basic is focused on a singe team, and these areas are generally
    addressed at an organizational or enterprise level. Look for extensions to OpenUP that address these wider areas.<br />
</p>
<p>
    OpenUP/Basic is an iterative software development process that is minimal, complete, and extensible. It is governed by
    four core <a class="elementLinkWithUserText"
    href="./../../../openup_basic/customcategories/core_principles_cat,_HEu9QBOHEduCNqgZdt_OaA.html"
    guid="_HEu9QBOHEduCNqgZdt_OaA">principles</a>:
</p>
<ul>
    <li>
        Balance competing priorities to maximize stakeholder value.
    </li>
    <li>
        Collaborate to align interests and share understanding
    </li>
    <li>
        Evolve to continuously obtain feedback and improve
    </li>
    <li>
        Focus on articulating the architecture
    </li>
</ul>
<p>
    <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/termdefinitions/role,_yUefQNnmEdmO6L4XMImrsA.html"
    guid="_yUefQNnmEdmO6L4XMImrsA">Roles</a>&nbsp;perform <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/termdefinitions/task,_x459ktnmEdmO6L4XMImrsA.html"
    guid="_x459ktnmEdmO6L4XMImrsA">tasks</a> that consume and produce <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/termdefinitions/artifact,_x7cUM9nmEdmO6L4XMImrsA.html"
    guid="_x7cUM9nmEdmO6L4XMImrsA">artifacts</a>. OpenUP/Basic describes the minimal set of&nbsp;roles, tasks, and
    artifacts&nbsp;involved in software development:
</p>
<ul>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../../openup_basic/rolesets/openup_basic_roles,_TZIJ0O8NEdmKSqa_gSYthg.html"
        guid="_TZIJ0O8NEdmKSqa_gSYthg">Roles</a>
    </li>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../../openup_basic/disciplinegroupings/openup_basic_disciplines,__BZycP1UEdmek8CQTQgrOQ.html"
        guid="__BZycP1UEdmek8CQTQgrOQ">Tasks</a> (organized by disciplines)
    </li>
    <li>
        <a class="elementLinkWithUserText"
        href="./../../../openup_basic/domains/openup_basic_wp,_s4Z9AMWXEdqWePvIjHInwg.html"
        guid="_s4Z9AMWXEdqWePvIjHInwg">Artifacts</a> (organized by domains)&nbsp;
    </li>
</ul>
<h3>
    Software development&nbsp;lifecycle
</h3>
<p>
    OpenUP/Basic is an iterative process&nbsp;distributed throughout&nbsp;four <a class="elementLinkWithUserText"
    href="./../../../base_concepts/guidances/concepts/phase,__7xOEC7aEdqHMdmRzC0-2g.html"
    guid="__7xOEC7aEdqHMdmRzC0-2g">phases</a>: Inception, Elaboration, Construction, and Transition. Each phase consists of
    one or more iterations, where stable, working versions of the software are developed and released, with the completion
    of each iteration representing a minor <a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html"
    guid="_HNxbwMBJEdqSgKaj2SZBmg">milestone</a>&nbsp;for the project and contributing to the successful achievement of the
    Phase's major milestone where phase objectives are met.
</p>
<p>
    The following diagram depicts the OpenUP/Basic <a class="elementLinkWithUserText"
    href="./../../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html"
    guid="_0uyGoMlgEdmt3adZL5Dmdw">lifecycle</a>.
</p>
<p align="center">
    <img height="192" alt="Figure 1: Diagram of the OpenUP/Basic Lifecycle" src="openup_basic/guidances/roadmaps/resources/openup-basic_lifecycle.jpg"
    width="667" usemap="#Map" border="0" />
</p>
<p align="center">
    Figure 1: The OpenUP/Basic lifecycle
</p>
<map id="Map" name="Map">
    <h4>
        How&nbsp;to get started?
    </h4>
    <p>
        The fourth OpenUP core principle, "Evolve to continuously obtain feedback and improve", suggests an iterative and
        incremental approach to adopting OpenUP/Basic.
    </p>
    <ul>
        <li>
            Start with the core principles and understand the intentions behind OpenUP.
        </li>
        <li>
            Then assess your existing process, and select one or two key areas that you would like to improve.
        </li>
        <li>
            Begin using OpenUP/Basic to improve these areas first.
        </li>
        <li>
            In later iterations or development cycles, make incremental improvements in other areas.
        </li>
        <li>
            If you have little or no experience with unified processes or other iterative processes, use OpenUP/Basic in a
            small pilot project, perhaps with only three to four people working for only two to three months.
        </li>
    </ul>
    <p>
        While OpenUP/Basic is a ready to use as-is, you may choose to extend the process or modify the work product
        templates to suit your specific needs. For example:
    </p>
    <ul>
        <li>
            You may require more or less precision in your work products.
        </li>
        <li>
            Your organization may have specific configuration management practices or safety protocols to include in your
            process.
        </li>
        <li>
            You may simply want to put your own corporate logo on the banner.
        </li>
        <li>
            You may want to incorporate lessons learned from a retrospective review into OpenUP/Basic.
        </li>
    </ul>
    <p>
        Use EPF Composer to extend and tailor OpenUP/Basic. For more information about EPF composer, visit <a
        href="http://www.eclipse.org/epf" target="_blank">www.eclipse.org/epf</a>.
    </p>
    <area shape="RECT" coords="116,7,175,25" alt="link to inception phase concept"
    href="./../../../openup_basic/guidances/concepts/inception_phase,_0hmKgBOMEduCNqgZdt_OaA.html"
    guid="_0hmKgBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="255,11,327,27" alt="link to elaboration phase concept"
    href="./../../../openup_basic/guidances/concepts/elaboration_phase,_2plxwBOMEduCNqgZdt_OaA.html"
    guid="_2plxwBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="395,11,476,27" alt="link to construction phase concept"
    href="./../../../openup_basic/guidances/concepts/construction_phase,_48EKsBOMEduCNqgZdt_OaA.html"
    guid="_48EKsBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="554,10,619,27" alt="link to transition phase concept"
    href="./../../../openup_basic/guidances/concepts/transition_phase,__ca5UBOMEduCNqgZdt_OaA.html"
    guid="__ca5UBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="39,98,100,162" alt="link to inception phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/inception_phase_iteration,_xupMvxOKEduCNqgZdt_OaA.html"
    guid="_xupMvxOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="188,99,250,168" alt="link to inception phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/elaboration_phase_iteration,_0Spa4BOKEduCNqgZdt_OaA.html"
    guid="_0Spa4BOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="332,100,397,165" alt="link to construction phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/construction_phase_iteration,_3CqrAROKEduCNqgZdt_OaA.html"
    guid="_3CqrAROKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="480,98,541,167" alt="link to transition phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/transition_phase_iteration,_467NIhOKEduCNqgZdt_OaA.html"
    guid="_467NIhOKEduCNqgZdt_OaA" />
</map>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:SupportingMaterial" name="about_openup_basic" briefDescription="" id="_8tSNMPGYEdqiDINUyockoA" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/supportingmaterials/resources/about.gif" presentationName="About OpenUP/Basic" variabilityType="na">
        <Presentation name="new_supporting_material,_8tSNMPGYEdqiDINUyockoA" briefDescription="" id="-WFD3nKccpkueaG15cHT-fA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T01:25:47" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<h3>
    <a id="version" name="version">Version Information</a>
</h3>
<p>
    OpenUP/Basic Plug-in Version 0.9<br />
    Based on: Base Concepts Plug-in Version: 0.9
</p>
<h3>
    Legal Statement
</h3>
<p class="node">
    See <a href="openup_basic/guidances/supportingmaterials/resources/copyrite.htm">Intellectual Property Notices</a>.
</p>
<h3>
    Browser Support
</h3>
<p>
    <b>Note 1:</b> OpenUP/Basic does not currently support Netscape Navigator 6.x.
</p>
<p>
    <b>Note 2:</b> Some versions of Microsoft Internet Explorer 4.x and Netscape Navigator 4.x may not be able to display
    all pages of OpenUP/Basic.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="using_openup_basic" briefDescription="This guideline explains the various usage scenarios of this Web site." id="_NOHy0BOGEduCNqgZdt_OaA" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/compass.gif" presentationName="Using OpenUP/Basic" shapeicon="openup_basic/guidances/guidelines/resources/compassL.gif" variabilityType="na"/>
      <ContentElement xsi:type="uma:Concept" name="inception_phase" briefDescription="First of the four phases in the project lifecycle, it is about understanding the  project scope and objectives and getting enough information to confirm that the  project should proceed - or convince you that it should not." id="_0hmKgBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Inception Phase" variabilityType="na">
        <Presentation name=",_0hmKgBOMEduCNqgZdt_OaA" briefDescription="" id="-GRJW_KNOJoEQF3r6lmBrEw" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-06T08:29:38" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose&nbsp;in this phase is to achieve concurrence among all stakeholders on the lifecycle objectives for the
    project.
</p>
<p>
    There are four objectives of the Inception phase that clarify the scope, project objectives, and feasibility of the
    intended solution <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ol>
    <li>
        <p>
            <strong>Understand what to build.</strong> Determine the <a class="elementLinkWithUserText" href="./../../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">Vision</a>, the scope of the system, and its boundaries. Identify who is
            interested in this system and why (see <a class="elementLinkWithUserText" href="./../../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholders</a>).
        </p>
    </li>
    <li>
        <p>
            <strong>Identify key system functionality.</strong> Decide which requirements are most critical.
        </p>
    </li>
    <li>
        <p>
            <strong>Determine at least one possible solution.</strong> Identify at least one candidate architecture and its
            feasibility.
        </p>
    </li>
    <li>
        <p>
            <strong>Understand</strong> the cost, schedule, and risks associated with the project.
        </p>
    </li>
</ol>
<p>
    The following table summarizes the&nbsp;Inception phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <strong>Inception phase objectives and activities</strong>
</p>
<table cellspacing="1" cellpadding="0" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="295">
                <b>Phase objectives</b> 
            </td>
            <td class="Normal" valign="top" width="295">
                <b>Activities that address objectives</b> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Understand what to build
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../manage_requirements,_0okw8clgEdmt3adZL5Dmdw.html" guid="_0okw8clgEdmt3adZL5Dmdw">Manage Requirements</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Identify key system functionality
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../initiate_project,_0oSdE8lgEdmt3adZL5Dmdw.html" guid="_0oSdE8lgEdmt3adZL5Dmdw">Initiate Project</a><br />
                <a class="elementLinkWithUserText" href="./../../../manage_requirements,_0okw8clgEdmt3adZL5Dmdw.html" guid="_0okw8clgEdmt3adZL5Dmdw">Manage Requirements</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Determine at least one possible solution
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../determine_architectural_feasibility,_0oreoclgEdmt3adZL5Dmdw.html" guid="_0oreoclgEdmt3adZL5Dmdw">Determine Architectural Feasibility</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="295">
                Understand the cost, schedule, and risks associated with the project
            </td>
            <td class="Normal" valign="top" width="295">
                <a class="elementLinkWithUserText" href="./../../../initiate_project,_0oSdE8lgEdmt3adZL5Dmdw.html" guid="_0oSdE8lgEdmt3adZL5Dmdw">Initiate Project</a><br />
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a> 
            </td>
        </tr>
    </tbody>
</table>
<br />
<h4>
    Key considerations
</h4>
<p>
    Projects may have one or more iterations in the Inception phase. Among reasons for multiple iterations in Inception,
    you find:
</p>
<ul>
    <li>
        Project is large, and it is&nbsp;hard to define its scope.
    </li>
    <li>
        Unprecedented system.
    </li>
    <li>
        Too many stakeholders with competing needs and complex relationships.
    </li>
    <li>
        Major technical risks demand the creation of a prototype or proof of concept.
    </li>
</ul>
<br />]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="elaboration_phase" briefDescription="Second of four phases in the project lifecycle, when architecturally significant  risks are addressed." id="_2plxwBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Elaboration Phase" variabilityType="na">
        <Presentation name=",_2plxwBOMEduCNqgZdt_OaA" briefDescription="" id="-F-eWIBzxEXE1jygbN3nrrQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T01:28:27" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose of this phase is to establish the baseline of the architecture of the system and provide a stable basis for
    the bulk of the&nbsp;development effort in the next phase.
</p>
<p>
    There are objectives for the Elaboration phase that help you address risks associated with requirements, architecture,
    costs, and schedule <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ul>
    <li>
        <p>
            <strong>Get a more detailed understanding of the requirements.</strong> Having a good understanding of the
            majority of requirements allows you to create a more detailed plan and to get buy-in from stakeholders. Be sure
            to gain an in-depth understanding of the most critical requirements to be validated by&nbsp;the architecture.
        </p>
    </li>
    <li>
        <p>
            <strong>Design, implement, validate, and establish the baseline for the architecture.</strong> Design,
            implement, and test a skeleton structure of the system. Although the functionality is not complete yet, most of
            the interfaces between the building blocks are implemented and tested. This is referred to <strong>an
            executable architecture</strong>.
        </p>
    </li>
    <li>
        <p>
            <strong>Mitigate essential risks, and produce accurate schedule and cost estimates.</strong> Many technical
            risks are addressed as a result of detailing the requirements and of designing, implementing, and testing the
            architecture. Refine and detail the high-level project plan.
        </p>
    </li>
</ul>
<p>
    The following table summarizes the&nbsp;Elaboration phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <strong>Elaboration phase objectives and activities</strong>
</p>
<table cellspacing="0" cellpadding="0" width="648" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="300">
                <p style="TEXT-ALIGN: justify">
                    <b>Phase objectives</b>
                </p>
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <b>Activities that address objectives</b>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Get a more detailed understanding of the requirements
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_requirements,_0ruyoclgEdmt3adZL5Dmdw.html" guid="_0ruyoclgEdmt3adZL5Dmdw">Manage Requirements</a> <br />
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Design, implement, validate, and baseline an architecture
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <a class="elementLinkWithUserText" href="./../../../define_architecture,_0rcewclgEdmt3adZL5Dmdw.html" guid="_0rcewclgEdmt3adZL5Dmdw">Define the Architecture</a><br />
                    <a class="elementLinkWithUserText" href="./../../../develop_requirement_within_context,_WrXvwPinEdmugcVr9AdHjQ.html" guid="_WrXvwPinEdmugcVr9AdHjQ">Develop Solution (for requirement)(within context)</a><br />
                    <a class="elementLinkWithUserText" href="./../../../validate_build,_0rilYclgEdmt3adZL5Dmdw.html" guid="_0rilYclgEdmt3adZL5Dmdw">Validate Build</a>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Mitigate essential risks, and produce accurate schedule and cost estimates
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a> <br />
            </td>
        </tr>
    </tbody>
</table>
<br />
<h4>
    Key considerations
</h4>
<p>
    The number of iterations in the Elaboration phase is dependent on, but not limited to, factors such as green-field
    development versus maintenance cycle, unprecedented system versus well-known technology and architecture, and so on.
</p>
<p>
    Typically, on the first iteration, you should design, implement, and test a small number of critical scenarios to
    identify what type of architecture and architectural mechanisms you need, so you can mitigate the most crucial risks.
    You also detail high-risk requirements that have to be addressed early in the project. You test enough to validate that
    the architectural risks are mitigated.
</p>
<p>
    On the following iterations, you fix whatever was not right from the previous iteration. You design, implement, and
    test the remaining architecturally significant scenarios, ensuring that you check all major areas of the system
    (architectural coverage), so potential hidden risks arise as early as possible. <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>
</p>
<p>
    <br />
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="construction_phase" briefDescription="Third of the four phases in the project lifecycle, Construction focuses on design,  implementation, and testing of functionalities to develop a complete system." id="_48EKsBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Construction Phase" variabilityType="na">
        <Presentation name=",_48EKsBOMEduCNqgZdt_OaA" briefDescription="" id="-bbpT_BdDRrv6waNI365Qhg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T10:10:26" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose in this phase is to complete the development of the system based upon the baselined architecture.
</p>
<p>
    There are objectives for the Construction phase that help us to&nbsp;have cost-efficient development of a complete
    product - an operational version of your system - that can be deployed&nbsp;in the user community&nbsp;<a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ol>
    <li>
        Iteratively develop a complete product that is ready to transition to its user community. Describe remaining
        requirements, fill in design details, complete the implementation and test the software. Release the first
        operational version (beta) of the system and determine if users are ready for the application to be deployed.
    </li>
    <li>
        Minimize development costs and achieve some degree of parallelism. Optimize resources and leverage development
        parallelism between developers or teams of developers, by for example, assigning components that can be developed
        independently of one another.
    </li>
</ol>
<p>
    The following table summarizes the&nbsp;Construction phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <br />
    <strong>Construction phase objectives and activities</strong>
</p>
<table cellspacing="0" cellpadding="0" width="648" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="300">
                <p style="TEXT-ALIGN: justify">
                    <b>Phase objectives</b>
                </p>
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <b>Activities that address objectives</b>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Iteratively develop a complete product that is ready to transition to the user community<br />
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <a class="elementLinkWithUserText" href="./../../../openup_basic/capabilitypatterns/manage_requirements,_eE5nEUbpEduLBN1xMBngqw.html" guid="_eE5nEUbpEduLBN1xMBngqw">Manage Requirements</a><br />
                    <a class="elementLinkWithUserText" href="./../../../openup_basic/capabilitypatterns/develop_solution,_MWFjoU9HEdudU75l2xOQTw.html" guid="_MWFjoU9HEdudU75l2xOQTw">Develop Solution (for requirement)(within context)</a><br />
                    <a class="elementLinkWithUserText" href="./../../../openup_basic/capabilitypatterns/validate_build,_y-3IretQEdqc1LGhiSPqRg.html" guid="_y-3IretQEdqc1LGhiSPqRg">Validate Build</a>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Minimize development costs and achieve some degree of parallelism<br />
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <a class="elementLinkWithUserText" href="./../../../openup_basic/capabilitypatterns/manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a><br />
                    <a class="elementLinkWithUserText" href="./../../../openup_basic/capabilitypatterns/develop_solution,_MWFjoU9HEdudU75l2xOQTw.html" guid="_MWFjoU9HEdudU75l2xOQTw">Develop Solution (for requirement)(within context)</a><br />
                    <a class="elementLinkWithUserText" href="./../../../openup_basic/capabilitypatterns/validate_build,_y-3IretQEdqc1LGhiSPqRg.html" guid="_y-3IretQEdqc1LGhiSPqRg">Validate Build</a>
                </p>
            </td>
        </tr>
    </tbody>
</table>
<br />
<h4>
    Key considerations
</h4>
<p>
    Typically, the Construction phase has more iterations (two to four) than the other phases, depending on the types of
    projects:
</p>
<ul>
    <li>
        Simple project: One iteration to build the product (to a beta release)
    </li>
    <li>
        More substantial project: One iteration to expose a partial system and one to mature it to beta testing
    </li>
    <li>
        Large project: Three or more iterations, given the size of the project (number of requirements to implement for a
        beta release)
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="transition_phase" briefDescription="Fourth and final phase in the project lifecycle." id="__ca5UBOMEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Transition Phase" variabilityType="na">
        <Presentation name=",__ca5UBOMEduCNqgZdt_OaA" briefDescription="" id="-FrUmsKsGW4bnNmb9uaNOkg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T01:29:45" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The purpose in this phase is to ensure that the software is ready for delivery to users.
</p>
<p>
    There are objectives for the Transition phase that help you to&nbsp;fine-tune functionality, performance, and overall
    quality of the beta product from the end of&nbsp;the previous phase <a class="elementlinkwithusertext" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ol>
    <li>
        <p>
            <strong>Beta test to validate that user expectations are met.</strong> This typically requires some fine-tuning
            activities, such as bug-fixing and making enhancements for performance and usability.
        </p>
    </li>
    <li>
        <p>
            <strong>Achieve stakeholder concurrence that deployment is complete.</strong> This may involve various levels
            of tests for product acceptance, including formal and informal tests and beta tests.
        </p>
    </li>
    <li>
        <p>
            <strong>Improve future project performance through lessons learned.</strong> Document lessons learned and
            improve the process and tool environment for the project.
        </p>
    </li>
</ol>
<p>
    The following table summarizes the&nbsp;Transition phase objectives and&nbsp;what activities address each objective:
</p>
<p align="center">
    <strong>Transition phase objectives and activities</strong>
</p>
<table cellspacing="0" cellpadding="0" width="648" align="center" border="1">
    <tbody>
        <tr>
            <td class="Normal" valign="top" width="300">
                <p style="TEXT-ALIGN: justify">
                    <b>Phase objectives</b>
                </p>
            </td>
            <td class="Normal" valign="top" width="348">
                <p style="TEXT-ALIGN: justify">
                    <b>Activities that address objectives</b>
                </p>
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300" height="62">
                Beta test to validate that user expectations are met
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../ongoing_tasks,_0qxwYclgEdmt3adZL5Dmdw.html" guid="_0qxwYclgEdmt3adZL5Dmdw">Ongoing Tasks</a><br />
                <a class="elementLinkWithUserText" href="./../../../develop_requirement_within_context,_0DMlYPinEdmugcVr9AdHjQ.html" guid="_0DMlYPinEdmugcVr9AdHjQ">Develop Solution (for requirement)(within context)</a><br />
                <a class="elementLinkWithUserText" href="./../../../validate_build,_0qrpwslgEdmt3adZL5Dmdw.html" guid="_0qrpwslgEdmt3adZL5Dmdw">Validate Build</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Achieve stakeholder concurrence that deployment is complete
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a><br />
                <a class="elementLinkWithUserText" href="./../../../validate_build,_0qrpwslgEdmt3adZL5Dmdw.html" guid="_0qrpwslgEdmt3adZL5Dmdw">Validate Build</a> 
            </td>
        </tr>
        <tr>
            <td class="Normal" valign="top" width="300">
                Improve future project performance through lessons learned
            </td>
            <td class="Normal" valign="top" width="348">
                <a class="elementLinkWithUserText" href="./../../../manage_iteration,_0rWYIslgEdmt3adZL5Dmdw.html" guid="_0rWYIslgEdmt3adZL5Dmdw">Manage Iteration</a> 
            </td>
        </tr>
    </tbody>
</table>
<h4>
    <br />
    Key considerations<br />
</h4>
<p>
    The Transition phase can include running old and new systems in parallel, migrating data, training users, and adjusting
    business processes.
</p>
<p>
    The number of iterations in the Transition phase varies from one iteration for a simple system requiring primarily
    minor bug fixing, to many iterations for a complex system, involving addition of features and performing activities to
    make the business transition from using the old system to using the new system.
</p>
<p>
    When the Transition phase objectives are met, the project is in position to be closed.&nbsp;For some products, the end
    of the current project lifecycle may coincide with the beginning of the next lifecycle, leading to the next generation
    of the same product.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:SupportingMaterial" name="delivery_process_graph" briefDescription="" id="_Pt_fYBjoEduxUfEVCtmW4Q" orderingGuide="" suppressed="false" presentationName="Delivery Process Graph" variabilityType="na">
        <Presentation name="new_supporting_material,_Pt_fYBjoEduxUfEVCtmW4Q" briefDescription="" id="-cy0DcnEk7uJJ1OOH3_E6rg" orderingGuide="" suppressed="false" authors="" changeDate="2006-07-21T08:39:59" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<img height="192" alt="OpenUP/Basic Lifecycle" src="openup_basic/guidances/supportingmaterials/resources/openup-basic_lifecycle.jpg" width="667" usemap="#Map"
border="0" /> <map id="Map" name="Map">
    <area shape="RECT" coords="116,7,175,25" alt="link to inception phase concept"
    href="./../../../openup_basic/guidances/concepts/inception_phase,_0hmKgBOMEduCNqgZdt_OaA.html"
    guid="_0hmKgBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="255,11,327,27" alt="link to elaboration phase concept"
    href="./../../../openup_basic/guidances/concepts/elaboration_phase,_2plxwBOMEduCNqgZdt_OaA.html"
    guid="_2plxwBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="395,11,476,27" alt="link to construction phase concept"
    href="./../../../openup_basic/guidances/concepts/construction_phase,_48EKsBOMEduCNqgZdt_OaA.html"
    guid="_48EKsBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="554,10,619,27" alt="link to transition phase concept"
    href="./../../../openup_basic/guidances/concepts/transition_phase,__ca5UBOMEduCNqgZdt_OaA.html"
    guid="__ca5UBOMEduCNqgZdt_OaA" />
    <area shape="RECT" coords="39,98,100,162" alt="link to inception phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/inception_phase_iteration,_xupMvxOKEduCNqgZdt_OaA.html"
    guid="_xupMvxOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="188,99,250,168" alt="link to elaboration phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/elaboration_phase_iteration,_0Spa4BOKEduCNqgZdt_OaA.html"
    guid="_0Spa4BOKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="332,100,397,165" alt="link to construction phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/construction_phase_iteration,_3CqrAROKEduCNqgZdt_OaA.html"
    guid="_3CqrAROKEduCNqgZdt_OaA" />
    <area shape="RECT" coords="480,98,541,167" alt="link to transition phase iteration delivery process"
    href="./../../../openup_basic/deliveryprocesses/transition_phase_iteration,_467NIhOKEduCNqgZdt_OaA.html"
    guid="_467NIhOKEduCNqgZdt_OaA" />
</map>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:SupportingMaterial" name="openup_copyright" briefDescription="OpenUP Copyright Information" id="_UaGfECcTEduSX6N2jUafGA" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/supportingmaterials/resources/CRsym_obj.gif" presentationName="OpenUP Copyright" shapeicon="openup_basic/guidances/supportingmaterials/resources/CRsym_obj.gif" variabilityType="na">
        <Presentation name="new_supporting_material,_UaGfECcTEduSX6N2jUafGA" briefDescription="" id="-RNyaB6jxqoopm9fJU8k9vg" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-01T01:45:05" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    Copyright &copy; 1987, 2006 IBM Corp. All Rights Reserved.<br />
     Copyright &copy; 2006 Telelogic AB. All Rights Reserved.<br />
     Copyright &copy; 2006 Armstrong Process Group, Inc. All Rights Reserved.<br />
     Copyright &copy; 2006 Number Six Software, Inc. All Rights Reserved.<br />
</p>
<p>
    And others. All rights reserved
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Role" name="analyst" briefDescription="The person in this role represents customer and end-user concerns by gathering input from stakeholders to understand the problem to be solved and by capturing and setting priorities for requirements." id="_0VxJsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Analyst" variabilityType="na">
        <Presentation xsi:type="uma:RoleDescription" name="analyst,_0VxJsMlgEdmt3adZL5Dmdw" briefDescription="" id="_Nx8icKYdEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-05T03:44:25" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <AssignmentApproaches>&lt;p>&#xD;
    This role can be assigned in the following ways:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        On small, agile teams this role is often shared among several team members that also perform other roles.&amp;nbsp; See&#xD;
        &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../openup_basic/guidances/guidelines/self_organize_work_assignments,_rmBEkJjsEduad8I_c-ogIA.html&quot;&#xD;
        guid=&quot;_rmBEkJjsEduad8I_c-ogIA&quot;>Guideline: Self Organize Work Assignments&lt;/a>&amp;nbsp;and &lt;a&#xD;
        class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../openup_basic/guidances/guidelines/staffing_project,_Jq64EJjsEduad8I_c-ogIA.html&quot;&#xD;
        guid=&quot;_Jq64EJjsEduad8I_c-ogIA&quot;>Guideline: Staffing a Project&lt;/a>&amp;nbsp;for more information on this approach.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        One (or more)&amp;nbsp;team member(s) performs this role exclusively. This commonly adopted approach is suitable for&#xD;
        complex requirements that are difficult to gather.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        One staff (or more) team member(s) performs both this role and the &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0ZM4MclgEdmt3adZL5Dmdw&quot;>Tester&lt;/a>&#xD;
        role. This is a good option for smaller or resource&lt;font color=&quot;#ff0000&quot;>-&lt;/font>constrained test teams.&#xD;
    &lt;/li>&#xD;
&lt;/ul></AssignmentApproaches>
          <Skills>&lt;p>&#xD;
    An analyst needs the following knowledge, skills, and abilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Expertise in identifying and understanding problems and opportunities&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ability&amp;nbsp;to articulate the needs that are associated with the key problem to be solved or opportunity to be&#xD;
        realized&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ability to collaborate effectively with the extended team through collaborative working sessions, workshops, JAD&#xD;
        sessions and other techniques.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Good communication skills, verbally and in writing&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Knowledge of the business and technology domains or the ability to quickly absorb and understand such information&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;br /></Skills>
          <Synonyms></Synonyms>
        </Presentation>
        <ResponsibleFor>_0WVxcMlgEdmt3adZL5Dmdw</ResponsibleFor>
        <ResponsibleFor>_BVh9cL-CEdqb7N6KIeDL8Q</ResponsibleFor>
        <ResponsibleFor>_Wn7HcNcEEdqz_d2XWoVt6Q</ResponsibleFor>
        <ResponsibleFor>_W2SgEDR5EdutE_HNDTJk5Q</ResponsibleFor>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="supporting_requirements" briefDescription="This artifact captures system-wide requirements not captured in scenarios or use cases, including requirements on quality attributes and global functional requirements." id="_BVh9cL-CEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q" briefDescription="" id="-_dNuyh-0q5vpCiIiLfbj6w" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T06:42:23" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[<p>
    Supporting Requirements and Use Cases, together, define the system requirements. Use Cases describe the behavioral
    requirements for the system, and Supporting Requirements describe system-wide requirements that are not captured in Use
    Case Specifications. Making this distinction simplifies maintenance.
</p>
<p>
    Supporting Requirements may be categorized according to the FURPS+ model (Functional, Usability, Reliability,
    Performance, Supportability + Constraints). For more information on this classification, see <a
    class="elementLinkWithType"
    href="./../../openup_basic/guidances/concepts/supporting_requirements,_VXZ5wO0IEdqHTdbLTmC5IQ.html"
    guid="_VXZ5wO0IEdqHTdbLTmC5IQ">Concept: Supporting Requirements</a>.
</p>
<p>
    The figure that follows illustrates the relationship among the Supporting Requirements, Use Case Specifications, and
    Actors.
</p>
<p>
    &nbsp;<img height="400" alt="" src="openup_basic/workproducts/resources/supporting_reguirements2.gif" width="600" />
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving>&lt;p> The goal of&amp;nbsp;this&amp;nbsp;work product is&amp;nbsp;to make sure that all types &#xD;
  of requirements are covered, which reduces the risk of not considering some &#xD;
  important facet of the system.&amp;nbsp;FURPS+ requirements are system-wide, and &#xD;
  they&amp;nbsp;influence the Architectural Mechanisms that you will create, thus &#xD;
  guiding development of the system's foundation. &#xD;
  These requirements are frequently the major cost item, &#xD;
  because they determine architectural choices.&lt;strong> &#xD;
  &lt;/strong>&lt;/p>&#xD;
&lt;p> Furthermore, if you do not capture system-wide requirements in a central location, &#xD;
  but repeat them throughout the Use Cases, the result will &#xD;
  be more maintenance and more chance for error. &lt;/p></ImpactOfNotHaving>
          <Purpose></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions>&lt;p> This work product does not imply using only one &#xD;
  document to capture all requirement types. To manage the communication of the &#xD;
  information, it makes more sense to separate the information into separate documents &#xD;
  or to use the Work Items List.&lt;strong> &lt;/strong>&lt;/p>&#xD;
&lt;p align=&quot;left&quot;> The following are recommendation and options for representing &#xD;
  the Supporting Requirements:&lt;/p>&#xD;
&lt;h4> Option: Use the Work Items List&lt;/h4>&#xD;
&lt;p> Consider capturing Supporting Requirements in the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: &#xD;
  Work Items List&lt;/a>, which you can use for prioritizing and managing requirements. &#xD;
  If Stakeholders are comfortable with it, or with accessing a report automatically &#xD;
  generated from it, then you do not need a separate document. &lt;/p>&#xD;
&lt;h4>&#xD;
    Option: Include as Part of the Vision Document&#xD;
&lt;/h4>&#xD;
&lt;p> Consider including some types of Supporting Requirements in &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Artifact: &#xD;
  Vision&lt;/a>. To keep the Vision stable, follow this option for the requirements &#xD;
  types that need less refinement, such as Product Qualities, Documentation, or &#xD;
  Compliance. &lt;/p></RepresentationOptions>
        </Presentation>
        <Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="use_case" briefDescription="This artifact captures the sequence of actions a system performs that yields an observable result of value to those interacting with the system." id="_0VGbUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Use Case" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="use_case,_0VGbUMlgEdmt3adZL5Dmdw" briefDescription="" id="_zHZW8qYSEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-13T11:58:40" changeDescription="" version="" externalId="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving></ImpactOfNotHaving>
          <Purpose><![CDATA[<p> The primary purpose of the Use Case is to capture the required system behavior 
  from the perspective of the end user, to achieve one or more goals. Different 
  users benefit in different ways, of course: </p>
<ul>
  <li> <strong>Customers</strong> use them to describe, or at least to approve, 
    the description of the system's behavior. </li>
  <li><strong> Potential users</strong> use them to understand the system's behavior. 
  </li>
  <li><strong> Architects </strong>use them to identify architecturally significant 
    functionality. </li>
  <li><strong> Developers </strong>use them<strong> </strong> to understand the 
    required system behavior so they can identify classes from the Use Cases' 
    flow of events. </li>
  <li><strong> Testers</strong> use them as a basis for identifying a subset of 
    the required Test Cases. </li>
  <li> <strong>M</strong><b>anagers</b> use them<b> </b> to plan and assess the 
    work for each iteration. </li>
  <li><strong> Technical writers </strong>use them 
    to understand the sequence of system behavior 
    that they need to describe in the documentation. </li>
</ul>]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions>&lt;p> Decide the extent to which you will elaborate on Use &#xD;
  Cases: &lt;/p>&#xD;
&lt;ul>&#xD;
    &#xD;
  &lt;li> Describe only major flows? &lt;/li>&#xD;
    &#xD;
  &lt;li> Describe only the most important Use Cases? &lt;/li>&#xD;
    &#xD;
  &lt;li>Fully describe preconditions and post-conditions? &lt;/li>&#xD;
    &#xD;
  &lt;li> Describe scenarios first, and then raise the level of abstraction by describing &#xD;
    Use Case flows? &lt;/li>&#xD;
&lt;/ul></RepresentationOptions>
        </Presentation>
        <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="vision" briefDescription="This artifact contains the definition of the stakeholders' view of the product to be developed, specified in terms of the stakeholders' key needs and features. It contains an outline of the envisioned core requirements for the system." id="_0WVxcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Vision" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="vision,_0WVxcMlgEdmt3adZL5Dmdw" briefDescription="" id="_zHTQUKYSEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-28T02:55:39" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[<p>
    This artifact&nbsp;provides a complete vision for the software system under development and supports the contract
    between the customer and the development organization. Every project needs a source for capturing all Stakeholders'
    expectations.
</p>
<p>
    This artifact&nbsp;is written from the customers' perspective, focusing on the essential features of the system and
    acceptable levels of quality. The artifact should include a description of what <a class="elementLinkWithUserText"
    href="./../../openup_basic/guidances/termdefinitions/feature,_PgYREAeYEduWycDgioo5rg.html"
    guid="_PgYREAeYEduWycDgioo5rg">features</a>&nbsp;will be included, as well as those considered but not included.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving>If this artifact is not used, there is a high risk that Stakeholders and the development &#xD;
team will have different expectations.&amp;nbsp;This could lead to cancellation of &#xD;
the project.</ImpactOfNotHaving>
          <Purpose><![CDATA[<p> This artifact&nbsp;provides a high-level, sometimes contractual, basis for 
  the more detailed technical requirements that are visible to the Stakeholders. 
  It captures the essence of the system by describing high-level 
  requirements and design constraints that give the reader an overview of the 
  system from a behavioral requirements perspective. It serves 
  as input for the project-approval process, 
  communicates the fundamental "what and why" for the project, and provides 
  a plan against which all future decisions should be validated. </p>]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions>Tailor this artifact as necessary for your project's needs. It is generally good &#xD;
practice to keep this artifact brief so you can release &#xD;
it to Stakeholders as soon as possible, and to make it easy for Stakeholders to &#xD;
read and understand. You can &#xD;
accomplish this by including only the most important Stakeholder requests &#xD;
and features and avoiding details of requirements. &#xD;
You can describe details in the other requirement &#xD;
artifacts.</RepresentationOptions>
        </Presentation>
        <Checklist>_0WoFUMlgEdmt3adZL5Dmdw</Checklist>
        <Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="work_items_list" briefDescription="This artifact contains a list of all scheduled work to be done within the project, as well as proposed work that may affect the product in this or future projects. Each Work Item may contain references to information relevant to carry out the work described within the work item." id="_rGNWsCbSEdqh1LYUOGRh2A" orderingGuide="" suppressed="false" presentationName="Work Items List" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="work_items_list,_rGNWsCbSEdqh1LYUOGRh2A" briefDescription="" id="-buxz4BVToq97bSxaqyjySg" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-30T11:42:59" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[<p>
    This artifact provides a focal point for the entire team:
</p>
<ul>
    <li>
        It provides one list containing all requests for additional capabilities or enhancement for that application. Note
        that some of these requests may never be implemented, or be implemented in later projects
    </li>
    <li>
        It provides one list of all the work to be prioritized, estimated, and assigned within the project. The risk list
        is prioritized separately.
    </li>
    <li>
        It provides one place to go to for the development team to understand what needs to be done, get references to
        material required to carry out the work, and one place to go to report progress made.
    </li>
</ul>
<p>
    Work items can be very large in scope, especially when capturing requests for enhancements, such as “Support Financial
    Planning” for a personal finance application. Work Items are analyzed and broken down into smaller Work Items so they
    can assigned to an iteration, such as a use case scenario for&nbsp;“Calculate Net Worth”. Further breakdown may be
    required to identify suitable tasks to be assigned to developers, such as “Develop UI for Calculate Net Worth”. This
    means that Work Items often have parent / child relationships.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving></ImpactOfNotHaving>
          <Purpose><![CDATA[To collect all requests for work that will potentially be taken on within the project, so work can be prioritized, effort
estimated and progress tracked.]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions>&lt;h3>&#xD;
    As a spreadsheet or database&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The Work Items List can be captured as a separate artifact, represented by a spreadsheet or database table, see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/examples/work_items_list,_nHomIDgzEdu4E8ZdmlYjtA.html&quot; guid=&quot;_nHomIDgzEdu4E8ZdmlYjtA&quot;>Example: Work Items List&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    In specific tools&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    Project Management, Requirements Management and Change Request tools are an option to capture the list of work to be&#xD;
    done.&#xD;
&lt;/p>&#xD;
&lt;h3>&#xD;
    Subset As part of the Iteration Plan&#xD;
&lt;/h3>&#xD;
&lt;p>&#xD;
    The &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0aQBEslgEdmt3adZL5Dmdw&quot;>Artifact: Iteration Plan&lt;/a> typically references Work Items that are assigned to that&#xD;
    iteration. If the team is capturing the Iteration Plan on a Whiteboard for example, the team may choose to reference&#xD;
    high-level work items in the Work Items List that are assigned to the iteration, and maintain low-level child work&#xD;
    items used to track day-to-day work only within an iteration plan.&lt;br />&#xD;
&lt;/p></RepresentationOptions>
        </Presentation>
        <Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
        <Template>_QwUJYDg0Edu4E8ZdmlYjtA</Template>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="iteration_plan" briefDescription="A fine-grained plan describing the objectives, work assignments, and evaluation criteria for the iteration." id="_0aQBEslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Iteration Plan" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="iteration_plan,_0aQBEslgEdmt3adZL5Dmdw" briefDescription="" id="_BcBR8KX5EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-01T10:47:45" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[<p>
    The main objectives of the iteration plan is to provide the team with one central place for information regarding
    iteration objectives, detailed plan with task assignments, and evaluation results. This artifcat also helps the team to
    monitor the progress of the iteration.
</p>
<p>
    The task assignments for an iteration is a subset of all tasks on the <a class="elementLinkWithType" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>, therefore the iteration plan ideally references those
    work items.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving></ImpactOfNotHaving>
          <Purpose><![CDATA[<p>
    Communicate the objectives, task assignment, and evaluation criteria for a given iteration.
</p>]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions>&lt;p>&#xD;
    The level of detail/formality of the plan must be adapted to what you need to successfully meet these objectives.The&#xD;
    plan could, for example, be captured&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        on a whiteboard listing the objectives, task assignments and evaluation criteria,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a 1-page document listing the objectives and evaluation criteria of the iteration, as well as referencing the&#xD;
        Work Items List for assignments for that iteration,&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        a more complex document, supported by a Gantt or Pert chart in a project planning tool.&#xD;
    &lt;/li>&#xD;
&lt;/ul></RepresentationOptions>
        </Presentation>
        <Concept>_lam4ADkBEduxovfWMDsntw</Concept>
        <Template>_0dBoQMlgEdmt3adZL5Dmdw</Template>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="work_items_list" briefDescription="This guideline explains the lifecycle of work items, and how the Work Items List is used." id="_7vEXEMA4EdqSgKaj2SZBmg" orderingGuide="" suppressed="false" presentationName="Work Items List" variabilityType="na">
        <Presentation name="work_items_list,_7vEXEMA4EdqSgKaj2SZBmg" briefDescription="" id="-G1Oxlk6F0R09vClqy1EzOw" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-31T10:22:12" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>&nbsp;captures all scheduled work to be done within the
    project, as well as proposed work that may affect the product. Some of the Work Items may be implemented in this
    project, some of them may be implemented in a future project, and some of them may never be implemented.
</p>
<p>
    Some of the work items may still be poorly defined, representing a big chunk of work requiring potentially several
    staff months of effort. As the priority of these work items increase, they are typically decomposed into smaller work
    items that represent specific and well-defined tasks that may take hours or days to address. In other cases, specific
    and well-defined work items are created directly, representing for example a defect to be addressed, see Figure 1.
</p>
<br />
<img height="369" alt="work item list overview"  src="openup_basic/guidances/guidelines/resources/wil_overview.bmp" width="600" /><br />
<br />
<p>
    <strong><em>Figure 1. Work Items List provides one prioritized list of scheduled and proposed work.</em></strong>
</p>
<p>
    A Work Item may represent work associated with a defect, enhancement request, use case, scenario, user story,
    supporting requirement, or anything else that captures a potential requirement or improvement to your system. A Work
    Item may reference any type of requirement, defect, enhancement request, or other useful information guiding you in
    what needs to be done.
</p>
<p>
    A big advantage with the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>&nbsp;is that it enables you to prioritize only one list
    containing all the things that may need to be addressed, whether the work item represent a work related to a
    requirement, enhancement, or defect. The one exception is that we separately prioritize the risk list.
</p>
<p>
    Nothing in the project will get done if not represented or mapped to a Work Item. This means that all requirements,
    defects and change requests have to at some stage be mapped to a work item. Also, a developer will not take on work
    that is not represented in a Work Item. Only Work Items needs to be prioritized. This also means that tracking Work
    Items are a primary means of understanding status of the project.
</p>
<p>
    There are two major types of Work Items:
</p>
<ul>
    <li>
        <strong>Un-scheduled Work Items:</strong> These Work Items have not yet been assigned to an iteration, and there is
        no detailed effort estimate for the Work Item yet.
    </li>
    <li>
        <strong>Scheduled Work Items:</strong> These Work Items are assigned to an iteration, and typically have an
        additional set of attributes filled in, such as detailed effort estimates.
    </li>
</ul>
<h3>
    Un-scheduled Work Items
</h3>
<p>
    Most Work Items are initially un-scheduled, meaning that it has not yet been decided whether to do them, and when to do
    them. Unscheduled Work Items should always represent something meaningful to deliver to stakeholders, such a scenario
    to be detailed, designed, implemented and tested. You may consider capturing the following data for such Work Items:
</p>
<ul>
    <li>
        Name
    </li>
    <li>
        Description
    </li>
    <li>
        Priority
    </li>
    <li>
        Size estimate, such as a point estimate, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html" guid="_CGHskBEdEdqY7JB6N6CW2w">Guideline: Agile Estimation</a>.
    </li>
    <li>
        State, such as New, Assigned, Resolved, Verified, Closed, see Work Items States below
    </li>
    <li>
        Links to other reference material, such as requirements or detailed specifications of what needs to be done
    </li>
</ul>
<h3>
    Scheduled Work Items
</h3>
<p>
    Once a Work Item has been assigned to an iteration, it becomes scheduled. Note that we only assign Work Items to the
    current or next iteration. There is no point in assigning Work Items to a specific future iteration, since we cannot
    predict what a meaningful schedule will be more than an iteration in advance, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/iteration_planning,_0auiMMlgEdmt3adZL5Dmdw.html" guid="_0auiMMlgEdmt3adZL5Dmdw">Guideline: Iteration Planning</a>.
</p>
<p>
    The following additional attributes are useful for Scheduled Work Items:
</p>
<ul>
    <li>
        Target iteration
    </li>
    <li>
        Responsible team member
    </li>
    <li>
        Effort estimate left, such as actual hours of work, see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html" guid="_CGHskBEdEdqY7JB6N6CW2w">Guideline: Agile Estimation</a>.
    </li>
    <li>
        Hours worked
    </li>
</ul>
<p>
    This provides the information required to plan and manage an iteration. We can plan iterations by understanding effort
    involved and we can do <a class="elementLinkWithType" href="./../../../openup_basic/guidances/reports/iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA.html" guid="_uAzgkDg3Edu4E8ZdmlYjtA">Report: Iteration Burndown</a> by tracking how much work is left.
</p>
<h3>
    Work Items States
</h3>
<p>
    We have found the following states to be useful to track Work Items:
</p>
<ul>
    <li>
        New: Work Item has been created, but not yet assigned to a team member.
    </li>
    <li>
        Assigned: A team member has been identified as responsible for the Work Item.
    </li>
    <li>
        Resolved: The team member responsible for the work items has implemented and tested the Work Item.
    </li>
    <li>
        Verified: The Work Item has been independently tested.
    </li>
    <li>
        Closed: The Work Item is no longer active.
    </li>
</ul>
<p>

    You may choose another set of states, based on your needs.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="glossary" briefDescription="This artifact defines important terms used by the project. These terms are the basis for effective collaboration with the stakeholders and other team members." id="_Wn7HcNcEEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false" presentationName="Glossary" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="glossary,_Wn7HcNcEEdqz_d2XWoVt6Q" briefDescription="" id="-iOn7_gfX_iELWRNGJ2JKPQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T08:23:00" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[<p>
    The Glossary helps you avoid miscommunication by providing two essential resources:
</p>
<ul>
    <li>
        A central location to look for terms and abbreviations that are new to development team members
    </li>
    <li>
        Definitions of terms that are used in specific ways within the domain
    </li>
</ul>
<p>
    Definitions for the Glossary terms come from several sources, such as requirements documents, specifications, and
    discussions with Stakeholders and domain experts.
</p>]]></MainDescription>
          <KeyConsiderations><![CDATA[<p>
    In some projects that do not involve business or domain modeling, the Glossary is the primary artifact for capturing
    information about the project's business domain.
</p>
<p>
    Although listed as an output from, and an input to tasks associated with the requirements discipline, this artifact can
    be updated at any time, by any role, as new terms are identified.
</p>]]></KeyConsiderations>
          <ImpactOfNotHaving>Misunderstandings about the meanings of data items account for many failed projects. &#xD;
Some of them become obvious only in the late stages of system testing and can &#xD;
be extremely expensive to correct.</ImpactOfNotHaving>
          <Purpose><![CDATA[The goal is for  the Glossary to provide a common 
vocabulary agreed upon by all Stakeholders. It can 
help people from different functional groups reach a mutual 
understanding of the&nbsp;system. 
<!--StartFragment -->
The goal is not to record all possible terms, but only those 
that are unclear, ambiguous, or require elaboration.]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions>&lt;p>&#xD;
    The Glossary is a simple alphabetized listing of domain terms and their definitions.&amp;nbsp; It can be captured in a&#xD;
    spreadheet,&amp;nbsp;document, or&amp;nbsp;published on a Wiki site to simplify access and maintenance.&#xD;
&lt;/p></RepresentationOptions>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="supporting_requirements" briefDescription="This concept describes the supporting requirements" id="_VXZ5wO0IEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" variabilityType="na">
        <Presentation name="supporting_requirements_1,_VXZ5wO0IEdqHTdbLTmC5IQ" briefDescription="" id="-3SXuKijeVOZalgLPgWRyFA" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2006-12-21T06:31:36" changeDescription="" version="0.2">
          <MainDescription><![CDATA[<h3>
    Definition
</h3>
<p>
    Supporting requirements are requirements that&nbsp;define necessary system quality attributes&nbsp;such as performance,
    usability and reliability, as well as global functional requirements&nbsp;that are not captured in behavioral
    requirements artifacts such as use-cases.
</p>
<h3>
    Supporting Requirements Categories
</h3>
<p>
    Supporting requirements are categorized according to the FURPS+ model (Functional, Usability, Reliability, Performance,
    Supportability + constraints). Constraints&nbsp;include design, implementation, interfaces, physical constraints, and
    business rules. A description of each of these types of requirements follows.
</p>
<p>
    Supporting requirements and Use Cases, together, define the requirements of the system. These requirements support the
    features listed in the Vision statement. Each requirement should&nbsp;support at least one feature, and each feature
    should be supported by at least one to requirement.
</p>
<p>
    In general, <strong>functional</strong> requirements describe behavior and are captured in&nbsp;Use Cases (see&nbsp;<a
    class="elementLinkWithType" href="./../../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html"
    guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: Use Case</a>). <strong>Non-functional</strong> requirements are captured in
    the <a class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html"
    guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>. However, nonfunctional requirements that are
    closely associated with a particular Use Case are often captured within the Use Case itself to simplify communication
    and maintenance.&nbsp; Similarly, there are global, or system-wide, functional requirements that are often captured
    among the supporting requirements for the same reasons.&nbsp;
</p>
<h4>
    Functional requirements
</h4>
<p>
    Functionality requirements include all the overarching, system wide functional requirements. These functional
    requirements represent the main system features that are familiar within the business domain or technically oriented
    requirements such as auditing, licensing, localization, mail, online help, printing, reporting, security, system
    management, or workflow.
</p>
<h4>
    Usability requirements
</h4>
<p>
    Usability requirements include requirements based on human factors and user interface issues such as accessibility,
    interface aesthetics, and consistency within the user interface.
</p>
<h4>
    Reliability requirements
</h4>
<p>
    Reliability requirements include aspects such as availability, accuracy, predictability, frequency of failure or
    recoverability of the system from shut-down failure.
</p>
<h4>
    Performance requirements
</h4>
<p>
    Performance requirements address concerns such as throughput of information through the system, system response time
    and resource usage.
</p>
<h4>
    Supportability requirements
</h4>
<p>
    Supportability requirements include requirements such as compatibility and the abilities to test, adapt, maintain,
    configure, install, scale, localize, and so on.
</p>
<h4>
    + Constraints
</h4>
<p>
    The <strong>+</strong> of the FURPS+ acronym allows you to specify constraints, such as design, implementation,
    interfaces, physical constraints, and business rules:
</p>
<ul>
    <li>
        <strong>Design constraints</strong> limit the design and state requirements on the approach that should be taken in
        developing the system.
    </li>
    <li>
        <strong>Implementation constraints</strong> put limits on coding or construction (required standards, languages,
        tools, or platform)
    </li>
    <li>
        <strong>Interface constraints</strong> are requirements to interact with external systems, describing protocols or
        the nature of the information that is passed across that interface.
    </li>
    <li>
        <strong>Physical constraints</strong> affect the hardware or packaging housing the system (shape, size, and
        weight).
    </li>
    <li>
        <strong>Business rules</strong> are policies or decisions that govern how the business operates. They may constrain
        the steps described in the Use Case flow.
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="use_case" briefDescription="A use case describes what the system must do to provide value to the stakeholders." id="_KudM0NcJEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false" presentationName="Use Case" variabilityType="na">
        <Presentation name="use_case,_KudM0NcJEdqz_d2XWoVt6Q" briefDescription="" id="-BQLZ5GRUNrMdU6XeZAfe9Q" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-03T06:00:52" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<h3>
    <a id="Definitions" name="Definitions">Definitions</a>
</h3>
<h4>
    Use Case
</h4>
<p>
    A use case instance defines a sequence of actions performed by the system that yields an observable result of value to
    a particular actor. There are several key words in this definition:
</p>
<ul>
    <li>
        <b>"use case instance"</b> The sequence referred to in the definition is actually a specific flow of events through
        the system, or an instance. Many flows of events are possible, and many may be very similar. To make a use-case
        understandable, you should group similar flows of events into one use case. Therefore, identifying and describing a
        use case really means identifying and describing a group of related flows of events.
    </li>
    <li>
        <strong>"actions"</strong> An action is a computational or algorithmic procedure. It is invoked either when the
        actor provides a signal to the system or when the system gets a time event. An action may imply signal
        transmissions to either the invoking actor or other actors. An action is atomic, which means it is performed either
        entirely or not at all.
    </li>
    <li>
        <b>"performed by the system"</b> This means that the system provides the use case. An actor communicates with a
        use-case instance of the system.
    </li>
    <li>
        <b>"an observable result of value"</b> You can put a value on a successfully performed use case. A use case should
        make sure that an actor can perform a task that has an identifiable value. This is very important in determining
        the correct level or granularity for a use case. <em>Correct level</em> refers to achieving use cases that are not
        too small.&nbsp;&nbsp;
    </li>
    <li>
        <b>"a&nbsp;particular actor"</b> The actor is key to finding the correct use case, especially because the actor
        helps you avoid use cases that are too large. As an example, consider a visual modeling tool. There are really two
        actors&nbsp;in this application: a developer, who develops systems using the tool as support; and a system
        administrator, who manages the tool. Each of these actors has his own demands on the system, and will therefore
        require his own set of use cases.
    </li>
</ul>
<p>
    The functionality of a system is defined by different use cases, each of which represents a specific goal (observable
    result of value) for a particular actor. The description of a use case defines what happens in the system when the use
    case is performed.
</p>
<p class="picturecenter" align="center">
    <img height="173" alt="Diagram described in caption." src="openup_basic/guidances/concepts/resources/im_uc.gif" width="325" />
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
                <p class="picturetext">
                    Figure 1: ATM use case example.
                </p>
            </blockquote>
        </blockquote>
    </blockquote>
</blockquote>
<p>
    In an automated teller machine the client can, for instance, withdraw money from an account, transfer money to an
    account, or check the balance of an account. These correspond to specific goals that the actor has in using the system.
</p>
<p>
    Each use case has a task of its own to perform. The collected use cases constitute all the possible ways of using the
    system. You should be able to&nbsp;determine the goal&nbsp;of a use-case task simply by observing its name.&nbsp;&nbsp;
</p>
<h4>
    <a id="A Use-Case has Many Possible Instances" name="A Use-Case has Many Possible Instances">Use-Case</a>
    Instance&nbsp;
</h4>
<p>
    A use-case can follow an almost unlimited, but enumerable, number of paths. These paths represent the choices open to
    the use-case in the description of its flow of events. The path chosen depends on events. Types of events include:
</p>
<ul>
    <li>
        <strong>Input from an actor&nbsp;</strong>
    </li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        For example, an actor can decide, from several options, what to do next. In the use case Recycle Items in the
        Recycling-Machine System the Customer always has two options: insert another deposit item or get the
        receipt&nbsp;for returned items.
    </p>
</blockquote>
<ul>
    <li>
        <strong>A check of values or types of an internal object or attribute</strong>
    </li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        For example, the flow of events may differ if a value is greater or less than a certain value.&nbsp;In the use case
        Withdraw Money in an automated teller machine system, the flow of events will differ if the Client asks for more
        money than he has in his account. In that situation, the use-case instance follows a&nbsp;different path.
    </p>
</blockquote>
<h4>
    Scenario
</h4>
<p>
    A scenario is a specific sequence of actions that illustrates a behavior.&nbsp; A scenario may be used to illustrate a
    use-case instance and to specify test cases.
</p>
<h4>
    Use-Case Realization
</h4>
<p>
    A use case describes what happens in the system when an actor interacts with the system. The use case does not define
    how the system&nbsp;performs its tasks, in terms of collaborating objects. This is left for the use-case realizations
    to show.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        In the telephone example, the use case would indicate (among other things) that the system issues a signal when the
        actor lifts the receiver,&nbsp; and that the system then receives digits, finds the receiving party, rings his
        telephone, connects the call, transmits speech, and so on.
    </p>
</blockquote>
<p>
    In a running&nbsp;system, an instance of a use case does not correspond to any particular object in the implementation
    model (for example, an instance of a class in the code). Instead, it corresponds to a specific flow of events that is
    invoked by an actor and&nbsp;performed as a sequence of events among a set of objects. In other words, instances of use
    cases correspond to communicating instances of implemented objects. We call this the <strong>realization of the use
    case</strong>. Often, the same objects participate in realizations of more than one use case. For example, both the use
    cases Deposit and Withdrawal in a banking system may use a certain account object in their realization. This does not
    mean that the two use cases communicate, but only that they use the same object in their realization.
</p>
<p>
    You can&nbsp;think of&nbsp;a flow of events as consisting of several subflows that,&nbsp;taken together, yield the
    total flow of events. You can reuse the description of a subflow in other flows of events for other use cases. Subflows
    in the description of one use case's flow of events may be common to those of other use cases. In the design you should
    have the same objects perform this common behavior for all the relevant use cases. That is, only one set of objects
    should perform this behavior no matter which use case is running.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        In an automated teller machine system, the initial subflow is the same in the flow of events of the use cases
        Withdraw Money and Check Balance. The flow of events of both use cases start by checking the identity of the card
        and the client's personal access code.
    </p>
</blockquote>
<h3>
    Properties of Use Cases
</h3>
<h4>
    <a id="Name" name="Name">Name</a>
</h4>
<p>
    Each use case should have a name that indicates what is achieved by its interaction with the actors. The name may have
    to be several words to be understood. Note: No two use cases can have the same name.
</p>
<blockquote>
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        These are examples of variations of the name for the use case Recycle Items in the Recycling Machine example:
    </p>
    <ul>
        <li>
            Return Deposit Items
        </li>
        <li>
            Deposit Items
        </li>
    </ul>
</blockquote>
<h4>
    <a id="Brief Description" name="Brief Description">Brief Description</a>
</h4>
<p>
    The brief description of the use case should reflect its purpose. As you write the description, refer to the actors
    involved in the use case and the glossary.&nbsp;If you need to, define new concepts.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        Following are sample brief descriptions of the use cases Recycle Items and Add New Bottle Type in the
        Recycling-Machine system.
    </p>
    <p class="example">
        <b>Recycle Items</b>: The user uses this machine to automatically have all the return items (bottles, cans, and
        crates) counted, and receives a receipt. The receipt is to be cashed at a cash register (another machine).
    </p>
    <p class="example">
        <b>Add New Bottle Type</b>: The manager can add options for the user to return new kinds of bottles can be added to
        the machine by starting it in <em>learning</em> mode and inserting 5 samples, just&nbsp;as when the customers
        return items. The machine can measure the bottles and learns to identify them. The manager specifies the refund
        value for the new bottle type.
    </p>
</blockquote>
<h4>
    Flow of Events
</h4>
<h5>
    <a id="XE_use_case__flow_of_events" name="XE_use_case__flow_of_events"></a><a id="XE_flow_of_events__guidelines_for" name="XE_flow_of_events__guidelines_for"></a><a id="Flow of Events - Contents" name="Flow of Events - Contents">Flow of
    Events - Contents</a>
</h5>
<p>
    The f<b>low of events</b> of a use case contains the most important information derived from use-case modeling work. It
    should describe the use case's flow of events clearly enough for an outsider to easily understand. Remember, the flow
    of events should represent <em>what</em> the system does, not <em>how</em> the system is design to perform the required
    behavior.
</p>
<p>
    Follow these guidelines for the contents of the flow of events:
</p>
<ul>
    <li>
        Describe how the use case starts and ends.
    </li>
    <li>
        Describe what data is exchanged between the actor and the use case.
    </li>
    <li>
        Do not describe the details of the user interface, unless it is necessary to understand the behavior of the system.
        For example, it is often good to use a limited set of web-specific terminology when it is known beforehand that the
        application is going to be web-based. Otherwise, your run the risk that the use-case text is being perceived as too
        abstract. Words to include in your terminology could be "navigate", "browse", "hyperlink" "page", "submit", and
        "browser". However, it is not advisable to include references to "frames" or "web pages" in such a way that you are
        making assumptions about the boundaries between them; this is a critical design decision.&nbsp;
    </li>
    <li>
        Describe the flow of events, not only the functionality. To enforce this, start every action with "When the actor
        ... ".
    </li>
    <li>
        Describe only the events that belong to the use case, and not what happens in other use cases or outside of the
        system.
    </li>
    <li>
        Avoid vague terminology.
    </li>
    <li>
        Detail the flow of events. Specify what happens when, for each action. Remember this text will be used to identify
        test cases.
    </li>
</ul>
<p>
    If you have used certain terms in other use cases, be sure to use the exact same terms in this use case, and
    that&nbsp;the meaning of the terms is consistent. To manage common terms, put them in a glossary.
</p>
<h5>
    <a id="Flow of Events - Structure" name="Flow of Events - Structure">Flow of Events - Structure</a>
</h5>
<p>
    The two main parts of the flow of events are <b>basic flow of events</b> and <a id="XE_flow_of_events__alternative_flow" name="XE_flow_of_events__alternative_flow"></a><b>alternative flows of
    events</b>. The basic flow of events should cover what "normally" happens when the use case is performed. The
    alternative flows of events cover behavior of optional or exceptional character in relation to the normal behavior, and
    also variations of the normal behavior. You can think of the alternative flows of events as detours from the basic flow
    of events, some of which will return to the basic flow of events and some of which will end the execution of the use
    case.
</p>
<p align="center">
    <img height="212" alt="Diagram described in caption." src="openup_basic/guidances/concepts/resources/ucstrct.gif" width="231" />
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            <p class="picturetext">
                Figure 2: Typical structure of a use case flow of events
            </p>
        </blockquote>
    </blockquote>
</blockquote>
<p class="picturetext">
    The straight arrow in Figure 2 represents the basic flow of events, and the curves represent alternative paths in
    relation to the normal. Some alternative paths return to the basic flow of events, whereas,&nbsp;others end the use
    case.
</p>
<p>
    Both the basic and alternative flows should be further structured into steps or subflows. In doing this, your main goal
    should be readability of the text (see the <em>Flow of Events - Style</em> section, which follows). A&nbsp;guideline is
    that a subflow should be a segment of behavior within the use case that has a clear purpose, and is "atomic" in the
    sense that you do either all or none of the actions described. You may need to have several levels of subflows,
    but&nbsp;avoid that if you can,&nbsp;since it makes the text more complex and harder to understand.
</p>
<p>
    The nature of this type of written text, structured into consecutive subsections,&nbsp;implies to the reader that there
    is a sequence between the subflows. To avoid misunderstandings, you should always point out whether the order of the
    subflows is fixed or not. Considerations of this kind are often related to factors such as:
</p>
<ul>
    <li>
        <strong>Business rules</strong>. For example, the user has to be authorized before the system can make certain data
        available.
    </li>
    <li>
        <strong>User-interface design.</strong> For example, the system should not enforce a certain sequence of behavior
        that may be intuitive to some but not to other users.
    </li>
</ul>
<p>
    To clarify where an alternative flow of events fits in the structure, you need to describe the following for each
    detour to the basic flow of events:
</p>
<ul>
    <li>
        Where the alternative flow can be inserted in the basic flow of events.
    </li>
    <li>
        The condition that needs to be fulfilled for the alternative behavior to start.
    </li>
    <li>
        How and where the basic flow of events is resumed, or how the use case ends.
    </li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        This is an alternative subflow in the use case Return Items in the Recycling-Machine System.
    </p>
    <p class="example">
        2.1. Bottle Stuck
    </p>
    <p class="example">
        If in section 1.5, Insert Deposit Items, a bottle gets stuck in the gate, the sensors around the gate and the
        measuring gate will detect this problem. The conveyer belt is stopped and the machine issues an alarm to call for
        the operator. The machine will wait for the operator to indicate that the problem has been fixed. The machine then
        continues in section 1.9 of the basic flow.
    </p>
</blockquote>
<p dir="ltr">
    In the example above, the alternative flow of events is inserted at a specific location in the basic flow of events.
    There are also alternative flow of events that can be inserted at more than one location, some can even be inserted at
    any location in the basic flow of events.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        This is an alternative subflow in the use case Return Items in the Recycling-Machine System.
    </p>
    <p>
        2.2. Front Panel is Removed
    </p>
    <p class="example">
        If somebody removes the front panel to the Recycling machine, the can compression is deactivated. It will not be
        possible to start the can compression with the front panel off. The removal will also activate an
        alarm&nbsp;for&nbsp;operator attention. When the front panel is closed again, the machine resumes operation from
        the point where it stopped in&nbsp;the basic flow of events.
    </p>
</blockquote>
<p>
    It might be tempting, if the alternative flow of events is very simple, to just describe it in the basic flow of events
    section (using some informal "if-then-else" construct). This should be avoided. Too many alternatives will make the
    normal behavior difficult to see. Also, including alternative paths in the basic flow of events section will make the
    text more pseudo-code like and harder to read.
</p>
<p>
    In general, extracting parts of the flow of events and describing these parts separately, can increase the readability
    of the basic flow of events and improve the structure of the use case and the use-case model. You can model extracted
    parts as the situation requires:
</p>
<ul>
    <li>
        An <strong>alternative</strong> flow of events within the base use case if it is a simple variant, option, or
        exception to the basic flow of events.
    </li>
    <li>
        As an <strong>explicit</strong> inclusion in the base use case, if it is something that you wish to encapsulate so
        that it can be reused by other use cases.
    </li>
    <li>
        As an <strong>implicit</strong> inclusion in the base use case, if the basic flow of events of the base use case is
        complete, that is, has a defined beginning and end. The nature of the extending flow should be such that you prefer
        to conceal it in the description of the base use case to render it less complex.
    </li>
    <li>
        A <strong>subflow</strong> in the basic flow of events, possibly as another option, if none of the above
        alternatives applies. For example, in a Maintain Employee Information use case, there may be separate subflows for
        adding, deleting and modifying employee information.
    </li>
</ul>
<h5>
    <a id="Flow of Events - Style" name="Flow of Events - Style">Flow of Events - Style</a>
</h5>
<p>
    You can describe use cases in many styles. As an example we show the basic flow of events of the use case Administer
    Order described in three different styles, varying primarily in how formal they are.
</p>
<p>
    The first style, shown in Example 1, is the recommended one, because it is easy to understand, and the order in which
    things happen is clearly evident. The text is divided into numbered and named subsections. Numbers are there to make it
    easy to refer to a subsection. Names of subsections will let the reader get a quick overview of the flow of events by
    browsing through the text reading only the headers.
</p>
<p>
    In Example 2, the description of the flow of events fails to clarify the order in which things happen. If you write in
    this style, you and others might miss important things that concern the system.
</p>
<p>
    Example 3 below shows a yet another style, which can be useful if you find it difficult to express the sequence of
    events clearly. This pseudo-code style is more precise, but the text is hard to read and absorb for a non-technical
    person, especially if you want to grasp the flow of events quickly.
</p>
<p>
    Finally,&nbsp;Example 4&nbsp;provides an example of a complete description of a use case flow of events.&nbsp;
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        <a id="Example 1:" name="Example 1:"><strong>Example 1:</strong></a> <strong>Recommended style for describing a use
        case</strong>
    </p>
    <p>
        In this style, the text is easy to read and the flow of events is easy to follow.
    </p>
</blockquote>
<div align="center">
    <table     style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"      cellspacing="0" bordercolordark="#808080" cellpadding="4" width="85%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <td width="100%">
                    <b>1.1. Start of Use Case</b> 
                    <p>
                        This use case starts when the actor Operator tells the system to create a measurement order. The
                        system will then retrieve all Network Element actors, their measurement objects and corresponding
                        measurement functions that are available to this particular Operator. Available Network Elements
                        are those that are in operation, and that the Operator has the authority to access. The
                        availability of measurement functions depends on what has been set up for a particular type of
                        measurement object.
                    </p>
                    <p>
                        <b>1.2. Configure Measurement Order</b>
                    </p>
                    <p>
                        The system allows the actor Operator to select which Network Elements to measure and then shows
                        which measurement objects are available for the selected Network Elements. The system allows the
                        Operator to select from the measurement objects, and then select which measurement functions to set
                        up for each measurement object.
                    </p>
                    <p>
                        The system allows the Operator to enter a textual comment on the measurement order.
                    </p>
                    <p>
                        The Operator tells the system to complete the measurement order. The system will respond by
                        generating a unique name for the measurement order and setting up default values for when, how
                        often, and for how long the measurement should be made. The default values are unique to each
                        Operator. The system then allows the Operator to edit these default values.
                    </p>
                    <p>
                        <b>1.3. Initialize Order</b>
                    </p>
                    <p>
                        The Operator tells the system to initialize the measurement order. The system will then record the
                        identity of the creating Operator, the date of creation, and the "Scheduled" status of the
                        measurement order.
                    </p>
                    <p>
                        <b>1.4. Use Case Ends</b>
                    </p>
                    <p>
                        The system confirms initialization of the measurement order to the Operator, and the measurement
                        order is made available for other actors to view.
                    </p>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<div align="center">
    <br />
</div>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        <a id="Example 2:" name="Example 2:"><strong>Example 2:</strong></a> <strong>Alternative way of describing a use
        case</strong>
    </p>
    <p>
        This style is readable, but there is no clear flow of events.
    </p>
</blockquote>
<div align="center">
    <table     style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"      cellspacing="0" bordercolordark="#808080" cellpadding="4" width="85%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <td width="100%">
                    Orderers can create Orders to collect measurement data from the Network Elements. 
                    <p>
                        The system will assign the Order a unique name as well as default values that indicate the length
                        and time of the measurement and also how often it is to be repeated. The Orderer will be able to
                        edit these values.
                    </p>
                    <p>
                        The Orderer must further specify which measurement function, network element and measurements
                        objects are applicable. The Orderer can also add a personal comment to the order.
                    </p>
                    <p>
                        When the necessary information had been defined, a new Order is created and initialized with the
                        defined attributes, the name of the creator, and the date of creation. The status of the order will
                        be set to "scheduled". (Possible values for the status are: Scheduled, Executing, Completed,
                        Canceled, and Erroneous.)
                    </p>
                    <p>
                        The user interface is then notified that a new Order has been created and receives a reference to
                        the new Order so that it can be displayed.
                    </p>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        <a id="Example 3:" name="Example 3:"><strong>Example 3:</strong></a> <strong>Another way of describing a use
        case</strong>
    </p>
    <p>
        Here the writer has chosen a formal style using pseudocode. This style makes it hard to quickly grasp the process
        steps, but can be useful if the flow of events is difficult to capture precisely.
    </p>
</blockquote>
<div align="center">
    <table     style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"      cellspacing="0" bordercolordark="#808080" cellpadding="4" width="50%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <td width="100%">
<pre>
<font size="2"><small>'Administrate order' (User identity) 
REPEAT
  &lt;='Show administer order menu'
  IF (=&gt; 'Creating an Order' (Measurement function, network element, measurement object)) THEN
     The system finds a unique name, default values for when and how long the measurement should be executed. 
     &lt;= 'Show order' (Default attributes)
    REPEAT
         IF (=&gt; 'Edit order' (Attribute to change, New value of  attribute)) THEN
               &lt;= 'Update screen' (New attributes)
         ELSIF (=&gt; 'Save order' (Order identity, Attributes)) THEN
              The order is created and initialized in the system with
              the defined attributes, the name of the creator,
              date of creation and the status 'scheduled'.
              &lt;= 'New order created' (The order)
         ENDIF
     UNTIL (=&gt; 'Quit') 
  ENDIF 
UNTIL 'Quit administer order'</small>
</font>
</pre>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<h5>
    <a id="Example 3:" name="Example 3:">Example 4:</a>&nbsp;Complete description fo the flow of events&nbsp;
</h5>
<p>
    The complete description of the flow of events of the use case Administer Order, including its alternative flows, could
    look like the example that follows:
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        <b>1.&nbsp;BASIC FLOW&nbsp;OF EVENTS</b>&nbsp;
    </p>
    <p>
        <b>1.1. Start use case</b>
    </p>
    <p>
        This use case starts when the actor Operator tells the system to create a measurement order. The system will then
        retrieve all Network Element actors, their measurement objects and corresponding measurement functions that are
        available to this particular Operator. Available Network Elements are those that are in operation, and that the
        Operator has the authority to access. The availability of measurement functions depends on what has been set up for
        a particular type of measurement object.
    </p>
    <p>
        <b>1.2. Configure measurement order</b>
    </p>
    <p>
        The system allows the actor Operator to select which Network Elements to measure and then shows which measurement
        objects are available for the selected Network Elements. The system allows the Operator to select from these
        measurement objects, and then select which measurement functions to set up for each measurement object.
    </p>
    <p>
        The system allows the Operator to enter a textual comment on the measurement order.
    </p>
    <p>
        The Operator tells the system to complete the measurement order. The system will respond by generating a unique
        name for the measurement order and setting up default values for when, how often, and for how long the measurement
        should be made. The default values are unique to each Operator. The system then allows the Operator to edit these
        default values.
    </p>
    <p>
        <b>1.3. Initialize order</b>
    </p>
    <p>
        The Operator tells the system to initialize the measurement order. The system will then record the identity of the
        creating Operator, the date of creation, and the "Scheduled" status of the measurement order.
    </p>
    <p>
        <b>1.4. End use case</b>
    </p>
    <p>
        The system confirms initialization of the measurement order to the Operator, and the measurement order is made
        available for other actors to view.
    </p>
    <p>
        <b>2.&nbsp;ALTERNATIVE FLOW OF EVENTS</b>&nbsp;
    </p>
    <p>
        <b>2.1. No network elements available</b>
    </p>
    <p>
        If in 1.1, Start use case, it turns out that no Network Elements are available to measure for this Operator, the
        system will inform the Operator. The use case then ends.
    </p>
    <p>
        <b>2.2. No measurement functions available</b>
    </p>
    <p>
        If in 1.2, Configure measurement order, no measurement functions are available for the selected Network Elements,
        the system will inform the Operator and allow the Operator to select other Network elements.
    </p>
    <p>
        <b>2.3. Cancel measurement order</b>
    </p>
    <p>
        The system will allow the Operator to cancel all actions at any point during the execution of the use case. The
        system will then return to the state it was in before the use case was started, and end the use case.
    </p>
</blockquote>
<h4>
    <a id="XE_use_case__flow_of_events" name="XE_use_case__flow_of_events"></a><a id="XE_flow_of_events__guidelines_for" name="XE_flow_of_events__guidelines_for"></a><a id="Special Requirements" name="Special Requirements">Special
    Requirements</a>
</h4>
<p>
    In the Special Requirements of a use case, you describe all the requirements on the use case that are not covered by
    the flow of events. These are non-functional requirements that will influence the design model. See also the discussion
    on non-functional requirements in <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html" guid="_0Wh-sMlgEdmt3adZL5Dmdw">Concept: Requirements</a>. You could organize these requirements in categories such as
    Usability, Reliability, Performance, and Substitutability, but normally there are so few of them that such grouping is
    not particularly value-adding.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <h5>
        Example
    </h5>
    <p class="example">
        In the Recycling-Machine System, a special requirement of the Return Deposit Items use case could be:
    </p>
    <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
        <p class="example">
            The machine has to be able to recognize deposit items with a reliability of more than 95 percent.
        </p>
    </blockquote>
</blockquote>
<h4>
    <a id="XE_postcondition__guidelines_for" name="XE_postcondition__guidelines_for"></a><a id="XE_precondition__guidelines_for" name="XE_precondition__guidelines_for"></a><a id="preconditions and Postconditions" name="preconditions and Postconditions">Preconditions and Post-conditions</a>
</h4>
<p>
    A <strong>precondition</strong> is the state of the system and its surroundings that is required before the use case
    can be started.&nbsp;Post-Conditions are&nbsp;the states the system can be in after the use case has ended. It can
    be&nbsp;helpful to use the&nbsp;concepts of <b>precondition</b> and <b>post-condition</b> to clarify how the flow of
    events starts and ends. However, only use them only if the audience for the description of the use case agrees that it
    is helpful.
</p>
<p align="center">
    <img height="278" alt="Diagram described in caption." src="openup_basic/guidances/concepts/resources/ucprepst.gif" width="344" />
</p>
<br class="picturetext" />
<br />
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
        <blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
            <p>
                Figure 3: Illustration of preconditions and resulting post-conditions
            </p>
        </blockquote>
    </blockquote>
</blockquote>
<p>
    Consider the following when specifying preconditions and post-conditions:
</p>
<ul>
    <li>
        The states described by pre- or post-conditions should be states that the user can observe. "The user has logged on
        to the system" or "The user has opened the document" are examples of observable states.
    </li>
    <li>
        A precondition is a constraint on when a use case can start. It is not the event that starts the use case.
    </li>
    <li>
        A precondition for a use case is not a precondition for only one subflow, although you can define preconditions and
        post-conditions at the subflow level.
    </li>
    <li>
        A post-condition for a use case should be true regardless of which alternative flows were executed; it should not

        be true only for the main flow. If something could fail, you would cover that in the post-condition by saying "The
        action is completed, or if something failed, the action is not performed", rather than just "The action is
        completed".
    </li>
    <li>
        When you use post-conditions together with <em>extend</em> relationships, you should take care that the extending
        use case does not introduce a subflow that violates the post-condition in the base use case.
    </li>
    <li>
        Post-conditions can be a powerful tool for describing use cases. You first define what the use case is supposed to
        achieve, which is the post-condition. You can then describe the necessary flow of events, or how to reach this
        condition.
    </li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        Examples
    </p>
    <p class="example">
        <strong>A precondition for the use case Cash Withdrawal in the ATM machine:</strong> The customer has a personally
        issued card that fits in the card reader, has been issued a PIN number, and is registered with the banking system.
    </p>
    <p class="example">
        <strong>A pos-tcondition for the use case Cash Withdrawal in the ATM machine:</strong> At the end of the use case,
        all account and transaction logs are balanced, communication with the banking system is reinitialized and the card
        is returned to the customer.
    </p>
</blockquote>
<h4>
    <a id="Extension Points" name="Extension Points">Extension Points</a>
</h4>
<p>
    An <b>extension point</b> opens up the use case to the possibility of an extension. It has a name and a list of
    references to one or more locations within the flow of events of the use case. An extension point may reference a
    single location between two behavior steps within the use case. It may also reference a set of discrete locations.
</p>
<p>
    Using&nbsp;named extension points will help you separate the specification of the behavior of the extending use case
    from the internal details of the base use case. The base use case can be modified or rearranged, as long as the names
    of the extension points remain the same, it will not affect the extending use case. At the same time, you are not
    complicating the text describing the flow of events of the base use case with details of where behavior might be
    extended into it.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p class="exampleheading">
        <strong>Example</strong>
    </p>
    <p class="example">
        In a phone system, the use case Place Call can be extended by the abstract use case Show Caller Identity. This is
        an optional service, often referred to as "Caller ID", that may or may not have been requested by the receiving
        party. A description of the extension point in the use case Place Call could look like the following:
    </p>
    <p class="example">
        <b>Name</b>: Show Identity
    </p>
    <p class="example">
        <b>Location</b>: After section 1.9 Ring Receiving Party's Telephone.
    </p>
</blockquote>
<h3>
    Specifying Use Cases
</h3>
<h4>
    <a id="How to Find Use Cases" name="How to Find Use Cases">How to Find Use Cases</a>
</h4>
<p>
    See the&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html" guid="_eyL0wCu-EdqSxKAVa9kmvA">Guideline: Find and Outline Actors and Use Cases</a>&nbsp;for guidance on finding Actors
    and Use Cases.
</p>
<h4>
    <a id="How a Use Case Evolves" name="How a Use Case Evolves">How a Use Case Evolves</a>
</h4>
<p>
    See the <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html" guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: Detail Use Cases and Scenarios</a>&nbsp;for guidance on evolving use cases.
</p>
<h4>
    Level of detail necessary in use cases&nbsp;
</h4>
<p>
    There will often be use cases in your model that are so simple that they do not need a detailed description of the flow
    of events, a step-by-step outline is quite enough. The criteria for making this decision is that you don't see
    disagreement among user kind of readers on what the use case means, and that designers and testers are comfortable with
    the level of detail provided by the step-by-step format. Examples are use cases that describe simple entry or retrieval
    of some data from the system.
</p>
<p>
    For more information on possible formats and level of detail captured for each use case see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html" guid="_qq0GMAXkEduj_7BEUj1JfQ">Guideline: Use Case Formats</a>.
</p>
<h4>
    <a id="XE_use_case__scope_of_a_use_case" name="XE_use_case__scope_of_a_use_case"></a><a id="The Scope of a Use Case" name="The Scope of a Use Case">The Scope of a Use Case</a>
</h4>
<p>
    It is often hard to decide if a set of user-system interactions, or dialog, is one or several use cases. Consider the
    use of a recycling machine. The customer inserts deposit items, such as cans, bottles, and crates, into the recycling
    machine. When she has inserted all her deposit items, she presses a button, and a receipt is printed. She can then
    exchange this receipt for money.
</p>
<p>
    Is it one use case to insert a deposit item, and another use case to require the receipt? Or is it all one use case?
    There are two actions, but one without the other is of little value to the customer. Rather, it is the complete dialog
    with all the insertions, and getting the receipt, that is of value for the customer (and makes sense to her). Thus, the
    complete dialog, from inserting the first deposit item, to pressing the button and getting the receipt, is a complete
    case of use, a use case.
</p>
<p>
    Additionally, you want to keep the two actions together, to be able to review them at the same time, modify them
    together, test them together, write manuals for them and in general manage them as a unit. This becomes very obvious in
    larger systems.
</p>
<h3>
    <a id="XE_use_case__flow_of_events" name="XE_use_case__flow_of_events"></a><a id="XE_flow_of_events__guidelines_for" name="XE_flow_of_events__guidelines_for"></a><a id="Use-Case Diagrams" name="Use-Case Diagrams">Use-Case Diagrams</a>
</h3>
<p>
    You may choose to illustrate how a use case relates to actors and other use cases in a use-case diagram (in unusual
    cases, more than one diagram). This is useful if the use case is involved with many actors, or has relationships to
    many other use cases. A diagram of this kind is of "local" character, since it shows the use-case model from the
    perspective of one use case only and is not intended to explain any general facts about the whole use-case model. Refer
    to&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/uc_model,_0VAUsMlgEdmt3adZL5Dmdw.html" guid="_0VAUsMlgEdmt3adZL5Dmdw">Guideline: Use-Case Model</a> for more information.<br />
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_zGqO0MDpEduTGJ8i4u8TMw</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Checklist" name="good_requirements" briefDescription="This checklist provides guidance on assessing the quality of requirements." id="_jxn9EO0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" presentationName="Qualities of Good Requirements" variabilityType="na">
        <Presentation name="good_requirements_1,_jxn9EO0HEdqHTdbLTmC5IQ" briefDescription="" id="-2o1pXjHpSEPN_rohLce5jA" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2006-04-10T05:07:04" changeDescription="Added checklist for good requirements in accordance with Feb. 23, 2006 minutes of RM SIG." version="0.1">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Section name="Is the requirement correct?" briefDescription="" id="_jxuDsu0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Does the requirement specify a true need, desire, or obligation?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Have you identified the &quot;root cause&quot; for the requirement?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement complete?" briefDescription="" id="_jxuDs-0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Is the requirement stated as a complete sentence?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the requirement stated entirely in one place, in a manner that does not force the reader to look at additional&#xD;
    information to understand the requirement?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement clear?" briefDescription="" id="_jxuDse0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Is the requirement unambiguous and not confusing?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does everyone agree on the meaning of the requirement?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement consistent" briefDescription="" id="_jxuDt-0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Is the requirement in conflict with other requirements?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the terminology used consistent with other requirements and glossary terms?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement verifiable?" briefDescription="" id="_jxuDte0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Can we determine whether the system satisfies the requirement?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is it possible to define a clear, unambiguous&amp;nbsp;pass/fail criterion?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is it possible to determine if the requirement has been met via inspection, analysis, demonstration or test?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement traceable?" briefDescription="" id="_jxuDtu0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Is the requirement uniquely identified so it can be unambiguously referenced?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement feasible?" briefDescription="" id="_jxuDtO0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Can the requirement be satisfied within cost and on schedule?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the requirement technically feasible with current technology?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the requirement physically achievable?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement design independent?" briefDescription="" id="_jxuDsO0HEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Are all requirements that impose constraints on the design, limiting design options,&amp;nbsp;justified?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the requirement stated in such that there is more than one way that it can be satisfied?&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the requirement atomic?" briefDescription="" id="_gRb_IJEvEdui_vx06Mo1eg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Does the requirement statement define exactly one requirement?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the requirement statement free of conjunctions (and, or, but) that may indicate multiple requirements?&#xD;
&lt;/p></Description>
          </Section>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Checklist" name="vision" briefDescription="This check list provides questions to verify that the Vision is described in a consistent and complete manner." id="_0WoFUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Vision" variabilityType="na">
        <Presentation name="vision,_0WoFUMlgEdmt3adZL5Dmdw" briefDescription="" id="_qktWQMM0EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-07T10:30:32" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Section name="Have you fully explored what the problem behind the problem is?" briefDescription="" id="_VwoioAeiEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Make sure that you have found the root cause of the Stakeholder's problem or need. Often, Stakeholders define solutions&#xD;
    rather than stating the problem that they are experiencing or the pain they are experiencing. Subsequently, they may&#xD;
    not have identified the problem correctly or the correct solution for it.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For example, &quot;We can't support customers who want to buy online&quot; is better than &quot;We need an on-line purchasing system&quot;.&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Is the problem statement correctly formulated?" briefDescription="" id="_dBs8gAeiEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Make sure that you have agreement on the problem to be solved.</Description>
          </Section>
          <Section name="Is the list of Stakeholders complete and correct?" briefDescription="" id="_jGUxYAeiEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Make sure you didn't miss any Stakeholders. If you did, you probably do not yet have all of the perspectives that you need&#xD;
to consider.</Description>
          </Section>
          <Section name="Does everyone agree on the definition of the system boundaries?" briefDescription="" id="_s-be8AeiEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Define what is &lt;strong>in&lt;/strong> and what is &lt;strong>out&lt;/strong> of system boundaries. This is a critical step in&#xD;
defining the scope of work.</Description>
          </Section>
          <Section name="Have you sufficiently explored constraints to put on the system?" briefDescription="" id="_z1uG4AeiEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Don't forget about the non-functional requirements and constraints. These are often the largest cost of development.</Description>
          </Section>
          <Section name="Have you covered all kinds of constraints, including political, economic, and environmental?" briefDescription="" id="_7KzeEAeiEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    These non-technical constraints often lead to problems later.&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Have all key features of the system been identified and defined?" briefDescription="" id="_DymaUAejEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Do a completeness check, comparing the features with the problem statement, to make sure that you didn't miss a critical&#xD;
feature.</Description>
          </Section>
          <Section name="Will the features solve the problems that are identified?" briefDescription="" id="_LRX5AAejEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Are all the features really necessary?&amp;nbsp; Perhaps you can reduce the scope.</Description>
          </Section>
          <Section name="Are the features consistent with constraints that you've identified?" briefDescription="" id="_UGRdIAejEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    Check that conflicting requirements do not exist. If you find conflicts, resolve them now.&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Can someone who is not familiar with the project understand what you hope the  project will achieve by reading the Vision document?" briefDescription="" id="_5y4uAAhUEduRe8TeoBmuGg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>The purpose of the Vision document is to describe the objectives of the project in terms that non-technical people, who are&#xD;
not closely involved with the project, can understand.</Description>
          </Section>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Checklist" name="actor" briefDescription="This check list provides questions to help ensure that all actors, and only valid actors, have been identified and described correctly." id="_0VrDEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Actor" variabilityType="na">
        <Presentation name="actor,_0VrDEMlgEdmt3adZL5Dmdw" briefDescription="" id="_KEldgMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-07T10:18:05" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Section name="Have you found all the actors" briefDescription="" id="_ytiigAYQEdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Have you accounted for all roles in the systems environment?&amp;nbsp; See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html&quot; guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Guideline: Find and Outline Actors and Use Cases&lt;/a>&amp;nbsp;for some questions that may help&#xD;
identify actors.</Description>
          </Section>
          <Section name="Is each actor involved with at least one use case" briefDescription="" id="_AcjQMAYREdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>If you cannot identify a use case associated with a given actor perhaps the actor should be removed, or perhaps you are&#xD;
missing a use case.</Description>
          </Section>
          <Section name="Can you identify at least two people, or external systems, that would play the role of a particular actor" briefDescription="" id="_P3mo8AYREdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>If you cannot, check if the role that the actor represents is part of another actor.&amp;nbsp; If that is the case, you should&#xD;
merge the actors.</Description>
          </Section>
          <Section name="Will a particular actor use the system in several completely different ways" briefDescription="" id="_b640oAYREdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;p>&#xD;
    If true, you should probably have more than one actor.&#xD;
&lt;/p></Description>
          </Section>
          <Section name="Does the actor have several completely different purposes for using the system" briefDescription="" id="_iOHtQAYREdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>If true, there may be more than one actor.</Description>
          </Section>
          <Section name="Have you considered maintenance and administrative roles" briefDescription="" id="_ptfB0AYREdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>It is common to focus on the daily users of the system, and forget about administrative and maintenance roles such as&#xD;
setting up user accounts, managing access rights, performing backups, etc.&amp;nbsp; Ensure you have captured these actors.</Description>
          </Section>
          <Section name="Does each actor have a clear description of its role" briefDescription="" id="_2i_UoAYREdubLa3RRn5f4A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>Each actor should have a short description of the role and the main goal the actor has in using the system.</Description>
          </Section>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Role" name="tester" briefDescription="This role is responsible for the core activities of the test effort. Those activities  include identifying, defining, implementing, and conducting the necessary tests,  as well as logging the outcomes of the testing and analyzing the results." id="_0ZM4MclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Tester" variabilityType="na">
        <Presentation xsi:type="uma:RoleDescription" name="tester,_0ZM4MclgEdmt3adZL5Dmdw" briefDescription="" id="_NqYIcKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-26T10:51:28" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    This role is primarily responsible for the following&nbsp;tasks:
</p>
<ul>
    <li>
        Identify the tests&nbsp;that need to&nbsp;be performed
    </li>
    <li>
        Identify the most appropriate implementation approach for a given test
    </li>
    <li>
        Implement individual tests
    </li>
    <li>
        Set up and execute the tests
    </li>
    <li>
        Log outcomes and verify that the tests have been run
    </li>
    <li>
        Analyze and recover from execution errors
    </li>
    <li>
        Communicate test results to the team
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <AssignmentApproaches>&lt;p>&#xD;
    This role can be assigned in the following ways:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Assign one or more testing staff members to perform this role. This is a fairly standard approach and is&#xD;
        particularly suitable for small teams, as well as for teams of any size where the team is made up of an experienced&#xD;
        group of testers of relatively equal skill levels.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assign one or more testing staff members to perform only this role.&amp;nbsp;This works well in large teams. It is also&#xD;
        useful to separate responsibilities when some of the testing staff has more test automation experience than other&#xD;
        team members.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assign one or more team members that is already playing another role in the project to be responsible for the&#xD;
        testing of some part of the system’s capabilities.&amp;nbsp;The team member will have to have the appropriate test&#xD;
        skills&#xD;
    &lt;/li>&#xD;
&lt;/ul></AssignmentApproaches>
          <Skills>&lt;p>&#xD;
    A person&amp;nbsp;filling the&amp;nbsp;this role should have the following skills:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Knowledge of testing approaches and techniques&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagnostic and problem-solving skills&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Knowledge of the system or application being tested (desirable)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Knowledge of networking and system architecture (desirable)&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Where automated testing is required, consider requiring these additional qualifications:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Training in the appropriate use of test automation tools&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Experience using test automation tools&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Programming skills&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Debugging and diagnostic skills&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;strong>Note:&lt;/strong> Specific skill requirements vary depending on the type of testing that you are conducting. For&#xD;
    example, the skills needed to successfully use system load testing automation tools are different from those needed for&#xD;
    the automation of system functional testing.&#xD;
&lt;/p></Skills>
          <Synonyms></Synonyms>
        </Presentation>
        <ResponsibleFor>_0ZS-0MlgEdmt3adZL5Dmdw</ResponsibleFor>
        <ResponsibleFor>_0ZlSsMlgEdmt3adZL5Dmdw</ResponsibleFor>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="test_case" briefDescription="This artifact is the specification of a set of test inputs, execution conditions, and expected results, identified for the purpose of making an evaluation of some particular aspect of a scenario." id="_0ZS-0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Case" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="test_case,_0ZS-0MlgEdmt3adZL5Dmdw" briefDescription="" id="_NqYIdKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T01:57:14" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[<p>
    A test case specifies the conditions which need to be validated to enable an assessment of some particular aspects of
    the system under test.&nbsp; A test case is more formal than a test idea and usually takes the form of a
    specification.&nbsp;In less formal environments, test cases can be created by identifying a unique ID, name, associated
    test data, and expected results.&nbsp;For an example of this type of test case, see&nbsp;<a class="elementLinkWithType" href="./../../openup_basic/guidances/templates/test_case,_0dT8IMlgEdmt3adZL5Dmdw.html" guid="_0dT8IMlgEdmt3adZL5Dmdw">Template: Test Case</a>.
</p>
<p>
    Test cases may be derived from&nbsp;many&nbsp;sources but will usually include a subset of both the requirements (such
    as use cases, performance characteristics, reliability concerns) and other types of quality attributes.&nbsp; For more
    information on types of tests and their relationship to quality test attributes, see&nbsp;<a class="elementLinkWithType" href="./../../openup_basic/guidances/concepts/types_of_test,_0aJ6cMlgEdmt3adZL5Dmdw.html" guid="_0aJ6cMlgEdmt3adZL5Dmdw">Concept: Types of Test</a>.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving></ImpactOfNotHaving>
          <Purpose><![CDATA[<p>
    The purpose of this artifact is to:
</p>
<ul>
    <li>
        provide a way to capture test inputs, conditions, and expected results for a system
    </li>
    <li>
        systematically identify aspects of the software to test
    </li>
    <li>
        specify whether an expected result has been reached based on verification of a system requirement, set of
        requirements, or scenario
    </li>
</ul>]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions></RepresentationOptions>
        </Presentation>
        <Concept>_0aJ6cMlgEdmt3adZL5Dmdw</Concept>
        <Checklist>_0Zxf8MlgEdmt3adZL5Dmdw</Checklist>
        <Template>_0dT8IMlgEdmt3adZL5Dmdw</Template>
      </ContentElement>
      <ContentElement xsi:type="uma:Artifact" name="test_log" briefDescription="This artifact collects raw output captured during a unique execution of one or more tests for a single test cycle run." id="_0ZlSsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Log" variabilityType="na">
        <Presentation xsi:type="uma:ArtifactDescription" name="test_log,_0ZlSsMlgEdmt3adZL5Dmdw" briefDescription="" id="_NqePEKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-30T01:02:01" changeDescription="" version="1.0.0" externalId="">
          <MainDescription><![CDATA[This artifact&nbsp;provides a detailed, typically time-based record that serves both as verification that a set of tests
were executed, and provides information relating to the success of those tests.&nbsp; The focus is typically on the
provision of an accurate audit trail, enabling post-execution diagnosis of failures to be undertaken.&nbsp; This raw data
will subsequently be analyzed to help determine the results of some aspect of the test effort.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <ImpactOfNotHaving></ImpactOfNotHaving>
          <Purpose><![CDATA[<ul>
    <li>
        To provide verification that a set of tests was executed
    </li>
    <li>
        To provide information relating to the success of those tests
    </li>
</ul>]]></Purpose>
          <ReasonsForNotNeeding></ReasonsForNotNeeding>
          <BriefOutline></BriefOutline>
          <RepresentationOptions></RepresentationOptions>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Checklist" name="test_case" briefDescription="This checklist provides questions to verify that test cases are created in a consistent and complete manner." id="_0Zxf8MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Case" variabilityType="na">
        <Presentation name="test_case,_0Zxf8MlgEdmt3adZL5Dmdw" briefDescription="" id="_kwHAgMPbEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-07T10:45:15" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Section name="General" briefDescription="" id="_yXujsLcOEduFFo_97woSMw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Does the Test Case identify the requirement it evaluates?&amp;nbsp; This linking might be informal through a naming&#xD;
        convention or formalized through a requirements traceability matrix.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the Test Case reference the preconditions and postconditions that apply to it?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
          </Section>
          <Section name="Name" briefDescription="" id="_Hv2n0BBbEduXULqRagzBHA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Is the&amp;nbsp;Test Case name unique?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does&amp;nbsp;the name express a test condition or&amp;nbsp;an expected result?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is&amp;nbsp;it unambiguous to a stakeholder?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
          </Section>
          <Section name="Brief Description" briefDescription="" id="_3i-gkLcOEduFFo_97woSMw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        Is the logical test condition clearly identified in the description?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the description clearly&amp;nbsp;state the expected result?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the expected result stated as a concrete&amp;nbsp;outcome?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Can a casual reader distinguish this Test Case from a similar one?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
          </Section>
          <Section name="Test Data Needs" briefDescription="" id="_4uresLcOEduFFo_97woSMw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
            <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Does the Test Case note the kinds of test data required to implement a detailed Test Script?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are&amp;nbsp;the test data type, uniqueness, and quality sufficiently explained?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
          </Section>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Role" name="developer" briefDescription="This role is responsible for developing a part of the system, including designing it to fit into the architecture, possibly prototyping the user-interface, and then implementing, unit-testing, and integrating the components that are part of the solution." id="_0YDosMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Developer" variabilityType="na">
        <Presentation xsi:type="uma:RoleDescription" name="developer,_0YDosMlgEdmt3adZL5Dmdw" briefDescription="" id="_NqL7MqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-14T11:32:58" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <AssignmentApproaches>&lt;p>&#xD;
    On small, agile teams this role is often shared among several team members that also perform other roles.&amp;nbsp; See &lt;a&#xD;
    class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/guidelines/self_organize_work_assignments,_rmBEkJjsEduad8I_c-ogIA.html&quot;&#xD;
    guid=&quot;_rmBEkJjsEduad8I_c-ogIA&quot;>Guideline: Self Organize Work Assignments&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/guidelines/staffing_project,_Jq64EJjsEduad8I_c-ogIA.html&quot;&#xD;
    guid=&quot;_Jq64EJjsEduad8I_c-ogIA&quot;>Guideline: Staffing a Project&lt;/a>&amp;nbsp;for more information on this approach.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Even in the smallest team, multiple individuals should be working together to create the technical solution.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A person performing this role can have specialized skills in a particular technical area, but should also have a broad&#xD;
    understanding of all the technologies involved to be able to work with other technical team members.&#xD;
&lt;/p></AssignmentApproaches>
          <Skills>&lt;p>&#xD;
    This role needs the following knowledge, skills, and abilities:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Define and create technical solutions in the project's technology&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Understand and&amp;nbsp;conform to the&amp;nbsp;architecture&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify and build developer tests that cover required behavior of the technical components&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Communicate the design in a way that other team members understand&#xD;
    &lt;/li>&#xD;
&lt;/ul></Skills>
          <Synonyms></Synonyms>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Role" name="architect" briefDescription="This role is responsible for defining the software architecture, which includes making the key technical decisions that constrain the overall design and implementation of the project." id="_0X9iEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Architect" variabilityType="na">
        <Presentation xsi:type="uma:RoleDescription" name="architect,_0X9iEMlgEdmt3adZL5Dmdw" briefDescription="" id="_Y6tLEKbXEdm9d-ircVOUCA" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-02T07:46:47" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    This role leads or coordinates the technical design of the system and has overall responsibility for facilitating the
    major technical decisions expressed as software architecture. This typically includes identifying and documenting the
    architecturally significant aspects of the system as views that describe requirements, design, implementation, and
    deployment.
</p>
<p>
    This role is also responsible for providing the rationale for these decisions, balancing the concerns of the various
    stakeholders, reducing technical risks, and ensuring that decisions are effectively communicated, validated, and
    followed.
</p>
<p>
    This role is closely involved in organizing the team around the architecture by working closely with the&nbsp;<a
    class="elementLink" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html"
    guid="_0a0o0MlgEdmt3adZL5Dmdw">Project Manager</a>&nbsp;in staffing and planning the project.
</p>]]></MainDescription>
          <KeyConsiderations><![CDATA[This role&nbsp;places emphasis on the core principle <a class="elementLink"
href="./../../openup_basic/guidances/concepts/core_principle_focus,_9gocwMvoEdqukPpotm3DYg.html"
guid="_9gocwMvoEdqukPpotm3DYg">Focus on articulating the architecture</a>.]]></KeyConsiderations>
          <AssignmentApproaches>&lt;p>&#xD;
    This person in this role should be engaged in the project from start to finish.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For smaller projects, a single person may act as both Architect and &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Project&#xD;
    Manager&lt;/a>. However, it is better to have these roles performed by different people to ensure that the pressures one&#xD;
    role doesn't cause neglect of the other role.&amp;nbsp;The Architect and Project Manager&amp;nbsp;must work together closely.&#xD;
&lt;/p></AssignmentApproaches>
          <Skills>&lt;p>&#xD;
    Architects must be well-rounded people with maturity, vision, and a depth of experience that allows for grasping issues&#xD;
    quickly and making educated, critical judgments in the absence of complete information. Specifically, the person must&#xD;
    possess this combination of qualifications:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;b>Experience&lt;/b> &lt;strong>in both problem and software engineering domains&lt;/strong>, with evidence of a thorough&#xD;
        understanding of the requirements to solve the problem and active participation in software development. If there&#xD;
        is a team, this experience can be represented by different team members, but at least one person must be able to&#xD;
        provide the overall vision for the project.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Leadership ability&lt;/b> to motivate and maintain momentum for the technical effort across the various teams and&#xD;
        to make critical decisions under pressure, plus make those decisions stick. To be effective, this role must have&#xD;
        the authority to make technical decisions.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Excellent communication&lt;/b> &lt;strong>skills&lt;/strong> to earn trust, persuade, motivate, and mentor. This role&#xD;
        cannot lead by decree, but only by the consent of the rest of the project team. To be effective, this&amp;nbsp;person&#xD;
        must earn the respect of the team members, the &lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot;&#xD;
        guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Project Manager&lt;/a>, the customer, and the user community, as well as the management&#xD;
        team.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;b>Goal-oriented and proactive&lt;/b> &lt;strong>orientation&lt;/strong> with a relentless focus on results.&amp;nbsp;This&#xD;
        person is the technical driving force behind the project, not a visionary or dreamer. The career of a successful&#xD;
        architect is a long series of sub-optimal decisions made in uncertainty and under pressure. Only those who can&#xD;
        focus on doing what needs to be done will be successful.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    From an expertise standpoint, this role also needs to show both design and implementation abilities. However, from the&#xD;
    design perspective, the effective architect typically exhibits these traits:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Tends to be a generalist, rather than a specialist, who knows many technologies at a high level rather than a few&#xD;
        technologies at the detail level&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Makes the broader technical decisions, thereby demonstrating broad knowledge and experience, as well as&#xD;
        communication and leadership skills&#xD;
    &lt;/li>&#xD;
&lt;/ul></Skills>
          <Synonyms></Synonyms>
        </Presentation>
        <Concept>_9gocwMvoEdqukPpotm3DYg</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Role" name="project_manager" briefDescription="Leads the planning of the project, coordinates interactions with the stakeholders, and keeps the project team focused on meeting the project objectives." id="_0a0o0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Project Manager" variabilityType="na">
        <Presentation xsi:type="uma:RoleDescription" name="project_manager,_0a0o0MlgEdmt3adZL5Dmdw" briefDescription="" id="_Fdq-8KX4EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-02T02:03:02" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    This role:
</p>
<ul>
    <li>
        Applies management knowledge, skills, tools and techniques to a broad range of tasks in order to deliver&nbsp;the
        desired&nbsp;result for a particular project in a timely fashion.
    </li>
    <li>
        Is accountable for the outcome of the project and the acceptance of the product by the customer.
    </li>
    <li>
        Responsible for the evaluation of project's risks, and controling these risks through mitigation strategies.&nbsp;
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <AssignmentApproaches>&lt;p>&#xD;
    This role is often played by a single person. This role is difficult to share with others, but might not consume all of&#xD;
    a person’s availability.&#xD;
&lt;/p>&#xD;
&lt;br />&#xD;
&lt;br /></AssignmentApproaches>
          <Skills>&lt;p>&#xD;
    A person performing this role needs the following skills:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Good in presentation, facilitation, communication, and negotiation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Leadership and team building capabilities.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Thorough experience in the software development lifecycle to teach, guide and support other team members.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Proficient in conflict resolution and problem solving techniques.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Skills>
          <Synonyms></Synonyms>
        </Presentation>
        <ResponsibleFor>_0aQBEslgEdmt3adZL5Dmdw</ResponsibleFor>
        <ResponsibleFor>_rGNWsCbSEdqh1LYUOGRh2A</ResponsibleFor>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="iteration" briefDescription="An iteration is a set period of time within a project in which you produce a stable, executable version of the product, together with any other supporting documentation, install scripts, or similar, necessary to use this release. Also referred to as a cycle or a timebox." id="_lam4ADkBEduxovfWMDsntw" orderingGuide="" suppressed="false" presentationName="Iteration" variabilityType="na">
        <Presentation name="new_concept,_lam4ADkBEduxovfWMDsntw" briefDescription="" id="-vi8wxwxVZLY0SMPFxZjD7A" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T10:46:17" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<H3>What is an Iteration </H3>
<P>An iteration is a set period of time within a project in which you produce a stable, executable version of the product, together with any other supporting documentation, install scripts, or similar, necessary to use this release. The executable is demonstrable, allowing the team to demonstrate true progress to stakeholders, get feedback on how they are doing so that they can improve their understanding of what needs to be done, and how to do it, Each iteration builds upon the results of previous iteration, and will produce a product increment one step closer to the final product. Iterations are timeboxed, meaning the schedule for an iteration should be regarded as fixed, and the scope of the iteration's content actively managed to meet that schedule. </P>
<P>At each iteration, artifacts are updated. It is said that this is a bit like "growing" software. Instead of developing artifacts one after another, in a pipeline fashion, they are evolving across the cycle, although at different rates. </P>
<P>Iterative development is very disciplined: the iteration length is fixed; the objectives of iterations are carefully planned; the evaluation criteria are established when each iteration is planned; and the tasks and responsibilities of participants are well defined. Additionally, objective measures of progress are captured. Some reworking takes place from one iteration to the next, but this too is done in a structured fashion. </P>
<P>Each iteration should address the most critical risks, and implement the highest-priority Work Items. This ensures that each iteration adds maximum stakeholder value, while reducing uncertainty. Iterative development is typically combined with frequent or continuous integration: as unit-tested components become available, they are integrated, then a build is produced and subjected to integration testing. In this way, the capability of the integrated software grows as the iteration proceeds, towards the goals set when the iteration was planned. Regular builds, such as daily or more frequent builds, let you break down the integration and test issues and spread them across the development cycle. These issues have often been the downfall of large projects because all problems were discovered at once during the single massive integration step, which occurred very late in the cycle, and where a single problem halts the whole team. </P>
<H3>What Problem Do Iterations Address? </H3>
<P>Today’s software applications are too complex to allow you to sequentially define the requirements, come up with an architecture and design, do an implementation, carry out testing, and get it all right. Whether you use waterfall or iterative development approaches, your initial requirements, architecture, design, and code will be suboptimal. With waterfall development, you typically do not get meaningful feedback on what improvements can be made until it is so late in the project that it is too costly to make them. By contrast, dividing the project into a series of time-boxed iterations allows you to deliver capabilities that can be assessed by stakeholders at the end of each iteration. This approach provides rapid and timely feedback loops enabling issues to be addressed and improvements made at a lower cost while budget and time still allow, and before the project has gone so far ahead that major rework is required. </P>
<H3>Iteration Length </H3>
<P>Iterations are typically 4 weeks long, although some teams will work with iterations as short as a week or as long as six weeks. For factors driving iteration length, see Table X. </P>
<P><STRONG><EM>Table X. Factors Impacting Iteration Length.</EM></STRONG><BR>&nbsp;<BR></P>
<TABLE style="WIDTH: 547px; HEIGHT: 356px" cellSpacing=2 cellPadding=2 width=547 border=1>
<TBODY>
<TR>
<TH scope=col>Factors leading to reduced iteration length&nbsp; </TH>
<TH scope=col>Factors leading to increased iteration length </TH></TR>
<TR>
<TD>Small teams&nbsp; </TD>
<TD>Large teams </TD></TR>
<TR>
<TD>Collocated teams&nbsp; </TD>
<TD>Distributed teams </TD></TR>
<TR>
<TD>Strong configuration management system&nbsp; </TD>
<TD>Poor configuration management system </TD></TR>
<TR>
<TD>Dedicated, full-time resources </TD>
<TD>Matrixed or part-time resources </TD></TR>
<TR>
<TD>Automated testing </TD>
<TD>Lack of automated testing </TD></TR>
<TR>
<TD>Integrated tool environment&nbsp; </TD>
<TD>Absence of good automation and tool integration </TD></TR>
<TR>
<TD>Team experienced with iterative development </TD>
<TD>Team inexperienced with iterative development </TD></TR>
<TR>
<TD>Fast decision making </TD>
<TD>Policies and bureaucracy preventing fast decision making </TD></TR>
<TR>
<TD>Unclear requirements </TD>
<TD>Well-understood requirements </TD></TR>
<TR>
<TD>Unclear or brittle architecture </TD>
<TD>Well-defined and stable architecture </TD></TR>
<TR>
<TD>New and poorly understood technology </TD>
<TD>Well-understood technology </TD></TR></TBODY></TABLE><BR><BR>
<H3>Why Iterate? </H3>
<P>The iterative approach has proven itself superior to the waterfall approach for a number of reasons: </P>
<UL>
<LI>You are more likely to build an application that addresses user needs. Early specification of requirements often leads to unused features. The Standish Group has researched thousands of application development projects and has found that more than 45 percent of features are never used, while another 19 percent are used rarely&nbsp; (see Figure 2.3). In other words, typically more than half of the development effort is wasted on developing nonessential capabilities. To avoid this problem, you need to involve the customer in the development project and use an iterative approach that allows you to implement and validate the capabilities deemed most essential in each iteration. This approach allows not only early validation of key capabilities but also addition of new capabilities late in the project. 
<LI>Integration is not one “big bang” at the end of a project. Leaving integration to the end results in time- and budget-consuming rework. To avoid this, an iterative approach breaks a project down into smaller iterations, each evolving executable code that is continuously integrated to enable rapid feedback and minimize later revision. 
<LI>Risks are usually discovered or addressed during early iterations. With the iterative approach, risks are more likely to be identified and addressed in early iterations. As an example, if there is a risk that a stakeholder will not be happy with the functionality you are developing, iterative development will encourage you to&nbsp; implement the most essential capabilities partially and demonstrate them to key stakeholders to make sure that you are on the right track. 
<LI>Your ability to work effectively is fine-tuned. During early iterations, team members are walking through all lifecycle activities, from requirements capture and test definition to development, implementation, and testing. Consequently, they can make sure they have the tools, skills, organizational structure, and so on to work effectively. 
<LI>Management has a way of making tactical changes to the product. Management can make changes to the product along the way—to compete with other new products, for example. Iterative development allows you to evolve partial implementations of the end product quickly and use these for quick release of a reduced-scope product to counter a competitor's move. 
<LI>Reuse is facilitated. It is easier to identify common parts as they are being partially designed or implemented in iterations than to recognize them at the beginning. Discussions and reviews of the design in early iterations allow team members to spot potential opportunities for reuse and then develop a mature common code for these opportunities in subsequent iterations. 
<LI>Defects can be found and corrected over several iterations. This capability results in a robust architecture and a high-quality application. Flaws are detected in early iterations, rather than during a massive testing phase at the end. Performance bottlenecks are discovered while they can still be addressed instead of creating panic on the eve of delivery. 
<LI>Project personnel are better used. Many organizations match their use of a waterfall approach with a pipeline organization: the analysts send the completed requirements to designers, who send a completed design to programmers, who send components to integrators, who send a system to testers. These many handoffs are sources of errors and misunderstandings and make people feel less responsible for the final product. An iterative process encourages widening the scope of expertise of the team members, allowing them to play many roles and thus enabling a project manager to make better use of the available staff and simultaneously remove problematic handoffs. 
<LI>Team members learn along the way. The project members have several opportunities within a development cycle to learn from their mistakes and improve their skills from one iteration to another. More training opportunities can be discovered as a result of assessing the earlier iterations. 
<LI>The development process itself is improved and refined along the way. The end of iteration assessment not only looks at the project status from a product or scheduling perspective but also analyzes what can be improved in the next iteration in both the organization and the process.&nbsp; One technique for doing so is to hold a retrospective. </LI></UL><BR><SPAN class=E1><SPAN style="FONT-SIZE: 12pt; FONT-FAMILY: 'Times New Roman'; mso-fareast-font-family: 'MS Mincho'; mso-ansi-language: EN-US; mso-fareast-language: JA; mso-bidi-language: AR-SA"><?xml:namespace prefix = v ns = "urn:schemas-microsoft-com:vml" /><v:shapetype id=_x0000_t75 stroked="f" filled="f" path="m@4@5l@4@11@9@11@9@5xe" o:preferrelative="t" o:spt="75" coordsize="21600,21600"><STRONG><IMG height=307 alt="45 percent of featues implemented are never ever used" src="openup_basic/guidances/concepts/resources/iteration_1.GIF" width=489></STRONG></v:shapetype></SPAN></SPAN><BR>&nbsp; 
<P><STRONG><EM>Figure 2.3. Most Features Implemented Are Never or Rarely Used.<BR></EM></STRONG><EM>An amazing 45 percent of features implemented are never used, while another 19 percent are used only rarely. If features never used were not implemented in the first place, development time would be cut in about half. Further, since productivity is typically measured in the form of lines of code or functionality delivered, this improvement would not register as a productivity increase using standard productivity measures.<BR></EM>&nbsp; </P>
<H3>Iteration and Phases </H3>
<P>The purpose of iterations is to produce an executable which can be assessed so you can get feedback and make course corrections. This executable brings you one step closer to the final product. Phases provide a focus for a team on meeting a certain management objective. OpenUP has four phases, each ending with answering a specific question: </P>
<UL>
<LI><STRONG>Inception</STRONG>—Do we agree on the problem we are trying to solve? 
<LI><STRONG>Elaboration</STRONG>—Do we agree on the overall solution, and do we understand risks, costs and schedule parameters reasonably well? 
<LI><STRONG>Construction</STRONG>—Do we agree that we have a system that addresses key stakeholder needs? 
<LI><STRONG>Transition</STRONG>—Do we agree that we can release the system and end the project? </LI></UL>
<P>Within each phase, you may have one or several iterations, where the iterations aim at producing the results required to answer these questions. As an example, to answer the question for Elaboration, we typically need to implement and test some key aspects of the system so that we understand what architecture we need, what Commercial Off-The-Shelf (COTS) components we may need, what key risks we face and how to address them, the effectiveness of the team, and so on. These needs will steer how we prioritize what is to be done in an Elaboration iteration. </P>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="risk" briefDescription="A risk is whatever may stand in the way to success, and is currently unknown or uncertain. Usually, a risk is qualified by the probability of occurrence and the impact in the project, if it occurs." id="_0bsLgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Risk" variabilityType="na">
        <Presentation name="risk,_0bsLgMlgEdmt3adZL5Dmdw" briefDescription="" id="_u6enMMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T08:18:15" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<h3>
    What is a Risk?
</h3>
<p>
    Many decisions are driven by risk mitigation&nbsp;in well managed projects. You are trying to mitigate or tackle the
    most critical risks as early as possible in the project. In order to achieve this you need to get a good grip on the
    risks the project is faced with, and have clear strategies on how to mitigate or deal with them.
</p>
<p>
    In everyday life a risk is an exposure to loss or injury; a factor, thing, element, or course involving uncertain
    danger.&nbsp;Similarly, in&nbsp;software development a risk is something that can compromise the success of a project.
    Examples of potential sources of risk in software development are listed below (see [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">SEI99</a>] for more details):
</p>
<ul>
    <li>
        Requirements
    </li>
    <li>
        Design
    </li>
    <li>
        Development process
    </li>
    <li>
        Work environment
    </li>
    <li>
        Resources
    </li>
    <li>
        Contract
    </li>
    <li>
        Project interdependencies
    </li>
    <li>
        etc.
    </li>
</ul>
<p>
    Risks can be seen as opportunities. If there are benefits associated to an opportunity, then certain degrees of risk
    must be taken&nbsp;for a&nbsp;project to be&nbsp;successful [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">SEI99</a>].
</p>
<h3>
    Risk Attributes
</h3>
<p>
    You can record as much information as you like or need about your risks, you will find below a list of common risk
    attributes.
</p>
<ul>
    <li>
        <strong>Risk Description:</strong> A description of the risk detailing the impact for the project if this risk
        becomes a problem (i.e. it becomes a reality).
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Type:</strong> Used to classify the risk as:
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            <li>
                <strong>Direct risk</strong>: a risk that the project has a large degree of control over.
            </li>
            <li>
                <strong>Indirect risk</strong>: a risk with little or no project control.
            </li>
        </ul>
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Probability</strong> (of occurence): how many chances do we have that this risk will become
        a&nbsp;problem or an issue, This is usually represented as a scale of values (for example: High, Medium, Low).
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Impact</strong> (level): if this risk become an problem what will be the impact&nbsp;on
        the&nbsp;project. This is not the actual description of the impact but the level of impact. As the risk
        probability, it is usually represented as a scale.&nbsp;This&nbsp;attribute is&nbsp;also sometimes called the
        <strong>severity</strong> of the risk.
    </li>
</ul>
<ul>
    <li>
        <strong>Risk Magnitude</strong>: To be able to rank and to define which ones need to be mitigate first,&nbsp;the
        <strong>Risk Probability&nbsp;</strong> and <strong>Risk Impact</strong> attributes are often combined in a
        single&nbsp;<strong>Risk</strong> <strong>Magnitude</strong> indicator represented as a scale similar to the
        combined attributes.
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="agile" briefDescription="" id="_3PJ38EvqEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="agile" variabilityType="na">
        <Presentation name=",_3PJ38EvqEdunZcj9T5hrMQ" briefDescription="" id="-qZE4XgeMK93LmJMKuQWGFg" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A set of values and principles for software development that use lean production techniques to deliver value to
stakeholders quickly and frequently.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="construction" briefDescription="" id="_0sD60EvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Construction" variabilityType="na">
        <Presentation name=",_0sD60EvDEdunZcj9T5hrMQ" briefDescription="" id="-5wJmUR0WqX7lCIxsyqFsdA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[The third phase of the OpenUP/ Basic project lifecycle, in which the software is brought from an executable architectural
baseline to the point at which it is ready to be transitioned to the user community.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="elaboration" briefDescription="" id="_8DkT4EvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Elaboration" variabilityType="na">
        <Presentation name=",_8DkT4EvDEdunZcj9T5hrMQ" briefDescription="" id="-0g2jTHQla8lbP6xGB3iGlg" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Second of four phases in the in the OpenUP/ Basic project lifecycle, when architecturally-significant risks are addressed]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="inception" briefDescription="" id="_525A8EvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Inception" variabilityType="na">
        <Presentation name=",_525A8EvDEdunZcj9T5hrMQ" briefDescription="" id="-dhgOQQ4GsV0-dNJmTmF9GA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T03:05:23" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[First of the four phases in the OpenUP/ Basic project lifecycle, it is about understanding the project scope and objectives
and getting enough information to confirm that the project should proceed&nbsp; or not.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="ioc_milestone" briefDescription="" id="_O7JBYEvFEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Initial Operational Capability Milestone." variabilityType="na">
        <Presentation name=",_O7JBYEvFEdunZcj9T5hrMQ" briefDescription="" id="-gEgZg2UkFLjGeXkJLpAP6A" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T03:41:48" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[At the end of Construction phase is the third important project milestone.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="iteration" briefDescription="" id="_ZBUnMEvFEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="iteration" variabilityType="na">
        <Presentation name=",_ZBUnMEvFEdunZcj9T5hrMQ" briefDescription="" id="-_G0VvVOdMoajk615LwFtxg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T03:23:38" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Short and time-boxed division of a project. Iterations allow to demonstrate incremental value and obtain early and
continuous feedback]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="lca_milestone" briefDescription="" id="_NL4DMEvFEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Lifecycle Architecture Milestone" variabilityType="na">
        <Presentation name=",_NL4DMEvFEdunZcj9T5hrMQ" briefDescription="" id="-MllWL01NL93RTB7VsY69fw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[At the end of the Elaboration phase is the second important project milestone]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="lco_milestone" briefDescription="" id="_LGRBkEvFEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Lifecycle Objectives Milestone" variabilityType="na">
        <Presentation name=",_LGRBkEvFEdunZcj9T5hrMQ" briefDescription="" id="-Rl8kaRW9Bxqdvq32kVCi7w" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[At the end of the Inception phase is the first major project milestone]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="milestone" briefDescription="" id="_ByXNcEvqEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="milestone" variabilityType="na">
        <Presentation name=",_ByXNcEvqEdunZcj9T5hrMQ" briefDescription="" id="-9fXEOvMc4t7y6s5GscBD1Q" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The point at which an iteration or phase formally ends, thus providing a check-point for whether the project is ready
    to move to the next iteration or phase.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="pr_milestone" briefDescription="" id="_QuywUEvFEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Product Release Milestone" variabilityType="na">
        <Presentation name=",_QuywUEvFEdunZcj9T5hrMQ" briefDescription="" id="-JegYQHIteCRN0iV2EKMjSA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[At the end of the Transition phase is the last major project milestone]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="transition" briefDescription="" id="_-5ms4EvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Transition" variabilityType="na">
        <Presentation name=",_-5ms4EvDEdunZcj9T5hrMQ" briefDescription="" id="-yoFF90pq-_UV3fm-5oDenw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[The fourth and last <span class="docEmphasis">phase</span> of the OpenUP/ Basic project lifecycle, which results in a final
product <span class="docEmphasis">release</span>.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:SupportingMaterial" name="copyright_oup" briefDescription="" id="_cTs20KzREduOqvpk_MDLfQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_uuunoPsDEdmyhNQr5STrZQ" variabilityType="contributes">
        <Presentation name="new_supporting_material,_cTs20KzREduOqvpk_MDLfQ" briefDescription="" id="-PZ0CqCcJHB-nbxs8fbP7bg" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-26T01:09:53" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    View copyright information here:&nbsp;<a class="elementLink"
    href="./../../../openup_basic/guidances/supportingmaterials/openup_copyright,_UaGfECcTEduSX6N2jUafGA.html"
    guid="_UaGfECcTEduSX6N2jUafGA">OpenUP Copyright</a>.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="openup_and_openup_basic" briefDescription="OpenUP is a family of open source process plug-ins. OpenUP/Basic is the core process in OpenUP and is geared towards a small, co-located team." id="_v2l6gK_5EduMeuOwJ2MpeQ" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/mic.gif" presentationName="OpenUP and OpenUP/Basic" shapeicon="openup_basic/guidances/guidelines/resources/icon_introL.gif" variabilityType="na">
        <Presentation name=",_v2l6gK_5EduMeuOwJ2MpeQ" briefDescription="" id="-KCSbXYv5TALlL00zMMfgVw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    What's the difference between OpenUP and OpenUP/Basic?
</p>
<p>
    How does OpenUP relate to EPF?
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="minimal_complete_extensible" briefDescription="OpenUP/Basic is minimal, complete, and extensible. It's the minimum amount of process for a small team, it can be used as-is, and it can be extended and customized for specific purposes." id="_Nm5vUK__EduMeuOwJ2MpeQ" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/mic.gif" presentationName="Minimal, Complete, and Extensible" shapeicon="openup_basic/guidances/guidelines/resources/icon_introL.gif" variabilityType="na"/>
      <ContentElement xsi:type="uma:Guideline" name="agile_and_unified" briefDescription="OpenUP/Basic is a Unified process that incorporates proven agile techniques. The result is a robust, effective, and lightweight process structure." id="_qg1IAK__EduMeuOwJ2MpeQ" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/mic.gif" presentationName="Agile and Unified" shapeicon="openup_basic/guidances/guidelines/resources/icon_introL.gif" variabilityType="na">
        <Presentation name=",_qg1IAK__EduMeuOwJ2MpeQ" briefDescription="" id="-l-ZsqrXu2nmVE1giLpI6iw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Describe differences between unified processes and Agile methods<br />
Describe how OpenUP is a Unified Process that incorporates some Agile<br />
methods that have proven effective<br />
Describe what Agile elements are incorporated into OpenUP]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Concept" name="actor" briefDescription="An Actor is a role that a person or external system plays when interacting with a system. Instances of an Actor can be an individual or an external system." id="_zGqO0MDpEduTGJ8i4u8TMw" orderingGuide="" suppressed="false" presentationName="Actor" variabilityType="na">
        <Presentation name=",_zGqO0MDpEduTGJ8i4u8TMw" briefDescription="" id="-aN0zy068ovKHgmkkoYqoYQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-20T02:56:57" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    To fully understand the system's purpose, you must know who the system is for, that is: Who will use the system? The
    answer to this question is: the Actors.
</p>
<p>
    An Actor is a role that a person or external system plays&nbsp;when interacting with the system.&nbsp; Instances of an
    Actor can be an individual or an external system, however each Actor&nbsp;provides a
    unique&nbsp;and&nbsp;important&nbsp;perspective on the system that is shared by every instance of the Actor.
</p>
<p>
    This difference between an actor and an instance of an actor is illustrated below.&nbsp;&nbsp;Figure 1 shows a case in
    which Ivar and Mark are operators of a recycling machine. When they are using the machine in this capacity, each is
    represented by an instance of the actor called Operator that expects certain functionality of the system (Print Daily
    Reports in this example).
</p>
<p>
    <img height="322" alt="" src="openup_basic/guidances/concepts/resources/md_acto2.gif" width="396" />&nbsp;
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        <strong>Figure 1:&nbsp;Example Actor with multiple instances</strong>&nbsp;
    </p>
</blockquote>
<p>
    Conversely, the same user can act as several actors (that is, the same person can take on different roles). In Figure
    2, Charlie uses the Depot-Handling System primarily as Depot Manager, but sometimes he also uses the Depot-Handling
    System as an ordinary Depot Staff member. Each of these actors expects different functionality of the system.
</p>
<p>
    <img height="139" alt="" src="openup_basic/guidances/concepts/resources/md_acto3.gif" width="367" />
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        <strong>Figure 2: Example of user playing different roles</strong><br />
    </p>
</blockquote>
<p>
    Actors help you to identify external interfaces and to determine the scope the system (what is in the system, vs. what
    is outside the system boundary).&nbsp; Each&nbsp;Actor has associated use cases which describe what that
    particular&nbsp;actor expects of the system.&nbsp; It will be very difficult, if not impossible,&nbsp;to assess the
    completeness of the set of Use Cases without the context provided by the associated Actors. Furthermore, missing an
    actor may result in&nbsp;missing important stakeholder perspectives, resulting&nbsp;in a solution that does not meet
    all&nbsp;stakeholder needs.
</p>
<p>
    Hence, identifying the Actors for the system&nbsp;should be done early in the lifecycle.&nbsp;&nbsp;Actors are
    captured, including their names, brief descriptions, and relationships to use cases,&nbsp;in the <a
    class="elementLinkWithType" href="./../../../openup_basic/workproducts/uc_model,_W2SgEDR5EdutE_HNDTJk5Q.html"
    guid="_W2SgEDR5EdutE_HNDTJk5Q">Artifact: Use-Case Model</a>.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="openup_iterations" briefDescription="The set of iterations in a phase address specific milestones that objectively track a project's progress. Each phase has its own milestone that reflects the emphasis of the phase." id="_U3VjIMEuEduwZvIr61GnNg" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/mic.gif" presentationName="The Benefit of OpenUP/Basic Iterations" shapeicon="openup_basic/guidances/guidelines/resources/icon_introL.gif" variabilityType="na">
        <Presentation name=",_U3VjIMEuEduwZvIr61GnNg" briefDescription="" id="-Mobjz86dw07NW5-IhtEoNA" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-20T11:09:51" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Describe the&nbsp;milestone of each phase (link to existing content). Explain that iterations are not homogeneous, but they
all deliver stakeholder value. explain that that the focus on reducing risk and understanding the architecture in I &amp; E
make C &amp; T more predictable.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_48EKsBOMEduCNqgZdt_OaA</Concept>
        <Concept>_2plxwBOMEduCNqgZdt_OaA</Concept>
        <Concept>_0hmKgBOMEduCNqgZdt_OaA</Concept>
        <Concept>__ca5UBOMEduCNqgZdt_OaA</Concept>
        <Concept>_GXiogMvoEdqukPpotm3DYg</Concept>
        <Concept>_lam4ADkBEduxovfWMDsntw</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="openup_architecture" briefDescription="The early iterations of OpenUP/Basic focus on addressing the requirements that will produce an executable architecture. Buiding and validating the architecture first significantly reduces the technical risk in a project." id="_REqtUMEvEduwZvIr61GnNg" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/mic.gif" presentationName="The Importance of Architecture in OpenUP/Basic" shapeicon="openup_basic/guidances/guidelines/resources/icon_introL.gif" variabilityType="na">
        <Presentation name=",_REqtUMEvEduwZvIr61GnNg" briefDescription="" id="-clUV9n59dDwg0e1VCcsB8Q" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-20T11:13:25" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    Describe how Elaboration deals with architecture (link to existing content).
</p>
<p>
    The architecture artifacts are the work products that provide the most benefit in development in terms of understanding
    and extending the system.
</p>
<p>
    Explain how architecture reduces technical risk and the importance of doing so.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_9gocwMvoEdqukPpotm3DYg</Concept>
        <Concept>_2plxwBOMEduCNqgZdt_OaA</Concept>
        <Concept>_0bsLgMlgEdmt3adZL5Dmdw</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="openup_risk" briefDescription="Risk is a reflection of uncertainty in a project. Reducing uncertainty increases the predictability and possible of success." id="_G08UgMEwEduwZvIr61GnNg" orderingGuide="" suppressed="false" nodeicon="openup_basic/guidances/guidelines/resources/mic.gif" presentationName="OpenUP/Basic constantly identifies and removes risk from a project" shapeicon="openup_basic/guidances/guidelines/resources/icon_introL.gif" variabilityType="na">
        <Presentation name=",_G08UgMEwEduwZvIr61GnNg" briefDescription="" id="-_BjYXvrfe1HHL5Y_QBfh4Q" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-20T11:22:16" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    Define risk (reference existing content).
</p>
<p>
    Explain how addressing risk in early iterations reduces the uncertainty and unpredictabiliy in future iterations.
    Describe the effect that identifying, tracking, and mitigating risk has on a project (better decisions, high comfort
    level, more visibility into problems).
</p>
<p>
    Reference definitions for risk and risk mitigation.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Concept>_0bsLgMlgEdmt3adZL5Dmdw</Concept>
      </ContentElement>
      <ContentElement xsi:type="uma:SupportingMaterial" name="resources_for_modifying_methods" briefDescription="" id="_omneEMX4EduywMSzPTUUwA" orderingGuide="" suppressed="false" presentationName="Resources for Modifying Methods" variabilityType="na"/>
      <ContentElement xsi:type="uma:SupportingMaterial" name="resources_for_contributing_to_openup" briefDescription="" id="_t9yXEMX4EduywMSzPTUUwA" orderingGuide="" suppressed="false" presentationName="Resources for Contributing to OpenUP" variabilityType="na"/>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ContentPackage" name="templates" briefDescription="" id="_0cQzQMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
      <ContentElement xsi:type="uma:Template" name="vision" briefDescription="This is the informal template suggested for representing the Vision document." id="_0cW54MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Vision" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="vision,_0cW54MlgEdmt3adZL5Dmdw" briefDescription="" id="_LxX6AMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-09T08:32:25" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/vision.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="uc_specification" briefDescription="This is the informal template suggested for representing a use case specification." id="_0cpNwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Use-Case Specification" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="uc_specification,_0cpNwMlgEdmt3adZL5Dmdw" briefDescription="" id="_OaB-UMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-09T08:32:09" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/uc_specification.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="project_plan" briefDescription="This is the informal template for representing the project plan." id="_0c7hoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Project Plan" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="project_plan,_0c7hoMlgEdmt3adZL5Dmdw" briefDescription="" id="_XjOXcMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-09T02:03:04" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/project_plan.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="iteration_plan" briefDescription="This is the informal template suggested for an iteration plan." id="_0dBoQMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Iteration Plan" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="iteration_plan,_0dBoQMlgEdmt3adZL5Dmdw" briefDescription="" id="_Z_bUIMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-09T01:49:33" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/iteration_plan.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="software_arch_document" briefDescription="This is the informal template suggested for representing architecture." id="_0dN1gMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Software Architecture Document" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="software_arch_document,_0dN1gMlgEdmt3adZL5Dmdw" briefDescription="" id="_fJPGkMM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-09T07:50:14" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/software_arch_document.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="test_case" briefDescription="This is the informal template suggested for representing test cases." id="_0dT8IMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Case" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="test_case,_0dT8IMlgEdmt3adZL5Dmdw" briefDescription="" id="_j2pQ4MM2EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-09T07:58:06" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/test_case.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="supporting_requirements_spec" briefDescription="This is the template suggested for specifying requirements and constraints in accordance with the FURPS+ classification." id="_ItYXcNa9Edqrw4BYKyYKiA" orderingGuide="" suppressed="false" presentationName="Supporting Requirements Specification" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="new_template,_ItYXcNa9Edqrw4BYKyYKiA" briefDescription="" id="-FsyxZy4tyX8k5CxT5Jww_w" orderingGuide="" suppressed="false" authors="Ana Paula Valente Pereira (apereira@whatever.pt) and Chris Sibbald" changeDate="2006-08-17T06:24:20" changeDescription="" version="0.4">
          <MainDescription><![CDATA[This template provides a starting point for capturing&nbsp;supporting requirement in a consistent manner and to provide a
useful checklist when determining the types of requirements that may apply.&nbsp; It is not expected that one would
complete&nbsp;every section of this template in all circumstances.&nbsp; Tailor as you see fit for your particular
circumstances.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/supporting_req_spec.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="architecture" briefDescription="Templates for representing the architecture work product." id="__JXkoCk8EduLGM8dfVsrKg" orderingGuide="" suppressed="false" presentationName="Architecture" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name=",__JXkoCk8EduLGM8dfVsrKg" briefDescription="" id="-1Lm8-0FY-QIC56u5t2SC9w" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T01:49:32" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    Here are some templates for representing the architecture. Architecture can be represented in a variety of ways,
    according to the needs of the project team. See <a class="elementLink"
    href="./../../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html"
    guid="_0XAf0MlgEdmt3adZL5Dmdw">Architecture</a>&nbsp;for more information.
</p>
<p>
    Feel free to use one or more of these templates or create your own.
</p>
<p>
    The <a class="elementLink" href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"
    guid="_0X9iEMlgEdmt3adZL5Dmdw">Architect</a> should decide what views are useful for describing the system under
    consideration.&nbsp;
</p>
<p>
    Consider one or more&nbsp;relevant views of the architecture and document each one using the provided template for the
    architectural view. If needed, document information that applies to more than one view using the template provided for
    the Software Architecture Document to get an integrated representation of the architecture instead of just snapshots
    taken from different angles.
</p>
<p>
    The structuring of the documents must support the needs of the intended audience. For example, instead of a document
    for the implementation view developers may find more useful alternative forms for the project directory structure like
    the template provided for the project startup kit.
</p>
<p>
    Keep documentation up-to-date but to an essential minimum. When the architecture is under development, decisions are
    reconsidered frequently so constant revision of the documentation is an unnecessary expense.&nbsp; Determine points in
    the development lifecycle when documentation should be updated.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/sw_architecture_doc_tpl.dot|openup_basic/guidances/templates/resources/project_startup_kit.zip|openup_basic/guidances/templates/resources/sw_architecture_view_tpl.dot|openup_basic/guidances/templates/resources/software_arch_document.dot</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="risk_list" briefDescription="A list or table containing risk attributes. As it is usual to rank risks by priority, spreadsheets may be an alternative to capture risks" id="_MIUO0C8FEduzydamRseoUw" orderingGuide="" suppressed="false" presentationName="Risk List" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="new_template,_MIUO0C8FEduzydamRseoUw" briefDescription="" id="-OugFZJszm73z0_KSwRXZPw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/risk_list.xls</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="work_items_list" briefDescription="This is a spreadsheet suggested for representing a work items list. Alternative templates would be usage of a specific tool or database with similar information." id="_QwUJYDg0Edu4E8ZdmlYjtA" orderingGuide="" suppressed="false" presentationName="Work Items List" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="work_items_list,_QwUJYDg0Edu4E8ZdmlYjtA" briefDescription="" id="-mPA7vone29k1OvF_1rACjg" orderingGuide="" suppressed="false" authors="" changeDescription="" version="">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/work_items_list.xls</Attachment>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Template" name="status_assessment" briefDescription="This is the informal template suggested for capturing and communicating the results of iteration assessments." id="_1awLIEp2Edup0IY9DKDPkg" orderingGuide="" suppressed="false" presentationName="Status Assessment" variabilityType="na">
        <Presentation xsi:type="uma:GuidanceDescription" name="new_template,_1awLIEp2Edup0IY9DKDPkg" briefDescription="" id="-2uQACndDBzBhJC1sCmk5UA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Attachment>openup_basic/guidances/templates/resources/status_assessment.dot</Attachment>
        </Presentation>
      </ContentElement>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ContentPackage" name="intent" briefDescription="Intent sub-process." id="_3E1NwDPBEduyTOpiJx8z_g" orderingGuide="" suppressed="false" global="false">
      <MethodPackage xsi:type="uma:ContentPackage" name="change_management" briefDescription="" id="_0b4YwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
        <ContentElement xsi:type="uma:Concept" name="workspace" briefDescription="Workspace refers to storage areas where developers can implement and test code  in accordance with the project's adopted standards in relative isolation from  other developers." id="_0cEmAMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Workspace" variabilityType="na">
          <Presentation name="workspace,_0cEmAMlgEdmt3adZL5Dmdw" briefDescription="" id="_Dfmk8MPiEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T09:22:51" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p align="left">
    On small teams, shared workspaces may work fine, but you must coordinate activities between team members to avoid
    conflicts.
</p>
<p align="left">
    A better approach is for each developer to have a reasonably private area for the development and testing of their work
    products. This workspace should be insulated&nbsp;so that destabilizing or conflicting changes made by others do not
    interfere with&nbsp;progress. However, it should&nbsp;not be isolated to the extent that&nbsp;the developer's work is
    unavailable to the team.
</p>
<p align="left">
    In addition, insulated&nbsp;workspaces can be created for each test phase, such as integration testing and system
    testing. This approach to workspaces provides several benefits <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[WIB04]</a>:
</p>
<ul>
    <li>
        <p>
            Developers can develop, test, and debug software changes without being affected by others team
            members'&nbsp;changes until they are ready. When ready, developers can update their insulated environments to
            test the latest changes from other developers.
        </p>
    </li>
    <li>
        <p>
            With separate workspaces for integration and system testing, a team could use a methodology that ensures
            changes have passed integration testing before other developers get them, thereby minimizing the time spent
            solving integration problems.&nbsp; For example, if two team members check in incompatible changes without
            realizing it, and both changes are immediately available to everyone on the team, all team members&nbsp;might
            waste time trying to resolve the broken build. Conversely, if both changes must pass integration testing before
            being distributed to others, the problem could be found and fixed by one person with minimal disruption to the
            team.
        </p>
    </li>
    <li>
        <p>
            By setting up an integration area to collect and build the latest changes, the team can integrate early and
            often. That is a well-known best practice for reducing overall cost and time to deliver software projects.
        </p>
    </li>
    <li>
        <p>
            The system test area, which is used for preparing releases, is insulated from developers' ongoing changes and
            contains only configurations that have passed integration testing. This lets you control the content of the
            release while still enabling developers to continue working.
        </p>
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="request_change" briefDescription="Capture and record change requests." id="_0mwzEclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Request Change" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="submit_change_request,_0mwzEclgEdmt3adZL5Dmdw" briefDescription="" id="_Nr0S4KeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-07T11:57:19" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Gather change request information" briefDescription="" id="_qEkewKuoEdmEGLSmmpF1Sg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p> Gather the information required to describe the change request. This should &#xD;
  include a description of the requested change, the reason for the change (defect &#xD;
  or enhancement), the&amp;nbsp;artifact&amp;nbsp;affected, &#xD;
  including&amp;nbsp;the version, and&amp;nbsp;the priority &#xD;
  of the change. If possible,&amp;nbsp;provide an estimate of the effort required &#xD;
  to implement the change. &lt;/p></Description>
            </Section>
            <Section name="Update the Work Item List" briefDescription="" id="_r2aP0KuoEdmEGLSmmpF1Sg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Update the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../basic_unified_process/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: &#xD;
Work Items List&lt;/a>&amp;nbsp;to&amp;nbsp;document the information &#xD;
that you gathered in the previous step.</Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose></Purpose>
          </Presentation>
          <Concept>_6jdvECb3Edqh1LYUOGRh2A</Concept>
          <Guideline>_fnZj0NVXEdqy9sbRhejO5Q</Guideline>
          <PerformedBy>_0dsWoMlgEdmt3adZL5Dmdw</PerformedBy>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <OptionalInput>_rGNWsCbSEdqh1LYUOGRh2A</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="change_requests" briefDescription="A change request is a general term for any request to change a work product." id="_6jdvECb3Edqh1LYUOGRh2A" orderingGuide="" suppressed="false" presentationName="Change Requests" variabilityType="na">
          <Presentation name="change_requests,_6jdvECb3Edqh1LYUOGRh2A" briefDescription="" id="-BsXK3ZGMm-mUT0KnkdoYBg" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-22T09:13:54" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    A change request represents any request to change a work product. This includes items commonly called defect reports,
    enhancement requests, requirements change request, implementation requests, and stakeholder requests.
</p>
<p>
    In this process, change request are captured in the <a class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html"
    guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>.&nbsp; See <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/work_items_list,_7vEXEMA4EdqSgKaj2SZBmg.html"
    guid="_7vEXEMA4EdqSgKaj2SZBmg">Guideline: Work Items List</a>&nbsp;for more information on the recommended
    attributes&nbsp;of change requests.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="submitting_change_requests" briefDescription="This guideline describes the type of information that is typically captured on a change request. This information is used to prioritize and scope the work required to implement the change and to monitor progress." id="_fnZj0NVXEdqy9sbRhejO5Q" orderingGuide="" suppressed="false" presentationName="Submitting Change Requests" variabilityType="na">
          <Presentation name="new_guideline,_fnZj0NVXEdqy9sbRhejO5Q" briefDescription="" id="-w7sImtXWkf4HDXdUWjRsUg" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2007-02-26T07:52:05" changeDescription="Moved content from previous concept:change request to this guideline and updated in accordance with discussion from April 18, 2006 telecon." version="0.2">
            <MainDescription><![CDATA[<h3>
    Background
</h3>
<p>
    Change requests typically have a lifecycle. They are raised,&nbsp;reviewed, accepted or rejected, implemented, verified
    and closed. These states define the status of the change request at a particular point in time and represent critical
    information for tracking progress. Other sets of states are possible.
</p>
<p>
    During review of a change request, the goal&nbsp;is to assess the&nbsp;technical, cost, and schedule impact
    of&nbsp;implementing the change.&nbsp; The technical impact&nbsp;assessment includes&nbsp;the determination of
    which&nbsp;work products&nbsp;are affected and an estimate of the level of effort required to change and verify all
    affected artifacts. This information becomes the basis of the cost and schedule impact assessments and, ultimately,
    whether the change request will be accepted or rejected.
</p>
<p>
    If accepted, the implementation and verification of the change request will be assigned to an iteration in the same
    manner as any other work item.
</p>
<p>
    The&nbsp;current process uses the <a class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html"
    guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a> to capture, prioritize, and track the change requests
    using the attributes defined for that artifact.
</p>
<h3>
    Submitting Change Requests
</h3>
<p>
    When submitting a change request provide as much information as possible to enable a speedy review and
    disposition.&nbsp; As a minimum, all change requests should include the following information:
</p>
<ul>
    <li>
        <strong>ID</strong> - a unique identifier for the change request to simplify tracking.&nbsp; If you are using some
        form of change tracking tool the tool will assign a unique ID.
    </li>
    <li>
        <strong>Brief Description</strong>&nbsp;- a name that summarizes the change request
    </li>
    <li>
        <strong>Detailed Description</strong> - A detailed description of the change request.&nbsp; For a defect, if you
        can provide information that will help reproduce the defect please do so.&nbsp; For an enhancement request, provide
        a rationale for the request.
    </li>
    <li>
        <strong>Affected Item</strong>&nbsp;- the affected artifact and version.
    </li>
    <li>
        <strong>Severity</strong> - how severe is this issue (show stopper, nice to have, etc.).
    </li>
    <li>
        <strong>Priority</strong> - how important it is this request in your opinion.
    </li>
</ul>
<p>
    Depending upon the system you are using, the names of these data elements may differ.&nbsp; However, this information
    is required, in one form or another, to permit a speedy review and disposition of the change request.
</p>
<br />
<br />
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:TermDefinition" name="configuration" briefDescription="" id="__Cw30ElxEducWJcS4yanqg" orderingGuide="" suppressed="false" presentationName="configuration" variabilityType="na">
          <Presentation name=",__Cw30ElxEducWJcS4yanqg" briefDescription="" id="-VPoMu7qzVX9grE4-nB3kMw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T03:07:10" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[The performance, functional, and physical attributes of an existing or planned product, or a combination of products.]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:TermDefinition" name="version" briefDescription="" id="_eX8K8ElyEducWJcS4yanqg" orderingGuide="" suppressed="false" presentationName="version" variabilityType="na">
          <Presentation name=",_eX8K8ElyEducWJcS4yanqg" briefDescription="" id="-4iL0UEFR2Fg7oWkh1TymIg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T03:10:30" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[A variant of some artifact; later versions of an artifact typically expand upon earlier versions.]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ContentPackage" name="requirements" briefDescription="" id="_0UCrYslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
        <MethodPackage xsi:type="uma:ContentPackage" name="uc_modeling" briefDescription="This package contains elements specific to Use-Case Modeling technique." id="_FtSMYAFjEduDPKiaP0pu-Q" orderingGuide="" suppressed="false" global="false">
          <ContentElement xsi:type="uma:Artifact" name="uc_model_intent_req_ucm" briefDescription="This artifact captures a model of the system's intended functions and its environment, and serves as a contract between the customer and the developers." id="_0UCrZclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_W2SgEDR5EdutE_HNDTJk5Q" variabilityType="contributes">
            <Presentation xsi:type="uma:ArtifactDescription" name="uc_model,_0UCrZclgEdmt3adZL5Dmdw" briefDescription="" id="_zHZW9KYSEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T06:42:02" changeDescription="" version="1.0.0" externalId="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <ImpactOfNotHaving></ImpactOfNotHaving>
              <Purpose><![CDATA[<p>
    This artifact presents an overview of the system's intended behavior.&nbsp; It&nbsp;is the basis for agreement
    between&nbsp;stakeholders and the project team regarding the intended functionality for the system. It also helps to
    guide the various tasks in the software development lifecycle.
</p>]]></Purpose>
              <ReasonsForNotNeeding></ReasonsForNotNeeding>
              <BriefOutline></BriefOutline>
              <RepresentationOptions>&lt;p>&#xD;
    Tailor this artifact to support the project team's needs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Representation options include: reports and diagrams from UML modeling tools, graphical representations created using&#xD;
    drawing tools, drawings on whiteboards. Most of the information in the use-case model is captured in the use-case&#xD;
    specifications.&#xD;
&lt;/p></RepresentationOptions>
            </Presentation>
            <Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
            <Concept>_zGqO0MDpEduTGJ8i4u8TMw</Concept>
            <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
            <Checklist>_0U6OEMlgEdmt3adZL5Dmdw</Checklist>
            <Checklist>_0VrDEMlgEdmt3adZL5Dmdw</Checklist>
            <Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
            <Guideline>_0VAUsMlgEdmt3adZL5Dmdw</Guideline>
            <Example>_t4QdAMNqEdu2IdAIaWZyAw</Example>
            <ContainedArtifact name="use_case_intent_req_ucm" briefDescription="" id="_SBnZ4AFlEduDPKiaP0pu-Q" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0VGbUMlgEdmt3adZL5Dmdw" variabilityType="contributes">
              <Example>_JLOiIMNvEdu2IdAIaWZyAw</Example>
            </ContainedArtifact>
          </ContentElement>
          <ContentElement xsi:type="uma:Task" name="find_and_outline_requirements_intent_req_ucm" briefDescription="" id="_txpV0AFmEduDPKiaP0pu-Q" orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?> &lt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quot;>   &lt;orderInfos name=&quot;sections&quot; timestamp=&quot;1150923424568&quot;>     &lt;gUIDs>_ckG-cCY-EdqNHcQ-rAojXw&lt;/gUIDs>     &lt;gUIDs>_GAr3IOz3Edq2wJOsmRwmhg&lt;/gUIDs>     &lt;gUIDs>_fDbgkCY-EdqNHcQ-rAojXw&lt;/gUIDs>     &lt;gUIDs>_XRKgkAFoEduDPKiaP0pu-Q&lt;/gUIDs>     &lt;gUIDs>_0WhHsN-eEdqiM_wFaqLjNg&lt;/gUIDs>   &lt;/orderInfos> &lt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection> " suppressed="false" presentationName="" variabilityBasedOnElement="_P9cMUPV_EdmdHa9MmVPgqQ" variabilityType="contributes">
            <Presentation xsi:type="uma:TaskDescription" name=",_txpV0AFmEduDPKiaP0pu-Q" briefDescription="" id="-Yt8TXGkE1rwydXR34apsrg" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Section name="Capture Use Case and Actors in a Use-Case Model" briefDescription="" id="_XRKgkAFoEduDPKiaP0pu-Q" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;p>&#xD;
    While capturing requirements, it may be useful to identify and capture the &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use&#xD;
    Case&lt;/a>s and&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/concepts/actor,_zGqO0MDpEduTGJ8i4u8TMw.html&quot;&#xD;
    guid=&quot;_zGqO0MDpEduTGJ8i4u8TMw&quot;>Actors&lt;/a>&amp;nbsp;in a &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/uc_model_intent_req_ucm,_0UCrZclgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0UCrZclgEdmt3adZL5Dmdw&quot;>Use-Case Model&lt;/a>. That can help people better understand the proposed system&#xD;
    functionality and its&amp;nbsp;surroundings. See &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html&quot;&#xD;
    guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Guideline: Find and Outline Actors and Use Cases&lt;/a>&amp;nbsp;for more details.&#xD;
&lt;/p></Description>
              </Section>
              <Alternatives></Alternatives>
              <Purpose></Purpose>
            </Presentation>
            <Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
            <Checklist>_0U6OEMlgEdmt3adZL5Dmdw</Checklist>
            <Guideline>_0VAUsMlgEdmt3adZL5Dmdw</Guideline>
            <Output>_0UCrZclgEdmt3adZL5Dmdw</Output>
          </ContentElement>
          <ContentElement xsi:type="uma:Task" name="detail_requirements_intent_req_ucm" briefDescription="" id="_7_3vEAFmEduDPKiaP0pu-Q" orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?> &lt;org.eclipse.epf.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:org.eclipse.epf.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quot;>   &lt;orderInfos name=&quot;sections&quot; timestamp=&quot;1158683054424&quot;>     &lt;gUIDs>_vWeHMCxSEdqjsdw1QLH_6Q&lt;/gUIDs>     &lt;gUIDs>_B47VwCxTEdqjsdw1QLH_6Q&lt;/gUIDs>     &lt;gUIDs>_2389cOz2Edq2wJOsmRwmhg&lt;/gUIDs>     &lt;gUIDs>_w2JYgEf6EduISP1GQDlvVQ&lt;/gUIDs>     &lt;gUIDs>_BYbboN-bEdqiM_wFaqLjNg&lt;/gUIDs>   &lt;/orderInfos> &lt;/org.eclipse.epf.uma.edit.tng.util.model:OrderInfoCollection> " suppressed="false" presentationName="" variabilityBasedOnElement="_0e1mIMlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <Presentation xsi:type="uma:TaskDescription" name="detail_requirements_ucm,_7_3vEAFmEduDPKiaP0pu-Q" briefDescription="" id="-_mfd9ziTwQV_5LE80jJw4g" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Section name="Update Use-Case Model" briefDescription="" id="_w2JYgEf6EduISP1GQDlvVQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>Based on your work update the &lt;a class=&quot;elementLink&quot;&#xD;
href=&quot;./../../openup_basic/workproducts/uc_model,_W2SgEDR5EdutE_HNDTJk5Q.html&quot; guid=&quot;_W2SgEDR5EdutE_HNDTJk5Q&quot;>Use-Case&#xD;
Model&lt;/a>.&amp;nbsp; Add, remove or update&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
href=&quot;./../../openup_basic/guidances/concepts/actor,_zGqO0MDpEduTGJ8i4u8TMw.html&quot; guid=&quot;_zGqO0MDpEduTGJ8i4u8TMw&quot;>Actors&lt;/a>&#xD;
and &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;&#xD;
guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use Case&lt;/a>s as required.&amp;nbsp; For more information on creating and structuring your use&#xD;
case model see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
href=&quot;./../../openup_basic/guidances/guidelines/uc_model,_0VAUsMlgEdmt3adZL5Dmdw.html&quot;&#xD;
guid=&quot;_0VAUsMlgEdmt3adZL5Dmdw&quot;>Guideline: Use-Case Model&lt;/a>.&amp;nbsp; For assistance in assessing the quality of your use&#xD;
case model see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
href=&quot;./../../openup_basic/guidances/checklists/uc_model,_0U6OEMlgEdmt3adZL5Dmdw.html&quot;&#xD;
guid=&quot;_0U6OEMlgEdmt3adZL5Dmdw&quot;>Checklist: Use-Case Model&lt;/a>.</Description>
              </Section>
              <Alternatives></Alternatives>
              <Purpose></Purpose>
            </Presentation>
            <Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
            <MandatoryInput>_0UCrZclgEdmt3adZL5Dmdw</MandatoryInput>
            <Output>_0UCrZclgEdmt3adZL5Dmdw</Output>
          </ContentElement>
          <ContentElement xsi:type="uma:Checklist" name="uc_model" briefDescription="This checklist provides questions to verify that the Use-Case Model is described in a consistent and complete manner." id="_0U6OEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Use-Case Model" variabilityType="na">
            <Presentation name="uc_model,_0U6OEMlgEdmt3adZL5Dmdw" briefDescription="" id="_MqODAMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-07T08:50:06" changeDescription="" version="1.0.0">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Section name="Is it easy to understand what the system does by reviewing the model?" briefDescription="" id="_rLdVMAeREduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        The Use-Case Survey provides a clear, concise overview of the purpose and functionality of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        There are no long chains of include relationships, such as when an included use case&amp;nbsp;includes other use&#xD;
        cases.&amp;nbsp; These can obscure comprehensibility.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Included use cases should not make assumptions about use cases that include them.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If several use cases contain similar&amp;nbsp;sub-flows investigate if&amp;nbsp;factoring this&amp;nbsp;common behavior into an&#xD;
        included use case will simplify the model.&amp;nbsp;&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
              </Section>
              <Section name="Have all use cases been identified?" briefDescription="" id="__kgR8AeREduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        The use cases identified collectively account for all required behavior of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        All features identified in the Vision document for this iteration have been addressed by at least one use case.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        All non-functional requirements that must be satisfied by a specific use case have been captured in that use case&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The use-case model contains no superfluous behavior (gold-platting).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each concrete use case must be associated with at least one actor.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Every actor should be associated with at least on use case.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
              </Section>
              <Section name="Is the model consistent?" briefDescription="" id="_fknU0Jz1EduBcbjYtLtItQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Under the same conditions, and with the same input, the system behavior should be consistent.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
              </Section>
              <Section name="Are all relationships between use cases required?" briefDescription="" id="_KowpkAeSEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Each included use case should make the model easier to understand, implement and maintain.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each concrete use case (i.e. not an included use case) should be independent of other use cases.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    &lt;br />&#xD;
&lt;/p></Description>
              </Section>
              <Section name="Are use-case packages used appropriately?" briefDescription="" id="_jyHeMAeTEduWycDgioo5rg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Cross-package dependencies have been reduced or eliminated to prevent model ownership conflicts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Packaging is intuitive and makes the model easier to understand and implement&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
              </Section>
              <Section name="Do all model elements have appropriate names?" briefDescription="" id="_i-S-ADeKEdu6VLD0YaVLog" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        No two use cases can have the same name.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Each actor has a name that effectively describes the role.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
              </Section>
              <Section name="Are individual use cases properly specified?" briefDescription="" id="_IYRUkJz2EduBcbjYtLtItQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Review the quality of each&amp;nbsp;use case specification using the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../../openup_basic/guidances/checklists/use_case,_0kNwINk1Edq2Q8qZoWbvGA.html&quot;&#xD;
        guid=&quot;_0kNwINk1Edq2Q8qZoWbvGA&quot;>Checklist: Use Case&lt;/a>.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
              </Section>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="uc_model" briefDescription="This guideline describes how to develop and evolve the use-case model to capture the functional requirements for the system under development." id="_0VAUsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Use-Case Model" variabilityType="na">
            <Presentation name="uc_model,_0VAUsMlgEdmt3adZL5Dmdw" briefDescription="" id="_AGvpcMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-28T08:40:11" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The key to successful iterative development is ensuring that the development team maximizes stakeholder value and
    minimizes risk early in the lifecycle, while minimizing re-work later.&nbsp; This imposes some constraints on how we
    develop the use-case model.
</p>
<p>
    At one extreme is the classical waterfall approach, which attempts to&nbsp;detail all of the requirements prior to
    design and implementation.&nbsp; This approach delays delivery of stakeholder value and risk reduction unnecessarily.
</p>
<p>
    At the other extreme is&nbsp;beginning development prior to understanding what the system must do.&nbsp; This approach
    results in significant, and costly, re-work later in the lifecycle.
</p>
<p>
    A better approach is to detail only those requirements which will be the focus of development in the next iteration (or
    two).&nbsp; Selection of these requirements is driven by value and risk, and thus requires as a minimum an abstract
    understanding of the "big-picture".
</p>
<p>
    The following discussion will outline the approach used to evolve the use-case model to achieve these goals.
</p>
<h3>
    <a id="How the Use-Case Model Evolves" name="How the Use-Case Model Evolves">How the Use-Case Model Evolves</a>
</h3>
<p>
    The recommended approach to evolving the use-case model takes a "breadth before depth" approach.&nbsp; In this
    approach, one identifies the actors and use cases and outlines them quickly.&nbsp; Based on this knowledge, one can
    then perform an initial assessment of risk and priorities and thus focus the effort of&nbsp;detailing&nbsp;the use
    cases on the right areas.
</p>
<h4>
    Inception
</h4>
<p>
    The purpose of inception is to understand the scope of the system.&nbsp; We need to understand the main purpose of the
    system, what is within the scope of the system, and what is external to the system.&nbsp; We should strive to list all
    the primary actors and use cases, however we don't have the luxury of being able to detail all of these requirements at
    this time.&nbsp; Strive to&nbsp;identify by name&nbsp;~80% of the primary actors and use cases and provide a brief
    description (one - three sentences) for each.
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <h5>
        Identify Stakeholders
    </h5>
    <p>
        Begin by listing all the external stakeholders for the system.&nbsp; These individuals will be the source of the
        requirements.
    </p>
    <h5>
        Identify Actors
    </h5>
    <p>
        Name and describe the primary actors.&nbsp; See <a class="elementLinkWithType"
        href="./../../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html"
        guid="_eyL0wCu-EdqSxKAVa9kmvA">Guideline: Find and Outline Actors and Use Cases</a>.
    </p>
    <h5>
        Identify Use Cases
    </h5>
    <p>
        For each actor, ask "what does this actor want to accomplish with the system"?&nbsp; This will reveal the primary
        use cases for the system.&nbsp; Name and describe each of these as you discover them.
    </p>
    <h5>
        Update the Use-Case Model
    </h5>
    <p>
        Update the use case model to capture the actor and use case names and brief description.&nbsp; Capture the
        relationship between the actors and use cases.
    </p>
    <h5>
        Outline the Basic Flows
    </h5>
    <p>
        For those use cases that are considered high priority by the stakeholders, or high risk by the development team,
        capture a step-by-step description of the Basic Flow.&nbsp; Don't worry about structuring the flow at this
        point.&nbsp; Focus on capturing the dialogue between the actor and the system and the key requirements for the
        system.
    </p>
    <h5>
        Identify Alternate Flows
    </h5>
    <p>
        As you work through the Basic Flows, ask: "What can go wrong?"; "What options are available at this point?";
        etc.&nbsp; These types of questions will reveal alternate flows.&nbsp; Capture these, giving each a name and brief
        description.&nbsp; Fight the urge to detail these alternate flows at this time.
    </p>
    <h5>
        Refactor the Use Case Model
    </h5>
    <p>
        Based on the Basic Flows you have identified, determine if there is common behavior that could be factored out into
        &lt;&lt;include&gt;&gt; use cases.&nbsp; Refactor the Use Case model accordingly.
    </p>
    <h5>
        Prioritize Use Cases
    </h5>
    <p>
        Given the abstract description you now have of the requirements, work with stakeholders to prioritize the use
        cases.&nbsp; This will be the primary input to iteration planning.
    </p>
</blockquote>
<h4>
    Elaboration
</h4>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        The purpose of elaboration is to demonstrate the feasibilty of&nbsp;the solution prior to committing additional
        resources.&nbsp; To be successful, one should demonstrate that stakeholder value can be delivered and that the risk
        of continuing is acceptable.&nbsp; We should strive to detail and implement ~20% of the scenarios.&nbsp; These
        scenarios should be selected to achieve good coverage of the architecture (for example, a vertical slice through
        the architecture, touching as many&nbsp;components and interfaces as possible, is preferred to elaborating the GUI
        only).
    </p>
    <h5>
        Detail Basic Flow
    </h5>
    <p>
        For those UC selected for the next iteration, spend the time to detail the basic flow now.&nbsp; See <a
        class="elementLinkWithType"
        href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html"
        guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: Detail Use Cases and Scenarios</a>.
    </p>
    <h5>
        Detail Alternate Flow
    </h5>
    <p>
        For those alternate flows selected for the next iteration, spend the time to detail the flows now.
    </p>
    <h5>
        Update the Use-Case Model
    </h5>
    <p>
        Update the Use-Case Model to capture any refinements made as a result of your work.&nbsp; Depending upon the
        complexity of the system, you may want to introduce packages to group the use cases in a logical manner to simplify
        communications, iteration planning, and parallel development.
    </p>
</blockquote>
<h4>
    Construction
</h4>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <p>
        The purpose of construction is to incrementally deliver functionality (and value).&nbsp; Working from the iteration
        plan, continue detailing the remaining requirements.&nbsp; Shoot for completion of ~90 - ~95% of use cases by the
        end of construction.
    </p>
    <h5>
        Detail Basic Flows
    </h5>
    <p>
        For those UC selected for the next iteration, spend the time to detail the basic flow now.&nbsp; See <a
        class="elementLinkWithType"
        href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html"
        guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: Detail Use Cases and Scenarios</a>.
    </p>
    <h5>
        Detail Alternate Flows
    </h5>
    <p>
        For those alternate flows selected for the next iteration, spend the time to detail the flows now.
    </p>
    <h5>
        Update the Use-Case Model
    </h5>
    <p>
        Update the Use-Case Model to capture any refinements made as a result of your work.
    </p>
</blockquote>
<h4>
    Transition
</h4>
<p>
    The purpose of transition is to make the system operational in its intended environment.&nbsp; Some requirements will
    still be uncovered at this point, but if we have done things right they should not stress the design.&nbsp; The
    remaining ~5% to ~10% of use cases should be detailed and implemented in this phase.
</p>
<h3>
    <a id="Avoiding Functional Decomposition" name="Avoiding Functional Decomposition">Avoiding Functional
    Decomposition</a>
</h3>
<p>
    A common pitfall for those new to use-case models is to perform a&nbsp;functional decomposition of the system. This
    results in many small "use cases", that on their own do not deliver the "observable result of value" to the
    actor.&nbsp; To avoid this, watch for the following symptoms:
</p>
<ul>
    <li>
        <strong>Small</strong> use cases, meaning that the description of the flow of events is only one or a few
        sentences.
    </li>
    <li>
        <strong>Many</strong> use cases, meaning that the number of use cases is some multiple of a hundred, rather than a
        multiple of ten.
    </li>
    <li>
        Use-case names that are constructions such as "do this operation on this particular data" or "do this function with
        this particular data". For example, "Enter Personal Identification Number in an ATM machine" should not be modeled
        as a separate use case for the ATM machine, because no one would use the system to do just this. A use case is a
        complete flow of events that results in something of value to an actor.
    </li>
</ul>
<p>
    To avoid functional decomposition, make sure that the use-case model helps answer these kinds of questions:
</p>
<ul>
    <li>
        What is the context of the system?
    </li>
    <li>
        Why are you building this system?
    </li>
    <li>
        What does the user want the system to do?
    </li>
    <li>
        How&nbsp;do the users benefit from the system?
    </li>
</ul>
<h3>
    <a id="Structuring the Use-Case Model" name="Structuring the Use-Case Model">Structuring the Use-Case Model</a>
</h3>
<p>
    There are three main reasons for structuring the use-case model:
</p>
<ul>
    <li>
        To make the use cases easier to understand.
    </li>
    <li>
        To partition common behavior described within many use cases.
    </li>
    <li>
        To make the use-case model easier to maintain.
    </li>
</ul>
<p>
    Structuring is not the first thing you do, however. There is no point in structuring the use cases until you know a bit
    more about their behavior than a one-sentence description. You should at least have established a step-by-step outline
    for the flow of events of the use case to make sure that your decisions are based on an accurate understanding of the
    behavior.
</p>
<p>
    There are several advanced modeling concepts available in the literature for&nbsp;structuring the use-case model,
    however, following the principle of "keep-it-simple" only the most useful of these, namely the &lt;&lt;include&gt;&gt;
    relationship is discussed in this process.&nbsp; This relationship permits one to factor out common behavior into a
    separate use case that is "include" in other use cases.&nbsp; See <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html"
    guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>&nbsp;for more&nbsp;details.
</p>
<p>
    Another aspect of&nbsp;structuring the use-case model for easier understanding is grouping the use cases into packages.
    The use-case model can be organized as a hierarchy of use-case packages. For more information on use-case packages, see
    <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/use_case_model,_2jyfUAhVEduRe8TeoBmuGg.html"
    guid="_2jyfUAhVEduRe8TeoBmuGg">Concept: Use-Case Model</a>.
</p>
<h3>
    <a id="Use Cases Are Always Related to Actors" name="Use Cases Are Always Related to Actors">Relationship Between Use
    Cases and Actors</a>
</h3>
<p>
    Running each use case includes communication with one or more actors. A use-case instance is always started by an actor
    asking the system to do something. This implies that every use case should have communicates-associations with actors.
    The reason for this rule is to enforce that the system provides only the functionality that users need and nothing
    else. Having use cases that no one requests is an indication that something is wrong in the use-case model or in the
    requirements.
</p>
<p>
    However, there are some exceptions to this rule:
</p>
<ul>
    <li>
        An&nbsp;"included" use case might not interact with an actor if the base use case does.
    </li>
    <li>
        A use case may be initiated according to a schedule (for example, once a week or once a day), which means that the
        system clock is the initiator. The system clock is internal to the system; therefore, the use case is not initiated
        by an actor but by an internal system event. If no other actor interaction occurs in the use case, it will not have
        any associations to actors. However, for clarity, you can use "time" as an actor to show how the use case is
        initiated in your use-case diagrams. <strong>CAUTION:</strong> if you have a lot of "time" actors in your model,
        challenge them.&nbsp; Perhaps you missed a real actor, such as an administrator responsible for scheduling reports,
        etc.
    </li>
</ul>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
            <Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
            <Guideline>_eyL0wCu-EdqSxKAVa9kmvA</Guideline>
            <Guideline>_4BJ_YCxSEdqjsdw1QLH_6Q</Guideline>
          </ContentElement>
          <ContentElement xsi:type="uma:Concept" name="use_case_model" briefDescription="This artifact is a model of the system's intended functions and its surroundings, and serves as a contract between the customer and the project team." id="_2jyfUAhVEduRe8TeoBmuGg" orderingGuide="" suppressed="false" presentationName="Use-Case Model" variabilityType="na">
            <Presentation name="new_concept,_2jyfUAhVEduRe8TeoBmuGg" briefDescription="" id="-yEWkrWZ3VUcjZPhq6bvScg" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-27T08:29:36" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<h3>
    Explanation
</h3>
<p>
    A use-case model is a model of how different types of users interact with the system to solve a problem.&nbsp; As such,
    it describes the goals of the users, the interactions between the users and the system, and the required behavior of
    the system in satisfying these goals.
</p>
<p>
    A use-case model consists of a number of model elements.&nbsp; The most important model elements are: use cases, actors
    and the relationships between them.
</p>
<p>
    A use-case diagram is used to graphically depict a subset of the model to simplify communications.&nbsp; There will
    typically be several use-case diagrams associated with a given model, each showing a subset of the model elements
    relevant for a particular purpose.&nbsp; The same model element may be shown on several use-case diagrams, but each
    instance must be consistent.&nbsp; If tools are used to maintain the use-case model, this consistency constraint is
    automated so that any changes to the model element (changing the name for example) will be automatically reflected on
    every use-case diagram that shows that element.
</p>
<p>
    The use-case model may contain packages that are used to structure the model to simplify analysis, communications,
    navigation, development, maintenance and planning.
</p>
<p>
    Much of the use-case model is in fact textual, with the text captured in the&nbsp;<a class="elementLink"
    href="./../../../openup_basic/guidances/templates/uc_specification,_0cpNwMlgEdmt3adZL5Dmdw.html"
    guid="_0cpNwMlgEdmt3adZL5Dmdw">Use-Case Specification</a>s that are associated with each use-case model
    element.&nbsp;These specifications describe the flow of events of the use case.
</p>
<p>
    The use-case model serves as a unifying thread throughout system development. It is used as the primary specification
    of the functional requirements for the system, as the basis for analysis and design, as an input to iteration planning,
    as the basis of defining test cases and as the basis for user documentation&nbsp;&nbsp;
</p>
<h3>
    Basic model elements
</h3>
<p>
    The use-case model contains, as a minimum, the following basic model elements.
</p>
<h4>
    Actor
</h4>
<p>
    A model element representing&nbsp;each actor. Properties include the actors name and brief description. See&nbsp;<a
    class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/actor,_zGqO0MDpEduTGJ8i4u8TMw.html"
    guid="_zGqO0MDpEduTGJ8i4u8TMw">Concept: Actor</a> for more information.
</p>
<h4>
    Use Case
</h4>
<p>
    A model element representing&nbsp;each use case. Properties include the use case name and use case specification. See
    <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html"
    guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: Use Case</a> and <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html"
    guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a> for more information.
</p>
<h4>
    Associations
</h4>
<p>
    Associations are used to describe the relationships between actors and the use cases they participate in. This
    relationship is commonly known as a “communicates-association”.
</p>
<h3>
    Advanced model elements
</h3>
<p>
    The use-case model may also contain the following advanced model elements.
</p>
<h4>
    Subject
</h4>
<p>
    A model element that represents the boundary of the system of interest.&nbsp;&nbsp;
</p>
<h4>
    Use-Case Package
</h4>
<p>
    A model element used to structure the use case model to simplify analysis, communications, navigation, and
    planning.&nbsp; If there are many use cases or actors, you can use use-case packages to further structure the use-case
    model in much the same manner you use folders or directories to structure the information on your hard-disk.
</p>
<p>
    You can partition a use-case model into use-case packages for several reasons, including:
</p>
<ul>
    <li>
        To reflect the order, configuration, or delivery units in the finished system thus supporting iteration planning.
    </li>
    <li>
        To support parallel development by dividing the problem into bite-sized pieces.
    </li>
    <li>
        To simplify communication with different stakeholders by creating packages for containing use cases and actors
        relevant to a particular stakeholder.
    </li>
</ul>
<h4>
    Generalizations
</h4>
<p>
    A relationship&nbsp;between actors to support re-use of common properties.
</p>
<h4>
    Dependencies
</h4>
<p>
    A number of dependency types between use cases are defined in UML. In particular, &lt;&lt;extend&gt;&gt; and
    &lt;&lt;include&gt;&gt;.
</p>
<p>
    &lt;&lt;extend&gt;&gt; is used to include optional behavior from an extending use case in an extended use case.
</p>
<p>
    &lt;&lt;include&gt;&gt; is used to include common behavior from an included use case into a base use case in order to
    support re-use of common behavior.
</p>
<p>
    The latter is the most widely used dependency and is useful for:
</p>
<ul>
    <li>
        Factoring out behavior from the base use case that is not necessary for the understanding of the primary purpose of
        the use case to simplify communications.
    </li>
    <li>
        Factoring out behavior that is in common for two or more use cases to maximize re-use, simplify maintenance and
        ensure consistency.
    </li>
</ul>
<h3>
    Example Use-Case Diagram
</h3>
<p>
    Figure 1 shows a use-case diagram from an Automated Teller Machine (ATM) use-case model.
</p>
<p>
    &nbsp;<img height="410" alt="Figure 1: ATM Use-Case Diagram" src="openup_basic/guidances/concepts/resources/ATMUCdiagram.GIF" width="565" />
</p>
<p>
    Figure 1: ATM Use-Case Diagram
</p>
<p>
    This diagram shows the subject (atm:ATM), four actors (Bank Customer, Bank, Cahier and Maintenance Person), five use
    cases (Withdraw Cash, Transfer Funds, Deposit Funds, Refill Machine and Validate User), three &lt;&lt;includes&gt;&gt;
    dependencies, and the associations between the performing actors and the use cases.
</p>
<p>
    The use cases Withdraw Cash, Deposit Funds, and Transfer Funds all need to include how the customer is identified to
    the system. This behavior can be extracted to a new inclusion use case called Validate User, which the three base use
    cases &lt;&lt;include&gt;&gt;. The base use cases are independent of the method used for identification, and it is
    therefore encapsulated in the inclusion use case. From the perspective of the base use cases, it does not matter
    whether the method for identification is to read a magnetic bank card, or perform a retinal scan. They only depend on
    the result of Validate Customer.
</p>
<p>
    Note that Figure 1 is only a partial view of the use-case model. The complete use-case model also includes descriptions
    of each actor, descriptions of each use case, and use-case specifications for each use case.&nbsp; For a more complete
    example of this use case model see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/examples/uc_model_evolve,_t4QdAMNqEdu2IdAIaWZyAw.html"
    guid="_t4QdAMNqEdu2IdAIaWZyAw">Example: Evolution of the Use-Case Model</a>.<br />
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Role" name="analyst_intent_req_ucm" briefDescription="" id="_MO9vkDPKEdudA-StyUUwnw" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0VxJsMlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <ResponsibleFor>_0UCrZclgEdmt3adZL5Dmdw</ResponsibleFor>
          </ContentElement>
        </MethodPackage>
        <ContentElement xsi:type="uma:Concept" name="requirements" briefDescription="This page provides an informal definition of a requirement and explains how the concept is related to the process." id="_0Wh-sMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Requirements" variabilityType="na">
          <Presentation name="requirements,_0Wh-sMlgEdmt3adZL5Dmdw" briefDescription="" id="_eUfzwMMyEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T05:21:47" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Requirements are the project team's to-do list.
</p>
<p align="left">
    Requirements define what is needed and focus the project team. They are the primary method used to communicate the
    goals of the project to everyone on the team.
</p>
<div class="O" v:shape="_x0000_s1026">
    <div style="mso-line-spacing: '100 30 0'">
        Requirements define:
    </div>
</div>
<ul>
    <li>
        What the&nbsp;stakeholders&nbsp;need; and
    </li>
    <li>
        What the system must include to satisfy the stakeholder needs.
    </li>
</ul>
<p align="left">
    Requirements are the basis for capturing and communicating needs, managing expectations, prioritizing and assigning
    work, verifying and validating the system (acceptance), and managing the scope of the project.
</p>
<p align="left">
    Requirements may take different forms, including Use Cases and Scenarios, unstructured text, structured text, or a
    combination, and they may be stated at different levels of granularity. At the highest level of granularity,&nbsp;<a
    class="elementLink" href="./../../../openup_basic/guidances/termdefinitions/feature,_PgYREAeYEduWycDgioo5rg.html"
    guid="_PgYREAeYEduWycDgioo5rg">Feature</a>s define the services that the system must provide to solve the customer's
    problem. These are captured as structured or unstructured text in the <a class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html"
    guid="_0WVxcMlgEdmt3adZL5Dmdw">Artifact: Vision</a>. At the next level of granularity, Use Cases define the
    functionality that the system must provide to&nbsp;deliver the required features. These are captured&nbsp;as Use Cases
    (see <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html"
    guid="_0VGbUMlgEdmt3adZL5Dmdw">Artifact: Use Case</a>)&nbsp;that describe the sequence of actions performed by the
    system to yield an observable result of value.
</p>
<p>
    A system must perform according to the behavior that Use Cases specify. However, there are system requirements that do
    not represent a specific behavior:
</p>
<ul>
    <li>
        Legal and regulatory requirements, as well as application standards
    </li>
    <li>
        Quality attributes of the system to be built, including usability, reliability, performance, and supportability
        requirements
    </li>
    <li>
        Interface requirements to be able to communicate with external systems
    </li>
    <li>
        Design constraints, such as those for operating systems and environments and for compatibility with other software
    </li>
</ul>
<p>
    These quality requirements are often referred to as <strong>non-functional</strong> requirements.
</p>
<p>
    Quality requirements that apply to the system as a whole are captured as structured text in <a
    class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html"
    guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>.&nbsp; Quality requirements that are closely
    associated with a particular Use Case are often captured in the Use Case itself to simplify review, understanding, and
    maintenance.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="define_vision" briefDescription="Define the vision for the future system. Describe the problem and features based on Stakeholder requests." id="_0fOAoMlgEdmt3adZL5Dmdw" orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                &lt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quotlt;orderInfos name=&quot;sections&quot; timestamp=&quot;1115151259496&quotlt;gUIDs>_sa5F4LwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_tvzDULwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_vGg-oLwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_z7ZC4LwPEdm6DujQZORGLQ&lt;/gUIDs>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    &lt;gUIDs>_u0DWcKhXEdmsY5hhGsDstg&lt;/gUIDslt;gUIDs>_yl_-EKhXEdmsY5hhGsDstg&lt;/gUIDslt;gUIDs>_zQUfoKuHEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_1LVn0LwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_2VixILwPEdm6DujQZORGLQ&lt;/gUIDslt;gUIDs>_yq-j4LwPEdm6DujQZORGLQ&lt;/gUIDslt;/orderInfoslt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollectionsuppressed="false" presentationName="Define Vision" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="define_vision,_0fOAoMlgEdmt3adZL5Dmdw" briefDescription="" id="_5rJ78Lj3Edmy88CC3LfB_w" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-28T03:02:00" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Identify Stakeholders" briefDescription="" id="_tvzDULwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Identify the decision-makers, customers, potential users, partners, domain experts, industry analysts and other&#xD;
    interested parties (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role:&#xD;
    Stakeholder&lt;/a>). Develop profiles of potential (or actual) users of the system that map to the roles of human actors&#xD;
    of the system that you are developing. Document the initial information on key users and their environment in the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Artifact: Vision&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Gain agreement on the problem to be solved" briefDescription="" id="_sa5F4LwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Avoid rushing into defining the solution. First, gain agreement on the definition of the problem by asking the stakeholders&#xD;
what they see as the problem. Then search for root causes, or the “problem behind the problem.”&#xD;
Use&amp;nbsp;techniques&amp;nbsp;like the ones&amp;nbsp;described in&amp;nbsp;&lt;a class=&quot;elementlinkwithtype&quot;&#xD;
href=&quot;./../../openup_basic/guidances/guidelines/req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw.html&quot;&#xD;
guid=&quot;_OnoNQNSAEdmLhZ9H5Plxyw&quot;>Guideline: Requirements Gathering Techniques&lt;/a>. Formulate the problem statement, and then&#xD;
fill in the corresponding section from &lt;a class=&quot;elementlinkwithtype&quot;&#xD;
href=&quot;./../../openup_basic/guidances/templates/vision,_0cW54MlgEdmt3adZL5Dmdw.html&quot;&#xD;
guid=&quot;_0cW54MlgEdmt3adZL5Dmdw&quot;>Template: Vision&lt;/a>. The purpose of this is to help you distinguish solutions and answers&#xD;
from problems and questions.&lt;br />&#xD;
&lt;br /></Description>
            </Section>
            <Section name="Capture a common vocabulary" briefDescription="" id="_rliOAOz2Edq2wJOsmRwmhg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Every project has its own specialized terminology that everyone on the team must understand well to communicate effectively&#xD;
with stakeholders. Work with stakeholders to&amp;nbsp;create a glossary that defines acronyms, abbreviations, and&amp;nbsp;relevant&#xD;
business and technical terms. Work with stakeholder to continually expand and refine the&amp;nbsp;glossary throughout the&#xD;
project life cycle.</Description>
            </Section>
            <Section name="Gather stakeholder requests" briefDescription="" id="_vGg-oLwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Use the most appropriate method to gather information, such as the ones in &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/guidelines/req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw.html&quot;&#xD;
    guid=&quot;_OnoNQNSAEdmLhZ9H5Plxyw&quot;>Guideline: Requirements Gathering Techniques&lt;/a>. Each one is applicable in a particular&#xD;
    situation or to a certain type of stakeholder.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If you can meet stakeholders in person, then you can conduct an interview or a brainstorming session. This face to face&#xD;
    collaboration is extremely valuable and reduces the chances of the project team misunderstanding the needs of the&#xD;
    stakeholders.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Some requirements may already be documented in an existing Work Item List. This can often be used as a solid starting&#xD;
    position from which a full set of requirements can be created.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Any requirements gathered during this step should be captured in the Work Item List.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html&quot;&#xD;
    guid=&quot;_P9cMUPV_EdmdHa9MmVPgqQ&quot;>Task: Find and Outline Requirements&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Define the system boundaries" briefDescription="" id="_z7ZC4LwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Find and define the line that divides the solution and the real world that surrounds the solution. Identify interfaces,&#xD;
    as well as input and output information exchanged with users, machines, or systems.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    A Use Case Model is one technique that can prove useful in defining the system boundaries.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html&quot;&#xD;
    guid=&quot;_P9cMUPV_EdmdHa9MmVPgqQ&quot;>Task: Find and Outline Requirements&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify constraints on the system" briefDescription="" id="_1LVn0LwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Consider the various sources of constraints that can impact the design or the project itself:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Political&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Economic (budget, licensing)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Environmental (regulatory constraints, legal, standards)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Technical (platforms, technology)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Feasibility (schedule, resources allocation, outsourcing)&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        System (solutions compatibility, support of operating systems and environments).&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Define features of the system" briefDescription="" id="_2VixILwPEdm6DujQZORGLQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Work with stakeholders to capture&amp;nbsp;a list&amp;nbsp;of&amp;nbsp;&lt;a class=&quot;elementlinkwithusertext&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/termdefinitions/feature,_PgYREAeYEduWycDgioo5rg.html&quot;&#xD;
    guid=&quot;_PgYREAeYEduWycDgioo5rg&quot;>features&lt;/a> that stakeholders want in the system, briefly describing them and giving &lt;a&#xD;
    class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/concepts/requirement_attributes,_VQ268O0KEdqHTdbLTmC5IQ.html&quot;&#xD;
    guid=&quot;_VQ268O0KEdqHTdbLTmC5IQ&quot;>attributes&lt;/a> to help define their general status and priority in the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Update the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>&amp;nbsp;to capture the features identified&amp;nbsp;and their&#xD;
    attributes.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Achieve concurrence" briefDescription="" id="_AhjmAL-GEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Conduct a review&amp;nbsp;of the project vision with relevant Stakeholders and the development team to ensure agreement, assess&#xD;
quality, and identify required changes. See&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html&quot; guid=&quot;_E-dPIL-GEdqb7N6KIeDL8Q&quot;>Guideline: Effective Requirement Reviews&lt;/a> for more information.</Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[The solution is proposed for a problem that everybody agrees on. Stakeholders collaborate with the development team to
express and document their problems, needs, and potential features for the system to be, so the project team can better
understand what has to be done.]]></Purpose>
          </Presentation>
          <Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
          <Checklist>_0WoFUMlgEdmt3adZL5Dmdw</Checklist>
          <Guideline>_OnoNQNSAEdmLhZ9H5Plxyw</Guideline>
          <Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
          <PerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</PerformedBy>
          <Output>_0WVxcMlgEdmt3adZL5Dmdw</Output>
          <Output>_Wn7HcNcEEdqz_d2XWoVt6Q</Output>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0WVxcMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_rGNWsCbSEdqh1LYUOGRh2A</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="find_and_outline_requirements" briefDescription="This task describes how to capture the requirements for the system." id="_P9cMUPV_EdmdHa9MmVPgqQ" orderingGuide="" suppressed="false" presentationName="Find and Outline Requirements" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ" briefDescription="" id="_P9iS8PV_EdmdHa9MmVPgqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-30T12:32:02" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations><![CDATA[Close collaboration with stakeholders on this task is critical for the success of project.]]></KeyConsiderations>
            <Section name="Gather information" briefDescription="" id="_ckG-cCY-EdqNHcQ-rAojXw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Be prepared by gathering and reviewing information related to the problem domain, problem statement, business&#xD;
    environment and key stakeholders.&amp;nbsp; Most of this information should be available in the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Artifact: Vision&lt;/a>.&amp;nbsp;&amp;nbsp;You can use various techniques to make gathering&#xD;
    requirements easier. Face-to-face meetings with stakeholders is the most effective way to understand stakeholder needs&#xD;
    and to gather and validate requirements, but you&amp;nbsp;must prepare in order for&amp;nbsp;these meetings to run efficiently.&#xD;
    See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw.html&quot; guid=&quot;_OnoNQNSAEdmLhZ9H5Plxyw&quot;>Guideline: Requirements Gathering Techniques&lt;/a>&amp;nbsp;for more information.&amp;nbsp;&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify and capture domain terms" briefDescription="" id="_GAr3IOz3Edq2wJOsmRwmhg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Work closely with stakeholder to make sure that ambiguous or domain-specific terms are clearly defined in the&amp;nbsp;&lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html&quot; guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a> and that you use these terms consistently.</Description>
            </Section>
            <Section name="Capture requirements" briefDescription="" id="_fDbgkCY-EdqNHcQ-rAojXw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Identify the types of requirements relevant to your system (see &lt;a class=&quot;elementlinkwithtype&quot; href=&quot;./../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0Wh-sMlgEdmt3adZL5Dmdw&quot;>Concept: Requirements&lt;/a>). &#xD;
&lt;p>&#xD;
    Work with stakeholders to identify and capture&amp;nbsp;the actors and Use Cases. See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA.html&quot; guid=&quot;_eyL0wCu-EdqSxKAVa9kmvA&quot;>Guideline: Find and Outline Actors and Use Cases&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Work with stakeholders to identify and capture&amp;nbsp;the other types of requirements relevant&amp;nbsp;to your system. See&#xD;
    &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q.html&quot; guid=&quot;_wr24gNcGEdqz_d2XWoVt6Q&quot;>Guideline: Supporting Requirements&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Achieve concurrence" briefDescription="" id="_0WhHsN-eEdqiM_wFaqLjNg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Conduct a review&amp;nbsp;of the&amp;nbsp;requirements with relevant &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholders&lt;/a>&#xD;
and the development team to ensure consistency with the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>,&#xD;
assess quality, and identify any required changes. See&amp;nbsp;&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html&quot; guid=&quot;_E-dPIL-GEdqb7N6KIeDL8Q&quot;>Guideline: Effective Requirement Reviews&lt;/a>&amp;nbsp;for more information.</Description>
            </Section>
            <Section name="Update the Work Items  List" briefDescription="" id="_Mgb9IC4DEduBP8F-6-95NQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Capture references to the requirements in the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>, so that you can prioritize the work.</Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[The purpose of this task is to understand Stakeholder requirements and communicate these to the development team.]]></Purpose>
          </Presentation>
          <Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
          <Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
          <Concept>_zGqO0MDpEduTGJ8i4u8TMw</Concept>
          <Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
          <Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
          <Checklist>_0VrDEMlgEdmt3adZL5Dmdw</Checklist>
          <Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
          <Guideline>_OnoNQNSAEdmLhZ9H5Plxyw</Guideline>
          <Guideline>_eyL0wCu-EdqSxKAVa9kmvA</Guideline>
          <Guideline>_wr24gNcGEdqz_d2XWoVt6Q</Guideline>
          <Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
          <Guideline>_1AOsMO0JEdqHTdbLTmC5IQ</Guideline>
          <Guideline>_6jXzYNcKEdqz_d2XWoVt6Q</Guideline>
          <PerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_Wn7HcNcEEdqz_d2XWoVt6Q</MandatoryInput>
          <MandatoryInput>_0WVxcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <Output>_BVh9cL-CEdqb7N6KIeDL8Q</Output>
          <Output>_Wn7HcNcEEdqz_d2XWoVt6Q</Output>
          <Output>_0VGbUMlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="req_gathering_techniques" briefDescription="This guideline describes various techniques for gathering requirements." id="_OnoNQNSAEdmLhZ9H5Plxyw" orderingGuide="" suppressed="false" presentationName="Requirements Gathering Techniques" variabilityType="na">
          <Presentation name="req_gathering_techniques,_OnoNQNSAEdmLhZ9H5Plxyw" briefDescription="" id="_On0agNSAEdmLhZ9H5Plxyw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-22T04:27:44" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Sources of Requirements
</h3>
<p>
    Good requirements start with good sources. Finding those quality sources is an important task and, fortunately, one
    that&nbsp;takes few&nbsp;resources. Examples of sources of requirements include:
</p>
<ul>
    <li>
        Customers
    </li>
    <li>
        Users
    </li>
    <li>
        Administrators and maintenance&nbsp;staff
    </li>
    <li>
        Partners
    </li>
    <li>
        Domain Experts
    </li>
    <li>
        Industry Analysts
    </li>
    <li>
        Information about competitors&nbsp;
    </li>
</ul>
<h3>
    Requirements Gathering Techniques
</h3>
<p>
    After you have identified these sources, there are a number of techniques that may be used to gather requirements. The
    following will describe the various techniques, followed by a brief discussion of when to use each technique.
</p>
<p>
    To get the requirements down on paper, you&nbsp;can to do one or more of the following:
</p>
<ul>
    <li>
        Conduct a brainstorming session
    </li>
    <li>
        Interview users
    </li>
    <li>
        Send questionnaires
    </li>
    <li>
        Work in the target environment
    </li>
    <li>
        Study analogous systems
    </li>
    <li>
        Examine suggestions and problem reports
    </li>
    <li>
        Talk to support teams
    </li>
    <li>
        Study improvements made by users
    </li>
    <li>
        Look at unintended uses
    </li>
    <li>
        Conduct workshops
    </li>
    <li>
        Demonstrate prototypes to stakeholders
    </li>
</ul>
<p>
    The best idea is to get the requirements down quickly and then to encourage the users to correct and improve them. Put
    in those corrections, and repeat the cycle. Do it now, keep it small, and correct it at once. Start off with the best
    structure you can devise, but expect to keep on correcting it throughout the process.&nbsp; Success tips: Do it now,
    keep it small, and correct it immediately.
</p>
<h4>
    Conduct a brainstorming session
</h4>
<p>
    Brainstorming is a short group session where everyone is allowed to say whatever they feel is important to the topic of
    discussion. After that, a facilitator leads the group in organizing and prioritizing the results.&nbsp; The following
    basic rules for brainstorming&nbsp;ensures better results:
</p>
<ul>
    <li>
        Start out by clearly stating the objective of the brainstorming session.
    </li>
    <li>
        Generate as may ideas as possible.
    </li>
    <li>
        Let your imagination soar.
    </li>
    <li>
        Do not allow criticism or debate while you are gathering information.
    </li>
    <li>
        Once information is gathered,&nbsp;reshape and combine ideas.
    </li>
</ul>
<h4>
    Interview users
</h4>
<p>
    Face-to-face contact with users through individual interviewing is the primary source of requirements and an important
    way you gather and validate their requirements. Remember that it is not the only possible technique, and that you can
    conduct interviews many different ways. Develop a repertoire of styles to&nbsp;fit different situations. Unless you use
    the system yourself, you will need to make an effort to understand and experience the user's problem to describe it
    clearly and correctly.
</p>
<h4>
    Send Questionnaires
</h4>
<p>
    If face-to-face meetings are possible, they are always preferable, because they provide a better means of uncovering
    the problem behind the problem. Sometimes, though,&nbsp;face-to-face meetings with stakeholders are not feasible (when
    developing products for the consumer market, for example). In those situations, consider using questionnaires.&nbsp;
    Send a set of questions, possibly with multiple choice responses, to the relevant stakeholders, and ask them to
    complete it and return it to you.&nbsp; Success&nbsp;tips: Keep it short and given them a deadline.&nbsp;
</p>
<p>
    This technique has the advantage of providing a lot of information for statistical analysis. However, the questions
    must be well designed to be clear and to avoid so-called "leading questions", which bias the responses.&nbsp;
</p>
<h4>
    Work in the target environment
</h4>
<p>
    Experience the work of the users for yourself. Working with users helps you understand problems that have resisted
    previous solutions. Familiar systems developed in this way inevitably include tools for programmers, such as
    interactive editors and compilers, as the developers naturally have both the expertise in the subject area, and the
    desire to solve their own problems. It would be good to see the same dedication devoted to solving problems in other
    areas too. Where the work cannot easily be experienced in this way, it may still be possible to do a bit more than just
    sit quietly and observe. Users can give you a commentary on what they are doing, what the problems are, and what they
    would like to have to make the work easier.
</p>
<h4>
    Study analogous systems
</h4>
<p>
    The starting point for many projects is often a similar or an existing system. Sometimes, comparable products and
    systems contain working versions of good ideas for solving user problems. You can save the time lost in reinventing the
    wheel by looking at systems already on the market, whether they are systems installed at the user's site or products
    made by rival organizations. Even if they are trying to solve slightly different problems, they often&nbsp;provide
    valuable clues as to what you need to do.
</p>
<p>
    Listen when a customer asks why a product couldn't do something that the customer wants, and keep a list of these
    suggestions. Later, use it to start discussions with other users. You should be able to obtain some requirements
    directly this way. If not, capture and store suggestions for future use.
</p>
<p>
    You can describe to users selected features of other products. Explain that the system is designed for&nbsp;another
    purpose&nbsp;but contains an interesting feature, and you wonder it or something similar&nbsp;would help them.
    Sometimes these systems are described in documents, such as a contract from another organization or a report written
    for management. Often, these documents were never intended as formal requirements, and were written merely to
    communicate a stream-of-consciousness idea. Define a process of going from disorganized to organized information.
</p>
<p>
    Such a process might involve the following activities:
</p>
<ul>
    <li>
        Read the document from end to end (several times) to comprehend what the customer wants and what actually has been
        written.
    </li>
    <li>
        Classify all of the types of information in the document. (user, system requirements, design elements, plans,
        background material, irrelevant detail)
    </li>
    <li>
        Mark up the original text to separate out such requirements.
    </li>
    <li>
        Find a good structure for each of the different types of information such as: a scenario for the user requirements,
        functional breakdown for the system requirements, and architecture for the design.
    </li>
    <li>
        Organize the information to show gaps and overlaps. Feel free to add missing elements, but confirm these decisions
        with the users.
    </li>
    <li>
        Create traceability links between these information elements to show the designers exactly what the users want.
    </li>
    <li>
        Convince the customer to accept the new information as the basis for the contract.
    </li>
</ul>
<h4>
    Examine suggestions and problem reports
</h4>
<p>
    Requirements can come from change suggestions and user problems. A direct road to finding requirements is to look at
    suggestions and problems as first described. Most organizations have a form for reporting system problems or software
    defects. You can ask to look through the reports (and there will probably be many). Sort them into groups so you can
    identify the key areas that are troubling users. Ask users some questions about these areas to clarify the users'
    actual needs.
</p>
<h4>
    Talk to support teams
</h4>
<p>
    Most large sales organizations have a help desk that keeps a log of problems and fixes, and support engineers who do
    the fixing. Many organizations have similar facilities to support their own operations. Talking to the help desk staff
    and the support engineers may give you good leads into the requirements, and save you time. Also talk to the training
    team and installation teams about what users find to be&nbsp;difficult.
</p>
<h4>
    Study improvements made by users
</h4>
<p>
    This is an excellent source of requirements. Users of a standard company spreadsheet may have added a few fields, or
    related different sheets together, or drawn a graph, that exactly meets their individual needs. You need only ask: Why
    did you add that? Their answers help you&nbsp;get to the heart of the actual requirement. This applies also to hardware
    and non-computer devices. For example, a lathe operator may have manufactured a special clamp, or an arm that prevents
    movement of the tool beyond a certain point. Any such modification points to something wrong with the existing product,
    which makes it&nbsp;a valid&nbsp;requirement for the new version.
</p>
<h4>
    Look at unintended uses
</h4>
<p>
    People often use things for purposes for which they were not designed.&nbsp; This is&nbsp;a good way to get new ideas
    and to think of innovations. For example, an observant product manager noticed that an engineer was staying in the
    office late to use an advanced computer-aided design system to design a new kitchen layout for his home. Inexpensive
    commercial products are now widely available for home use.
</p>
<h4>
    Conduct workshops
</h4>
<p>
    Workshops can rapidly pull together a good set of requirements. In two to five days, you can create a set of
    requirements, and then review and improve them. If everyone in a workshop tries to estimate the cost and value of each
    requirement, the document becomes much more useful and cost-effective.
</p>
<p>
    Workshops are quicker and better at discovering requirements than other techniques, such as sending questionnaires. You
    are bringing the right collection of people together, and getting them to correct and improve on their requirements
    document.
</p>
<p>
    A workshop is inherently expensive because of the number of people involved, but it saves a large amount of time. If
    you can define the product right the first time and cut three months off the requirements gathering, the savings could
    be enormous. The workshop has to be thoroughly organized to take advantage of people's time.
</p>
<p>
    Choose a quiet location for the workshop so that people are not disturbed by day-to-day business. Mobile phones should
    be discouraged; arrange to take messages externally. Take advantage of informal interactions by choosing a site so that
    people don't go home at night or go out separately. The example&nbsp;in Figure 1&nbsp;shows the logic of a requirements
    workshop. Note that the workshop provides the environment in which to apply other requirements-gathering techniques
    such as brainstorming.
</p>
<p>
    <img height="381" alt="" src="./resources/Workshop%20Activity%20Diagram.GIF" width="542" />
</p>
<p>
    <strong>Figure 1: Conducting Workshops</strong>
</p>
<h4>
    Demonstrate prototypes to stakeholders
</h4>
<p>
    Prototypes allow us to immediately see some aspects of the system. Showing users a simple prototype can
    provoke&nbsp;them into giving good requirements information or changing their mind about existing requirements. The
    techniques described here help you gather ideas for requirements. Prototypes and models are an excellent way of
    presenting ideas to users. They can illustrate how an approach might work, or give users a glimpse of what they might
    be able to do. More requirements are likely to emerge when users see what you are suggesting.
</p>
<p>
    A presentation can use a sequence of slides, storyboard, an artist's impression, or even an animation to give users a
    vision of the possibilities. When prototyping software, make a mock-up of the user interface screens, emphasizing that
    there is no code and that the system has not been designed or even specified yet (fair warning: there are dangers here
    for the unwary).
</p>
<p>
    This prototyping aims to get users to express (missing) requirements. You are not trying to sell users an idea or
    product, you are finding out what they actually want. Seeing a prototype, which invariably is wrong in some ways and
    right in others, is a powerful stimulus to users to start saying what they want. They may point out plenty of problems
    with the prototype! This is excellent,&nbsp;because each problem leads to a new requirement.
</p>
<h3>
    Which Technique to Apply?
</h3>
<p>
    Which technique to apply depends on a number of factors, such as:
</p>
<ul>
    <li>
        Availability and location of stakeholders
    </li>
    <li>
        Development team knowledge of the problem domain
    </li>
    <li>
        Customers' and users' knowledge of the problem domain
    </li>
    <li>
        Customers' and users' knowledge of the development process and methods
    </li>
</ul>
<p>
    If the stakeholders are not co-located or readily available, for example in the case of a product being developed for
    mass market,&nbsp;techniques such as brainstorming, interviews and workshops that require face-to-face contact with the
    stakeholders may be difficult or impossible.
</p>
<p>
    If the stakeholders are available for face-to-face meetings, this is a much better situation and almost all of the
    techniques described, or combination of them, may be applied. In this case, the domain and development experience of
    oth the stakeholders and the development team are critical factors in selecting the appropriate technique.
</p>
<p>
    Figure 2, adapted from <a class="" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[HIC03]</a>, provides a framework for determining the appropriate techniques. It
    defines four main categories of customer or user experience and development team experience: "Fuzzy problem",
    "Selling/Teaching", "Catch up", and "Mature".
</p>
<p>
    <img height="470" alt="" src="./resources/Which%20Req%20Gathering%20Technique.gif" width="514" />
</p>
<p>
    <strong>Figure 2: Selection of Techniques</strong>
</p>
<p>
    There is no "right answer", but these guidelines may help you decide which method to use:
</p>
<ul>
    <li>
        Catch-up: Interviews, work in target environment
    </li>
    <li>
        Fuzzy: Brainstorming, workshops
    </li>
    <li>
        Mature: Questionnaires, workshops, prototypes
    </li>
    <li>
        Selling/Teaching: prototypes
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="detail_requirements" briefDescription="This task describes how to detail one or more requirements for the system." id="_0e1mIMlgEdmt3adZL5Dmdw" orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quotlt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quotlt;orderInfos name=&quot;sections&quot; timestamp=&quot;1113334493908&quotlt;gUIDs>_yqm4kKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_zg2kEKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_1GGDkKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_35vP4KuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_5mtIAKuJEdmhFZtkg1nakg&lt;/gUIDslt;gUIDs>_7g3HkKuJEdmhFZtkg1nakg&lt;/gUIDslt;/orderInfoslt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection>                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                " suppressed="false" presentationName="Detail Requirements" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="detail_requirements,_0e1mIMlgEdmt3adZL5Dmdw" briefDescription="" id="_Nqwi8KeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-30T12:31:25" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Detail Use Cases and Scenarios" briefDescription="" id="_vWeHMCxSEdqjsdw1QLH_6Q" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Some &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use Case&lt;/a>s and Scenarios may need to be described in more detail to validate our&#xD;
    understanding of the requirement and to permit software development to begin. This does not imply that all&amp;nbsp;use&#xD;
    cases and scenarios&amp;nbsp;will be detailed prior to commencing implementation.&amp;nbsp;&amp;nbsp;Work with stakeholders to&#xD;
    detail only those that are prioritized for implementation in the next iteration or two (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>), or those that are deemed architecturally significant&#xD;
    (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/architecturally_significant_requirements,_HrZGIA4MEduibvKwrGxWxA.html&quot; guid=&quot;_HrZGIA4MEduibvKwrGxWxA&quot;>Concept: Architecturally Significant Requirements&lt;/a>.)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The level of detail captured will vary depending upon the needs of the project and the complexity of the use&#xD;
    case.&amp;nbsp; For a discussion of the different levels of detail that may be applicable see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html&quot; guid=&quot;_qq0GMAXkEduj_7BEUj1JfQ&quot;>Guideline: Use Case Formats&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Capture the use case&amp;nbsp;details in &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Artifact: Use Case&lt;/a>.&amp;nbsp; For additional information on detailing use cases and scenarios, see&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html&quot; guid=&quot;_4BJ_YCxSEdqjsdw1QLH_6Q&quot;>Guideline: Detail Use Cases and Scenarios&lt;/a>.&amp;nbsp; For assistance in assessing the&#xD;
    quality of your use cases see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/checklists/use_case,_0kNwINk1Edq2Q8qZoWbvGA.html&quot; guid=&quot;_0kNwINk1Edq2Q8qZoWbvGA&quot;>Checklist: Use Case&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Detail supporting requirements" briefDescription="" id="_B47VwCxTEdqjsdw1QLH_6Q" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Some&amp;nbsp;&lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot; guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting Requirements&lt;/a> may need to be clarified or described in more detail, new&#xD;
    requirements&amp;nbsp;may have been discovered as we detailed the use cases and scenarios, and new requirements may have&#xD;
    been submitted as &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html&quot; guid=&quot;_6jdvECb3Edqh1LYUOGRh2A&quot;>Change Requests&lt;/a>.&amp;nbsp;Work with stakeholders to capture, refine and validate those&#xD;
    requirements that will have an impact on near term work (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>) or are deemed architecturally significant (see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/architecturally_significant_requirements,_HrZGIA4MEduibvKwrGxWxA.html&quot; guid=&quot;_HrZGIA4MEduibvKwrGxWxA&quot;>Concept: Architecturally Significant Requirements&lt;/a>).&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Capture these requirements in&amp;nbsp;the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot; guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Artifact: Supporting Requirements&lt;/a>.&amp;nbsp; For additional guidance on detailing&#xD;
    supporting requirements see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q.html&quot; guid=&quot;_wr24gNcGEdqz_d2XWoVt6Q&quot;>Guideline: Supporting Requirements&lt;/a>.&amp;nbsp; For assistance in assessing the quality of&#xD;
    your supporting requirements see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/checklists/supporting_requirements,_Vael8CGMEdu3VKXZx45D3A.html&quot; guid=&quot;_Vael8CGMEdu3VKXZx45D3A&quot;>Checklist: Supporting Requirements&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Detail glossary terms" briefDescription="" id="_2389cOz2Edq2wJOsmRwmhg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Review the use case&amp;nbsp;flow of events. If information is exchanged, be specific about what is passed back and&#xD;
forth.&amp;nbsp; Work with stakeholders to ensure that you define newly discovered domain terms, or ambiguous&#xD;
terms&amp;nbsp;properly in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html&quot; guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a>.&#xD;
If your understanding of the domain has improved,&amp;nbsp;refine existing glossary terms.</Description>
            </Section>
            <Section name="Achieve concurrence" briefDescription="" id="_BYbboN-bEdqiM_wFaqLjNg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Conduct a review&amp;nbsp;of the&amp;nbsp;requirements (&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Artifact: Use Case&lt;/a> and &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot; guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Artifact: Supporting Requirements&lt;/a>)&amp;nbsp;with relevant&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholders&lt;/a> and the development team to ensure consistency with the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>, assess quality, and identify required changes. See&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html&quot; guid=&quot;_E-dPIL-GEdqb7N6KIeDL8Q&quot;>Guideline: Effective Requirement Reviews&lt;/a>&amp;nbsp;for more information.</Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    The purpose of this task is to describe one or more requirements&nbsp;in sufficient detail to validate understanding of
    the requirement, to ensure concurrence with stakeholders expectations, and to permit software development&nbsp;to
    begin.
</p>]]></Purpose>
          </Presentation>
          <Concept>_0Wh-sMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
          <Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
          <Concept>_VQ268O0KEdqHTdbLTmC5IQ</Concept>
          <Concept>_eYtQQO0KEdqHTdbLTmC5IQ</Concept>
          <Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
          <Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
          <Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
          <Guideline>_4BJ_YCxSEdqjsdw1QLH_6Q</Guideline>
          <Guideline>_E-dPIL-GEdqb7N6KIeDL8Q</Guideline>
          <Guideline>_1AOsMO0JEdqHTdbLTmC5IQ</Guideline>
          <Guideline>_6jXzYNcKEdqz_d2XWoVt6Q</Guideline>
          <Guideline>_qq0GMAXkEduj_7BEUj1JfQ</Guideline>
          <PerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_BVh9cL-CEdqb7N6KIeDL8Q</MandatoryInput>
          <MandatoryInput>_0WVxcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_Wn7HcNcEEdqz_d2XWoVt6Q</MandatoryInput>
          <MandatoryInput>_0VGbUMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_BVh9cL-CEdqb7N6KIeDL8Q</Output>
          <Output>_Wn7HcNcEEdqz_d2XWoVt6Q</Output>
          <Output>_0VGbUMlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="find_and_outline_actors_and_ucs" briefDescription="This guideline describes how to find and outline actors and use cases." id="_eyL0wCu-EdqSxKAVa9kmvA" orderingGuide="" suppressed="false" presentationName="Find and Outline Actors and Use Cases" variabilityType="na">
          <Presentation name="find_and_outline_actors_and_ucs,_eyL0wCu-EdqSxKAVa9kmvA" briefDescription="" id="-Rcm_MlViENAvFFyIe9V3dQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-23T10:31:13" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h4>
    Finding actors
</h4>
<p>
    Find the external entities with which the system under development must interact. Candidates include groups of users
    who will require help from the system to perform their tasks and execute the system's primary or secondary functions,
    as well as external hardware, software, and other systems.
</p>
<p>
    Define each candidate actor by naming it and writing a brief description. Includes the actor's area of responsibility
    and the goals that the actor will attempt to accomplish when using the system. Eliminate actor candidates who do not
    have any goals.
</p>
<p>
    These questions are useful in identifying actors:
</p>
<ul>
    <li>
        Who will supply, use, or remove information from the system?
    </li>
    <li>
        Who will use the system?
    </li>
    <li>
        Who is interested in a certain feature or service provided by the system?
    </li>
    <li>
        Who will support and maintain the system?
    </li>
    <li>
        What are the system's external resources?
    </li>
    <li>
        What other systems will need to interact with the system under development?
    </li>
</ul>
<p>
    Review the list of stakeholders that you captured in the Vision statement. Not all stakeholders will be actors
    (meaning, they will not all interact directly with the system under development), but this list of stakeholders is
    useful for identifying candidates for actors.
</p>
<h4>
    Finding use cases
</h4>
<p>
    The best way to find use cases is to consider what each actor requires of the system. For each actor, human or not,
    ask:
</p>
<ul>
    <li>
        What are the goals that the actor will attempt to accomplish with the system?
    </li>
    <li>
        What are the primary tasks that the actor wants the system to perform?
    </li>
    <li>
        Will the actor create, store, change, remove, or read data in the system?
    </li>
    <li>
        Will the actor need to inform the system about sudden external changes?
    </li>
    <li>
        Does the actor need to be informed about certain occurrences, such as unavailability of a network resource,&nbsp;in
        the system?
    </li>
    <li>
        Will the actor perform a system startup or shutdown?
    </li>
</ul>
<p>
    Understanding how&nbsp;the target&nbsp;organization works and how this information system might be incorporated into
    existing operations gives an idea of system's surroundings. That information may reveal other use case candidates.
</p>
<p>
    Give a unique name and brief description that clearly describes the goals for each use case. If the candidate use case
    does not have goals, ask yourself why it exists, and then either identify a goal or eliminate the use case.
</p>
<h4>
    Outlining Use Cases
</h4>
<p>
    Without going into details, write a first draft of the flow of events of the use cases identified as being of high
    priority. Initially, write a simple step-by-step description of the basic flow of the use case. The step-by-step
    description is a simple ordered list of interactions between the actor and the system. For example, the description of
    the basic flow of the Withdraw Cash use case of an automated teller machine (ATM) would be something like this:
</p>
<ol>
    <li>
        The&nbsp;customer inserts a bank card.
    </li>
    <li>
        The system validates the card and prompts the person to enter a personal identification number (PIN).
    </li>
    <li>
        The customer&nbsp;enters a PIN.
    </li>
    <li>
        The system validates the PIN and prompts the customer to select an action.
    </li>
    <li>
        The customer selects Withdraw Cash.
    </li>
    <li>
        The system prompts the customer to choose which account.
    </li>
    <li>
        The customer selects the checking account.
    </li>
    <li>
        The system prompts for an amount.
    </li>
    <li>
        The customer enters the amount to withdraw.
    </li>
    <li>
        The system validates the amount (assuming sufficient funds), and then issues cash and receipt.
    </li>
    <li>
        The customer takes the cash and receipt, and then retrieves the bank card.
    </li>
    <li>
        The use case ends.
    </li>
</ol>
<p>
    As you create this step-by-step description of the basic flow of events, you may discover alternative and exceptional
    flows. For example, what happens if the customer enters an invalid PIN? Record the name and a brief description of each
    alternate flow that you identified.
</p>
<h4>
    Representing relationships between actors and use cases
</h4>
<p>
    The relationship between actors and use cases should be captured, or documented&nbsp; There are several ways to do
    this. If you are using a use-case model on the project, you can create use-case diagrams to show how&nbsp;actors and
    use cases&nbsp;relate to each other.&nbsp; Refer to&nbsp;<a class="" href="./../../../openup_basic/guidances/guidelines/uc_model,_0VAUsMlgEdmt3adZL5Dmdw.html" guid="_0VAUsMlgEdmt3adZL5Dmdw">Guideline: Use-Case Model</a>&nbsp;for more information.
</p>
<p>
    If you are not using a use-case model for the project, make sure that each use case identifies the associated primary
    and secondary actors.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
          <Concept>_zGqO0MDpEduTGJ8i4u8TMw</Concept>
          <Concept>_2jyfUAhVEduRe8TeoBmuGg</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="detail_ucs_and_scenarios" briefDescription="This guideline provides help on detailing use cases and scenarios." id="_4BJ_YCxSEdqjsdw1QLH_6Q" orderingGuide="" suppressed="false" presentationName="Detail Use Cases and Scenarios" variabilityType="na">
          <Presentation name="detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q" briefDescription="" id="-78ko4CuOJERKJF9ZvwMUBQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-05T07:31:41" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h4>
    Most efficient way to write use cases
</h4>
<p>
    Because use cases model requirements, they are highly dynamic by nature. The more we examine a requirement, the more we
    learn, and the more things change. To further complicate the issue, changes to one use case can lead to changes in
    others. Therefore, we want a flexible, highly efficient method for writing use cases that eliminates unnecessary work
    and rewriting.
</p>
<p>
    An iterative, breadth-first approach, in which the use case is continuously evaluated before adding detail, is an
    effective way to write use cases. This breadth-first approach involves two aspects: writing the set of use cases and
    writing individual use cases.
</p>
<p>
    <strong>Writing sets of use cases:</strong> Use cases exist in sets, and the relationships between the various use
    cases and Actors&nbsp;are important. As you learn more about the Actors, you also learn more about the system's
    boundaries and transactions. Likewise, as you learn more about the system's transactions, you learn more about its
    Actors. Therefore, it is more efficient to write several use cases simultaneously than to write them sequentially. This
    way, you can identify and understand the effects of the various use cases upon each other as you write them, rather
    than as afterthoughts that require rewriting or elimination of previous work.
</p>
<p>
    <strong>Writing individual use cases.</strong> Similarly, it makes sense to write each individual use case iteratively.
    Starting with the main scenario, you can then identify various alternative and error flows that the use case might
    follow, then evaluate, rearrange or eliminate them, and then add the details of the surviving scenarios.
</p>
<p>
    The level of detail that you capture depends on a number of factors. See <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/use_case_formats,_qq0GMAXkEduj_7BEUj1JfQ.html"
    guid="_qq0GMAXkEduj_7BEUj1JfQ">Guideline: Use Case Formats</a> for guidance on selecting the correct format for your
    use cases.
</p>
<h4>
    Detail the flow of events of the main scenario
</h4>
<p>
    As a starting point, use the step-by-step description of the main scenario that you created during <a
    class="elementLinkWithType"
    href="./../../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html"
    guid="_P9cMUPV_EdmdHa9MmVPgqQ">Task: Find and Outline Requirements</a>. Then, gradually add details to this scenario,
    describing <strong>what</strong> the use case does, <strong>not how</strong> to solve problems internal to the system.
</p>
<p>
    A flow of events description explores:
</p>
<ul>
    <li>
        How and when the use case starts
    </li>
    <li>
        When the use case interacts with the Actors, and what data they exchange
    </li>
    <li>
        When the use case uses data stored in the system or stores data in the system
    </li>
    <li>
        How and when the use case ends
    </li>
</ul>
<p>
    It does not describe:
</p>
<ul>
    <li>
        The GUI
    </li>
    <li>
        Technical details of hardware or software
    </li>
    <li>
        Design issues
    </li>
</ul>
<h4>
    Identify alternate flows
</h4>
<p>
    A use case consists of a number of scenarios, each representing specific instances of the use case that correspond to
    specific inputs from the Actor or to specific conditions in the environment. Each scenario describes alternate ways
    that the system provides a behavior, or it may describe failure or exception cases.
</p>
<p>
    As you detail the main scenario, identify alternate flows by asking these questions:
</p>
<ul>
    <li>
        Are there different options available, depending on input from the Actor? (for example, if the Actor enters an
        invalid PIN number while accessing an ATM)
    </li>
    <li>
        What business rules may come into play? (for instance, the Actor requests more money from the ATM than is available
        in her account)
    </li>
    <li>
        What could go wrong? (such as no network connection available when required to perform a transaction)
    </li>
</ul>
<p>
    It is best to develop these scenarios iteratively, as well. Begin by identifying them. Examine each possible scenario
    to determine whether it is relevant, that it can actually happen, and that it is distinct from other scenarios.
    Eliminate redundant or unnecessary scenarios, and then start elaborating on the more important ones.
</p>
<h4>
    Structure the use case
</h4>
<p>
    It is useful to structure the use case according to scenarios. This helps both to simplify communication and
    maintenance and to permit the use cases to be implemented iteratively.
</p>
<p>
    In addition to structuring the use cases according to scenarios, it is often useful to structure the scenarios
    themselves into sub-flows. This provides an additional level of granularity for planning work and tracking progress.
    Unless a sub-flow involves only a minor part of the complete flow of events (which can be described in the body of the
    text), it is recommended that you describe each sub-flow in a separate section to the Flow of Events section. Sub-flows
    that should be in a separate section include these examples:
</p>
<ul>
    <li>
        Sub-flows that occupy a large segment of a given flow of events.
    </li>
    <li>
        Exceptional and alternate flows of events. This helps the use case's basic flow of events to stand out more
        clearly.
    </li>
    <li>
        Any sub-flow that can be executed at several intervals in the same flow of events.
    </li>
</ul>
<p>
    For more information, see the "Flow of Events - Structure"&nbsp;section in <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html"
    guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>.
</p>
<h4>
    Describe special requirements
</h4>
<p>
    You should also capture any requirements that are related to the use case, but are not taken into consideration in the
    flow of events of the use case. Such requirements are likely to be nonfunctional.
</p>
<p>
    Typically, nonfunctional requirements that refer to a specific use case are captured in the special requirements
    section of the use case. For more information, see the "Special Requirements" section in <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html"
    guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>.
</p>
<p>
    If there are nonfunctional requirements that apply to more than one use case, capture these in the <a
    class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html"
    guid="_BVh9cL-CEdqb7N6KIeDL8Q">Artifact: Supporting Requirements</a>. For more information on supporting requirements
    see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/supporting_requirements,_VXZ5wO0IEdqHTdbLTmC5IQ.html"
    guid="_VXZ5wO0IEdqHTdbLTmC5IQ">Concept: Supporting Requirements</a>.<br />
</p>
<h4>
    Describe preconditions and postconditions
</h4>
<p>
    A <strong>precondition</strong> on a use case explains the state that the system must be in for the use case to be able
    to start. Be careful in describing the system state. Avoid describing the detail of other, incidental activities that
    may already have taken place.
</p>
<p>
    A <strong>postcondition</strong> on a use case lists possible states that the system can be in at the end of the use
    case execution. The system must be in one of those states. A postcondition also states actions that the system performs
    at the end of the use case, regardless of what occurred in the use case. Post-Conditions may be categorized as Minimal
    Guarantees&nbsp;or Success Guarantees.&nbsp; A Minimal Guarantee represents a condition that will be true when the use
    case ends, regardless of how it terminates.&nbsp; A Success Guarantee represents a condition that will be true when the
    use case ends successfully, regardless of which path it took.
</p>
<p>
    Neither preconditions nor postconditions should be used to create a sequence of use cases. As a general rule, there
    should never be a case where you have to first perform one use case and then another to have a meaningful flow of
    events. If that is the case, correct the problem by reviewing the use cases.&nbsp;For more information, see the
    "Preconditions" and "Postconditions" sections in <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/use_case,_KudM0NcJEdqz_d2XWoVt6Q.html"
    guid="_KudM0NcJEdqz_d2XWoVt6Q">Concept: Use Case</a>.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_KudM0NcJEdqz_d2XWoVt6Q</Concept>
          <Concept>_VXZ5wO0IEdqHTdbLTmC5IQ</Concept>
          <Guideline>_qq0GMAXkEduj_7BEUj1JfQ</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="effective_req_reviews" briefDescription="This guideline discusses how to conduct reviews with relevant stakeholders to  ensure agreement, assess quality, and identify changes required." id="_E-dPIL-GEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Effective Requirement Reviews" variabilityType="na">
          <Presentation name="achieving_concurrence,_E-dPIL-GEdqb7N6KIeDL8Q" briefDescription="" id="-pNA0DbSdSoUqnjQIiOeHcQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-22T03:09:40" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    The cost of correcting errors increases exponentially throughout the development lifecycle <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[BOE88]</a>. Therefore, it is important to discover problems early enough to solve them
    quickly and inexpensively.
</p>
<p>
    Requirements reviews are intended to discover problems with the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html" guid="_0Wh-sMlgEdmt3adZL5Dmdw">Requirements</a>&nbsp;before you spend significant time and work in implementing the
    wrong thing. This is not to say that you must have a complete set of requirements before implementation, but be sure to
    review, internally and with stakeholders, those that are selected for implementation in the early iterations and those
    that will have a broad impact on the system (often called <a class="elementLink" href="./../../../openup_basic/guidances/concepts/architecturally_significant_requirements,_HrZGIA4MEduibvKwrGxWxA.html" guid="_HrZGIA4MEduibvKwrGxWxA">Architecturally Significant Requirements</a>) to ensure everyone's concurrence before
    investing significant effort in implementation.
</p>
<h4>
    Informal reviews
</h4>
<p>
    Requirements reviews can be informal, such as simply showing draft requirements to your colleagues or demonstrating a
    prototype.
</p>
<p>
    These informal reviews are excellent for getting the structure of the requirements correct and removing obvious
    mistakes. By keeping the review team small, it is easier to make rapid progress. However, informal reviews can miss
    important perspectives&nbsp;of&nbsp;critical stakeholders.
</p>
<h4>
    Formal reviews
</h4>
<p>
    Requirement reviews can be formal meetings. Start with careful preparation, so that you receive and organize comments
    before the meeting. The meeting itself should produce decisions on all review items. After the meeting, you must pursue
    the review actions to completion. If these actions involve a substantial amount of work or require a change to an
    artifact that is under configuration control, consider submitting <a class="elementLink" href="./../../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html" guid="_6jdvECb3Edqh1LYUOGRh2A">Change Requests</a> to prioritize and track the work. See&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html" guid="_0mwzEclgEdmt3adZL5Dmdw">Task: Request Change</a>&nbsp;and the associated&nbsp;<a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/change_requests,_fnZj0NVXEdqy9sbRhejO5Q.html" guid="_fnZj0NVXEdqy9sbRhejO5Q">Guideline: Change Requests</a>&nbsp;for more information on change requests.
</p>
<p>
    Formal reviews are more wide-ranging and expensive. They provide for more balanced reviews from multiple
    perspectives.&nbsp; However, formal reviews involve more people, which makes them more difficult to coordinate (thus
    the need for formality) and expensive in terms of work hours.
</p>
<h4>
    Two-tier reviews
</h4>
<p>
    One technique to get the best of both worlds is to use staged, or "two-tier", reviews&nbsp;<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[ADO03]</a>. The&nbsp;first tier is informal and performed by a smaller team, possibly
    many times. The second&nbsp;tier is more formal and performed by the complete group, perhaps only once.
</p>
<p>
    <strong>First-tier review:</strong> The authors of the requirements and the development team&nbsp;review the
    requirements during the first-tier reviews to ensure that they are&nbsp;unambiguous, complete&nbsp;and
    consistent.&nbsp; It is important to include testers and developers to ensure that the requirements are verifiable and
    feasible.&nbsp;These reviews&nbsp;determine whether the requirements are ready for the larger community to
    review.&nbsp; First-tier reviews may be informal, formal, or a combination of the two.
</p>
<p>
    <strong>Second-tier review:</strong> Involve the larger group during the higher-tier review to get more minds working
    on the problem and to achieve concurrence that the requirements are suitable for implementation and validation.&nbsp;
    It is best to have one formal requirement review at the Lifecycle Objective (LCO) milestone and, optionally, one at the
    Lifecycle Architecture (LCA) milestone if significant changes have occurred that introduce unacceptable risk.
</p>
<p>
    At both stages, these two resources will be helpful: <a class="elementLinkWithType" href="./../../../openup_basic/guidances/checklists/good_requirements,_jxn9EO0HEdqHTdbLTmC5IQ.html" guid="_jxn9EO0HEdqHTdbLTmC5IQ">Checklist: Qualities of Good Requirements</a>&nbsp;and <a class="elementLinkWithType" href="./../../../openup_basic/guidances/checklists/use_case,_0kNwINk1Edq2Q8qZoWbvGA.html" guid="_0kNwINk1Edq2Q8qZoWbvGA">Checklist: Use Case</a>
</p>
<p>
    Tiered reviews offer several benefits:
</p>
<ol>
    <li>
        Eliminate the noise caused by minor edits during the first-tier reviews, allowing subsequent reviews to focus on
        functionality
    </li>
    <li>
        Provide a professional look to the requirements, presenting both the requirements and their authors in the best
        possible light
    </li>
    <li>
        Safeguard the time of stakeholders who are reviewing the requirements, thus preventing "review burnout", or
        diminished effectiveness from overload and stress
    </li>
    <li>
        Provide the best opportunity for full, effective reviews.
    </li>
</ol>
<h4>
    Golden rules of reviewing
</h4>
<p>
    Follow these golden&nbsp;rules of reviewing <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a>:
</p>
<ol>
    <li>
        <strong>Encourage criticism:</strong> Remember that people are improving the requirements, not criticizing you.
        Even the harshest criticism often contains a grain of truth. Adopt the attitude that every suggestion is a gift.
    </li>
    <li>
        <strong>Choose your best reviewers:</strong> A few specific people make the best reviewers, time and again.
        Cultivate them.
    </li>
    <li>
        <strong>Allow adequate time:</strong> It's not over until you have agreed upon and made the corrections.<br />
        &nbsp;
    </li>
</ol>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="supporting_requirements" briefDescription="This guideline explains how to develop and use the supporting requirements specification." id="_wr24gNcGEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" variabilityType="na">
          <Presentation name="supporting_requirements,_wr24gNcGEdqz_d2XWoVt6Q" briefDescription="" id="-BdYFG4-dbPBGFzF9z6KGPA" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T06:43:46" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    There is a finite set of requirements to consider when it comes to gathering system-wide requirements, qualities, or
    constraints. Many of them are unfamiliar to stakeholders; therefore, they may find it difficult to answer questions
    related to topics such as availability, performance, scalability, or localization. You can use this guideline and the
    associated checklist <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/checklists/supporting_requirements,_Vael8CGMEdu3VKXZx45D3A.html"
    guid="_Vael8CGMEdu3VKXZx45D3A">Checklist: Supporting Requirements</a>&nbsp;when speaking to stakeholders to ensure that
    all topics are discussed. Make sure that stakeholders understand the costs of their selections and do not end up
    wanting everything that is on the list.
</p>
<h3>
    Functional
</h3>
<ul>
    <li>
        <p>
            <strong>Auditing:</strong> Is there a need to track who used the system and when they used it? State
            requirements for providing audit trails when running the system.
        </p>
    </li>
    <li>
        <p>
            <strong>Authentication:</strong> Will access to the system be controlled? State requirements for
            authentication.
        </p>
    </li>
    <li>
        <p>
            <strong>Licensing:</strong> Will the system or parts of the system be licensed? If open-source software has
            been used in the system, have all open-source agreements been respected? State requirements for acquiring,
            installing, tracking, and monitoring licenses.
        </p>
    </li>
    <li>
        <p>
            <strong>Printing:</strong> Will printing capability be required? State requirements for printing.
        </p>
    </li>
    <li>
        <p>
            <strong>Reporting:</strong> Is reporting capability required? State requirements for reporting.
        </p>
    </li>
    <li>
        <p>
            <strong>Scheduling:</strong> Will certain system actions need to be scheduled? State requirements for
            scheduling capability.
        </p>
    </li>
    <li>
        <p>
            <strong>Security:</strong> Will elements of the system or system data need to be secure? State requirements to
            protect access to certain resources or information.
        </p>
    </li>
</ul>
<h3>
    Usability
</h3>
<p>
    Usability requirements are critical to the success of any system. Unfortunately, usability requirements are often the
    most poorly specified requirements. Consider this common requirement: The system shall be easy to use. This doesn't
    help much, because it cannot be verified.
</p>
<p>
    While capturing usability requirements, it is a good idea to identify issues and concerns first, and then refine these
    into verifiable requirements later (see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/writing_good_requirements,_6jXzYNcKEdqz_d2XWoVt6Q.html"
    guid="_6jXzYNcKEdqz_d2XWoVt6Q">Guideline: Writing Good Requirements</a>). According to a traditional definition,
    usability consists of five factors:
</p>
<ul>
    <li>
        <p>
            <strong>Ease of learning:</strong> A user with a specified level of experience must be able to learn how to use
            the system in a specified amount of time.
        </p>
    </li>
    <li>
        <p>
            <strong>Task efficiency:</strong> A user should be able to complete a specified task in a specified time (or
            number of mouse clicks).
        </p>
    </li>
    <li>
        <p>
            <strong>Ease of remembering:</strong> A user should be able to remember how to accomplish specified tasks after
            not using the system for a specified period of time.
        </p>
    </li>
    <li>
        <p>
            <strong>Understandability:</strong> A user must be able to understand system prompts and messages and what the
            system does.
        </p>
    </li>
    <li>
        <p>
            <strong>Subjective satisfaction:</strong> A specified percentage of the user community must express
            satisfaction with using the system.
        </p>
    </li>
</ul>
<p>
    You may want to use the following method to identify and specify usability requirements:
</p>
<div style="MARGIN-LEFT: 2em">
    <ol>
        <li>
            Identify the key usability issues by looking at critical tasks, user profiles, system goals, and previous
            usability problems.
        </li>
        <li>
            Choose the appropriate style to express the requirements: 
            <ul>
                <li>
                    <strong>Performance style:</strong> Specify how fast users can learn various tasks and how fast they
                    can perform the tasks after training.
                </li>
                <li>
                    <strong>Defect style:</strong> Rather than measuring task times, identify usability defects and
                    specifies how frequently they may occur.
                </li>
                <li>
                    <strong>Guideline style:</strong> Specify the general appearance and response time of the user
                    interface by reference to an accepted and well-defined standard
                </li>
            </ul>
        </li>
        <li>
            Write the actual requirements, including performance criteria (see <a class="elementLinkWithType"
            href="./../../../openup_basic/guidances/guidelines/writing_good_requirements,_6jXzYNcKEdqz_d2XWoVt6Q.html"
            guid="_6jXzYNcKEdqz_d2XWoVt6Q">Guideline: Writing Good Requirements</a>&nbsp;for more information).
        </li>
    </ol>
</div>
<h3>
    Reliability
</h3>
<p>
    Reliability includes the system's ability to continue running under stress and adverse conditions. In the case of an
    application, reliability relates to the amount of time that the software is available and running as opposed to time
    unavailable. Specify reliability acceptance levels, as well as how they will be measured and evaluated. Describe
    reliability criteria in measurable terms. This is usually expressed as the allowable time between failures or the total
    allowable failure rate. Other important reliability considerations include:
</p>
<ul>
    <li>
        <p>
            <strong>Accuracy:</strong> Specify requirements for the precision (resolution) and the accuracy (by some known
            standard) that is required in any calculation performed or in system output.
        </p>
    </li>
    <li>
        <p>
            <strong>Availability:</strong> Specify requirements for the percentage of time the system is available for use,
            hours of use, maintenance access, and degraded-mode operations. Availability is typically specified in terms of
            the Mean Time Between Failures (MTBF).
        </p>
    </li>
    <li>
        <p>
            <strong>Recoverability:</strong> Specify requirements for recovery from failure. This is typically specified in
            terms of the Mean Time to Repair (MTTR).
        </p>
    </li>
    <li>
        <p>
            <strong>Frequency and severity of failures:</strong> Specify the maximum defect rate (typically expressed as
            defects/KSLOC or defects/function-point) and severity of failures. Severity&nbsp;may be categorized in terms of
            <strong>minor</strong>, <strong>significant</strong>, and <strong>critical</strong> defects. The requirements
            must define each of these terms unambiguously. For example, a <strong>critical</strong> defect could be defined
            as one that results in loss of data or complete inability to use certain functionality of the system.
        </p>
    </li>
</ul>
<h3>
    Performance
</h3>
<ul>
    <li>
        <p>
            <strong>Response times:</strong> Specify the amount of time available for the system to complete specified
            tasks and transactions (average, maximum). Use units of measurement. <em>Examples:</em>
        </p>
        <ul>
            <li>
                Any interface between a user and the system shall have a maximum response time of 2 seconds.
            </li>
            <li>
                The product shall download the new status parameters within 5 minutes of a change.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Throughput:</strong> Specify the capacity of the system to support a given flow of information (for
        example, transactions per second).<br />
    </li>
    <li>
        <strong>Capacity:</strong> Specify on the volumes that the product must be able to deal with and the numbers of
        data stored by the product. Make sure that the requirement description is quantified, and thus can be tested. Use
        unit of measurement such as: the number of customers or transactions the system can accommodate, resource usage
        (memory, disk, . . . ) or degradation modes (what is the acceptable mode of operation when the system has been
        degraded in some manner) <em>Examples:</em> 
        <ul>
            <li>
                The product shall cater for 300 simultaneous users within the period from 9:00 AM to 11 AM.
            </li>
            <li>
                Maximum loading at other periods will be 150.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Start-up:</strong> The time for the system to start up.<br />
    </li>
    <li>
        <strong>Shut-down:</strong> The time for the system to shut down.
    </li>
</ul>
<h3>
    Supportability
</h3>
<ul>
    <li>
        <p>
            <strong>Adaptability:</strong> Are there any special requirements regarding adaptation of the software
            (including upgrading)? List requirements for the ease with which the system is adapted to new environments.
        </p>
    </li>
    <li>
        <p>
            <strong>Compatibility:</strong> Are there any requirements regarding this system and its compatibility with
            previous versions of this system or legacy systems that provide the same capability?
        </p>
    </li>
    <li>
        <p>
            <strong>Configurability:</strong> Will the product be configured after it has been deployed? In what way will
            the system be configured?
        </p>
    </li>
    <li>
        <p>
            <strong>Installation:</strong> State any special requirements regarding system installation
        </p>
    </li>
    <li>
        <strong>Level of Support:</strong> What is the level of support that the product requires? This is often done using
        a Help desk. If there are to be people who provide support for the product, is that support considered part of what
        you are providing to the customer? Are there any requirements for that support? You might also build support into
        the product itself, in which case this is the place to write those requirements. Consider the level of support that
        you anticipate providing and what forms it might take.<br />
    </li>
    <li>
        <strong>Maintainability:</strong> Are there any special requirements regarding system maintenance? What are the
        requirements for the intended release cycle for the product and the form that the release will take? Quantify the
        time necessary to make specified changes to the product. There may also be special requirements for
        maintainability, such as&nbsp;a requirement that&nbsp;the product must be able to be maintained by its end-users or
        developers who are not your development team. This has an effect on the way that the product is developed, and
        there may be additional requirements for documentation or training. Describe the type of maintenance and the amount
        of effort required. <em>Examples:</em><br />
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            <li>
                A new weather station must be able to be added to the system overnight.
            </li>
            <li>
                The maintenance releases will be offered to end-users once a year.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Scalability:</strong> What volumes of users and data will the system support? This specifies the expected
        increases in size that the product must be able to handle As businesses grow (or are expected to grow), the
        software products must increase their capacities to cope with the new volumes. This may be expressed as a profile
        over time.<br />
    </li>
    <li>
        <strong>Testability:</strong> Are there any special requirements regarding the testability of the system?
    </li>
</ul>
<h3>
    Constraints (+)
</h3>
<ul>
    <li>
        <p>
            <strong>Design constraints:</strong> Are there any design decisions that have been mandated that the product
            must adhered to?
        </p>
    </li>
    <li>
        <p>
            <strong>Third-party components:</strong> Specify any mandated legacy, COTS, or open-source components to be
            used with the system.
        </p>
    </li>
    <li>
        <p>
            <strong>Implementation languages:</strong> Specify requirements on the implementation languages to be used
        </p>
    </li>
    <li>
        <p>
            <strong>Platform support:</strong> Specify requirements on the platforms that the system will support
        </p>
    </li>
    <li>
        <p>
            <strong>Resource limits:</strong> Specify requirements on the use of system resources, such as memory and hard
            disk space
        </p>
    </li>
    <li>
        <p>
            <strong>Physical Constraints:</strong> Specify requirements on the shape, size, and weight of the resulting
            hardware to house the system
        </p>
    </li>
</ul>
<h3>
    Interface Requirements (+)
</h3>
<p>
    Describe both the user interface and interfaces with external systems.
</p>
<h4>
    User interface
</h4>
<p>
    Describe requirements related to user interfaces that are to be implemented by the software. The intention of this
    section is to state the requirements, but not to describe the user interface itself, because interface design may
    overlap the requirements-gathering process. This is particularly true if you are using prototyping as part of your
    requirements gathering process. As you develop prototypes, it is important to capture the requirements that relate to
    the look and feel of the user interface. In other words, be sure that you understand your client’s intentions for the
    product’s look and feel. Record these as requirements, rather than merely using a prototype for approval.
</p>
<ul>
    <li>
        <p>
            <strong>Look and feel:</strong> A description of the aesthetic appearance and layout of the interface. Your
            client may have given you particular demands, such as style, colors, degree of interaction, and so on. This
            section captures the requirements for the interface, rather than the design for the interface. The motivation
            is to capture the expectations, the constraints, and the client’s demands for the interface before designing
            it. <em>Examples:</em>
        </p>
        <ul>
            <li>
                The product shall have the same layout as the district maps from the engineering department.
            </li>
            <li>
                The product shall use the company color.<br />
            </li>
        </ul>
    </li>
    <li>
        <strong>Layout and navigation requirements:</strong> Specify requirements on major screen areas and how they should
        be grouped together.<br />
    </li>
    <li>
        <strong>Consistency:</strong> Consistency in the user interface enables users to predict what will happen. This
        section states requirements on the use of mechanisms to be employed in the user interface. This applies both within
        the system, and with other systems and can be applied at different levels: navigation controls, screen areas sizes
        and shapes, placements for entering / presenting data, terminology<br />
    </li>
    <li>
        <strong>User personalization and customization requirements:</strong> Requirements on content that should
        automatically displayed to users or available based on user attributes. Sometimes users allowed to customize the
        content displayed or to personalize displayed content.
    </li>
</ul>
<h4>
    Interfaces to external systems or devices
</h4>
<ul>
    <li>
        <p>
            <strong>Software interfaces:</strong> Are there any external systems with which this system must interface? Are
            there any constraints on the nature of the interface between this system and any external system, such as the
            format of data passed between these systems? Do they use any particular protocol? Describe software interfaces
            with other components. These may be purchased components, components reused from another application, or
            components being developed for subsystems outside of the scope of the system under consideration, but with
            which this it must interact. For each system, consider both provided and required interfaces.
        </p>
    </li>
    <li>
        <p>
            <strong>Hardware interfaces:</strong> Define any hardware interfaces that are to be supported by the software,
            including logical structure, physical addresses, expected behavior, and so on.
        </p>
    </li>
    <li>
        <p>
            <strong>Communications interfaces:</strong> Describe any communications interfaces to other systems or devices,
            such as local area networks (LANs), remote serial devices, and so on.
        </p>
    </li>
</ul>
<h3>
    Business Rules (+)
</h3>
<p>
    Besides technical requirements, also consider the particular business domain in which the system needs to fit.
</p>
<p>
    Business rules or policies that the system must conform to may constrain system functionality. Business rules are
    referred to by system use cases and can be in the form of decision tables, computation rules, decision trees,
    algorithms, and so forth. Describing the rules in the flows of the use cases usually clutters the use-case
    specifications. Therefore, they are normally captured in separate artifacts or as annexes related to the use-case
    specifications. In many cases, a business rule applies to more then one use case. Shared business rules should be
    stored in a single repository, such as a supporting requirements document.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:TermDefinition" name="requirement" briefDescription="" id="_feKVQLULEdqI644ssJaKYg" orderingGuide="" suppressed="false" presentationName="Requirements" variabilityType="na">
          <Presentation name="new_term_definition,_feKVQLULEdqI644ssJaKYg" briefDescription="" id="-0sCBiohjw_wBDKk0WEeDJQ" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2006-12-22T03:19:44" changeDescription="Added term definition for &quot;requirement&quot;." version="0.2">
            <MainDescription><![CDATA[<ol>
    <li>
        A capability needed by the user to solve a problem [in order to] to achieve an objective
    </li>
    <li>
        A capability that must be met or possessed by a system or system component to satisfy a contract, standard,
        specification, or other formally imposed documentation <a class="elementLinkWithUserText"
        href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
        guid="_9ToeIB83Edqsvps02rpOOg">[THA00]</a><br />
    </li>
</ol>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="writing_good_requirements" briefDescription="This guideline describes ways of writing good requirements." id="_6jXzYNcKEdqz_d2XWoVt6Q" orderingGuide="" suppressed="false" presentationName="Writing Good Requirements" variabilityType="na">
          <Presentation name="new_guideline,_6jXzYNcKEdqz_d2XWoVt6Q" briefDescription="" id="-AJQLv2ldVv5KN9eUbdQe_g" orderingGuide="" suppressed="false" authors="" changeDate="2006-05-02T12:33:21" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<P>To write a good requirement, 
  you must write it<strong> </strong>as a complete sentence, with a subject 
  and a predicate (usually a verb). The subject&nbsp;is 
  an Actor, a stakeholder, the system under development, or a design entity that 
  is related to the requirement. The predicate specifies a condition, action, 
  or intended result that is done for, by, with, or to the subject.</P>
<P>Consistent use of the verb <strong>to be </strong>solidifies 
  the link between the subject and the predicate.<strong> 
  </strong>Thus, you can analyze a requirement from 
  a grammatical point of view. </P>
<P>Beware of lists, bullets, and words such as <strong>all</strong>, <strong>every</strong>and <strong>some</strong>.  For example:<strong> </strong></P>
<blockquote> 
  <p>The order entry clerk must<strong> </strong>be 
    able to complete 10 customer orders in less than two hours.</p>
</blockquote>
<P>This requirement has a subject (the order entry clerk, who<strong> 
  </strong>is an Actor), a specific and measurable 
   end state (10 customer orders completed), and a performance criterion 
  (in less than two hours).</P>
<P>Follow these simple guidelines<strong> </strong> 
  in writing any requirement. For consistency, these examples 
  are all in the context of an aircraft. [[WAS: is used throughout.]] <a class=elementlinkwithusertext href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a> 
</P>
<ul>
  <li>Define one requirement at a time. 
    <blockquote> 
      <p>The pilot shall be able to control the aircraft's angle of climb with 
        one hand.</p>
    </blockquote>
  </li>
</ul>
<blockquote> 
  <blockquote> 
    <p> The pilot shall be able to feel the angle of climb from the climb control.</p>
  </blockquote>
</blockquote>
<ul>
  <li>Avoid conjunctions (and, or) that make multiple requirements. </li>
</ul>
<blockquote> 
  <blockquote> 
    <p>The navigator shall be able to view the aircraft's position relative to 
      the route's radio beacons. </p>
    <p>The navigator shall be able to view the aircraft's position as 
      estimated by inertial guidance.</p>
  </blockquote>
</blockquote>
<ul>
  <li>Avoid let-out clauses or words that imply options 
    or exceptions (unless, except, if necessary, but). </li>
  <blockquote> 
    <p>The design  shall provide a rear-facing seat 
      for each cabin crew member.</p>
  </blockquote>
  <li>Use simple, direct sentences. </li>
</ul>
<ul>
  <blockquote> 
    <p>The pilot shall be able to see<strong> </strong>the 
      airspeed indicator.</p>
  </blockquote>
  <li>Use a limited (500-word) vocabulary, especially if your audience is international. 
    <blockquote> 
      <p>The airline shall be able to convert the 
        aircraft from business to holiday charter use in less than 12 hours </p>
    </blockquote>
  </li>
  <blockquote> 
    <p><strong>Note: </strong>There is no need to use words such 
      as <strong> reconfigured. </strong></p>
  </blockquote>
  <li>Identify the type of user who needs each requirement. 
  </li>
</ul>
<ul>
  <blockquote> 
    <p>The navigator shall be able to...</p>
  </blockquote>
  <li>Focus on stating what result you will provide<strong> 
    </strong> for that type of user. </li>
</ul>
<ul>
  <blockquote> 
    <p>...view storm clouds by radar...</p>
  </blockquote>
  <li>Define verifiable criteria 
    <blockquote> 
      <p> ...at least 100 miles ahead.</p>
    </blockquote>
  </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Checklist" name="use_case" briefDescription="This checklist provides questions to verify that use cases are described in a consistent and complete manner." id="_0kNwINk1Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false" presentationName="Use Case" variabilityType="replaces">
          <Presentation name="use_case,_0Vk8cMlgEdmt3adZL5Dmdw" briefDescription="" id="-T2IeqdOunweffIDgL-aM0w" orderingGuide="" suppressed="false" authors="Paul Bramble" changeDate="2006-05-01T07:13:56" changeDescription="" version="0.1">
            <Copyright>_uuunoPsDEdmyhNQr5STrZQ</Copyright>
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Is the use-case name meaningful and un-ambiguous?" briefDescription="" id="_663wMNk1Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Does the use case have a unique name?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the name a verb + noun phrase (for example, Withdraw Cash)?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the name accurately&amp;nbsp;summarize the&amp;nbsp;main goal&amp;nbsp;of the use case?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the name &quot;actor independent&quot;?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Does the brief description clearly describe the primary goal of the use case?" briefDescription="" id="_ZTA8QJznEduBcbjYtLtItQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Is it clear from the brief description what the main purpose of the use case is?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the &quot;observable result of value&quot; obvious?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Are associated actors and information exchanged clearly defined?" briefDescription="" id="_4wJRgJznEduBcbjYtLtItQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Is the use case associated with one or more actors?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the primary, or initiating actor, defined?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is it clear who wishes to perform the use case?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is all information exchanged between the actor(s) and the system clearly specified?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If a &quot;time&quot; actor is used, are you sure you did not miss an important actor and associated use cases (such as&#xD;
    administrative or maintenance personnel that define schedule events)?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Are the pre-conditions specified?" briefDescription="" id="_Qys_INk2Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Does each pre-condition represent a tangible&amp;nbsp;state&amp;nbsp;of&amp;nbsp;the system (for example, the Withdraw Cash use&#xD;
    case for an automated teller machine has a precondition that the user has an account)?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Are the Basic Flow and Alternate Flows complete, correct and consistent?" briefDescription="" id="_q3qV0Nk2Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Is it clear how the use case is started?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the triggering event clearly described?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the flow have a definite ending?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does&amp;nbsp;each step in the scenario contain&amp;nbsp;the same level of abstraction?&amp;nbsp;&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each step in the scenario describe something that can actually happen and that the system can reasonably detect?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each step make&amp;nbsp;progress towards the goal?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are there any missing steps? Is it clear how to go from one step to the next? Does the sequence of communication&#xD;
    between the actors and the use case conform to the user's expectations?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each step describe how the step helps the actor achieve their goal?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is each step technology independent? Is it free of technical details, and design decisions?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the steps correctly numbered?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each alternate flow is the condition(s) for initiation of the flow clearly defined?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For each alternate flow is it clear how the use case ends or where in the basic flow that the use case resumes?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Are the post-conditions specified?" briefDescription="" id="_dnLXMNk2Edq2Q8qZoWbvGA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    If &quot;Minimal Guarantees&quot; are present, do they always happen when the use case completes, regardless of success? (A&#xD;
    Minimal Guarantee represents&amp;nbsp;a condition&amp;nbsp;that will be true when the use case ends, regardless of how it&#xD;
    terminates.)&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If &quot;Success Guarantees&quot; are present, do they always happen when the use case completes successfully? (A Success&#xD;
    Guarantee represents a condition that will be true when the use case ends successfully, regardless of which path it&#xD;
    takes.)&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Are applicable non-functional requirements captured?" briefDescription="" id="_vkbMAJzrEduBcbjYtLtItQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Are non-functional requirements (such as performance criteria) that are&amp;nbsp;applicable to the&amp;nbsp;use case captured&#xD;
    in the use case?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are these non-functional requirements applicable to many use cases?&amp;nbsp; It they are, consider capturing them in the&#xD;
    supporting requirements specification to simplify maintenance.&#xD;
&lt;/p></Description>
            </Section>
          </Presentation>
          <Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="requirement_pitfalls" briefDescription="This guideline describes common pitfalls to avoid in defining and writing requirements. In some cases these are the inverse of the guidelines for writing good requirements, however, by showing examples of what NOT to do makes the explanation of what TO DO clearer." id="_1AOsMO0JEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" presentationName="Requirement Pitfalls" variabilityType="na">
          <Presentation name="requirement_pitfalls_1,_1AOsMO0JEdqHTdbLTmC5IQ" briefDescription="" id="-Q72-dNdHnZ93aRXAB_d34A" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2006-09-27T07:14:43" changeDescription="" version="0.2">
            <MainDescription><![CDATA[<p>
    Explanations and examples follow for each of the following common pitfalls to avoid, in defining and writing
    requirements (for more information, see <a class="" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a>):
</p>
<ul>
    <li>
        Avoid ambiguity.
    </li>
    <li>
        Don't make multiple requirements.
    </li>
    <li>
        Never use let-out or escape words.
    </li>
    <li>
        Don't ramble.
    </li>
    <li>
        Resist designing the system.
    </li>
    <li>
        Avoid mixing different kinds of requirements.
    </li>
    <li>
        Do not speculate.
    </li>
    <li>
        Do not use vague, undefined terms.
    </li>
    <li>
        Do not express possibilities.
    </li>
    <li>
        Avoid wishful thinking.
    </li>
</ul>
<h4>
    Avoid ambiguity
</h4>
<p>
    Avoidance of ambiguity is one of the subtlest and most difficult issues in writing requirements. Try to write as
    clearly and explicitly as possible. Be specific. Remember, though, that if you carry this too far, the text becomes
    dull and unreadable, which makes it difficult for other people to review. Although this guideline emphasizes
    structured, written expression of requirements, informal text, diagrams, conversations, and phone calls are excellent
    ways of removing ambiguity.
</p>
<p>
    Some constructions (such as the use of or and unless in requirements) allow different groups of readers to understand
    different things from the same wording. Developers could use this technique deliberately, so as to postpone, until too
    late, any possibility of the customer's asking for what was truly wanted. This is dangerous and could easily backfire.
</p>
<p>
    The only approach that works is for developers to make requirements as clear as possible, and for all stakeholders to
    co-operate. In the long run, project success is in everybody's interest.
</p>
<p>
    Dangerous ambiguities can be caused by the word <strong>or</strong> and also by many more-subtle errors.
</p>
<h5>
    Example
</h5>
<p>
    <em>The same subsystem shall also be able to generate a visible or audible caution/warning signal for the attention of
    the co-pilot or navigator.</em>
</p>
<p>
    Which subsystem? Is the signal to be visible, audible, or both? Is it both caution and warning, just caution, or just
    warning? Is it for both the co-pilot and the navigator, or just one of them? If just one of them, which one and under
    what conditions?
</p>
<h4>
    Don't make multiple requirements
</h4>
<p>
    Requirements which contain conjunctions (words that join independent clauses together) are dangerous. Problems arise
    when readers try to figure out which part applies, especially if the different clauses seem to conflict, or if the
    individual parts apply separately. Multiple requirements also make verification more complex.
</p>
<p>
    Dangerous conjunctions include: and, or, but
</p>
<h5>
    Example
</h5>
<p>
    <em>The battery low warning lamp shall light up when the voltage drops below 3.6 Volts, and the current workspace or
    input data shall be saved.</em>
</p>
<p>
    Should the battery low warning lamp light up when the voltage drops and the workspace is saved? Should the battery low
    warning lamp light up and the workspace be saved when the voltage drops?
</p>
<h4>
    Never use let-out or escape words
</h4>
<p>
    Requirements that include options or exceptions are dangerous. They seem to ask for something definite, but at the last
    moment they back down and allow for other options. Problems arise when the requirements are to be tested, and someone
    has to decide what (if anything) could prove the requirement was met.
</p>
<p>
    Dangerous words that imply exceptions include: if, when, but, except, unless, although.
</p>
<h5>
    Examples
</h5>
<p>
    <em>The forward passenger doors shall open automatically when the aircraft has halted, except when the rear ramp is
    deployed.</em>
</p>
<p>
    <em>The fire alarm shall always be sounded when smoke is detected, unless the alarm is being tested or the engineer has
    suppressed the alarm.</em>
</p>
<p>
    The latter sentence is a truly dangerous requirement!
</p>
<h4>
    Don't ramble
</h4>
<p>
    Long rambling sentences, especially when combined with arcane language, references to unreachable documents, and other
    defects of writing, quickly lead to confusion and error.
</p>
<h5>
    Example
</h5>
<p>
    <em>Provided that the designated input signals from the specified devices are received in the correct order where the
    system is able to differentiate the designators, the output signal shall comply with the required framework of section
    3.1.5 to indicate the desired input state.</em>
</p>
<h4>
    Resist designing the system
</h4>
<p>
    Requirements should specify the design envelope without unnecessary constraints on a specific design. If we supply too
    much detail we start to design the system. Going too far is tempting for designers, especially when they come to their
    favorite bits.
</p>
<p>
    Danger signs include names of components, materials, software objects/procedures, and database fields.
</p>
<h5>
    Example
</h5>
<p>
    <em>The antenna shall be capable of receiving FM signals, using a copper core with nylon covering and a waterproof
    hardened rubber shield.</em>
</p>
<p>
    Specifying design rather than actual need increases the cost of systems by placing needless constraints on development
    and manufacture. Often knowing why is much better than knowing what.
</p>
<h4>
    Avoid mixing different kinds of requirements
</h4>
<p>
    The user requirements form a complete model of what users want. They need to be organized coherently to show gaps and
    overlaps. The same applies to system requirements, which form a complete functional model of the proposed system. A
    quick road to confusion is to mix up requirements for users, systems, and how the system should be designed, tested, or
    installed.
</p>
<p>
    Danger signs are any references to system, design, testing, or installation.
</p>
<h5>
    Example
</h5>
<p>
    <em>The user shall be able to view the currently selected channel number which shall be displayed in 14pt Swiss type on
    an LCD panel tested to Federal Regulation Standard 567-89 and mounted with shockproof rubber washers.</em>
</p>
<h4>
    Do not speculate
</h4>
<p>
    Requirements are part of a contract between customer and developer. There is no room for wish lists, meaning general
    terms about things that somebody probably wants.
</p>
<p>
    Danger signs include vagueness about which type of user is speaking, and generalization such as: usually, generally,
    often, normally, typically
</p>
<h5>
    Example
</h5>
<p>
    <em>Users normally require early indication of intrusion into the system.</em>
</p>
<h4>
    Do not use vague, undefined terms
</h4>
<p>
    Many words used informally to indicate system quality are too vague for use in requirements. Vague terms include, among
    others: user-friendly, versatile, flexible, approximately, as possible
</p>
<p>
    Requirements using these terms are unverifiable because there is no definite test to show whether the system has the
    indicated property.
</p>
<h5>
    Examples
</h5>
<p>
    <em>The print dialog shall be versatile and user-friendly.</em>
</p>
<p>
    <em>The OK status indicator lamp shall be illuminated as soon as possible after the system self-check is
    completed.</em>
</p>
<h4>
    Do not express possibilities
</h4>
<p>
    Suggestions that are not explicitly stated as requirements are invariably ignored by developers.
</p>
<p>
    "Possible options" are indicated with terms such as: may, might, should, ought, could, perhaps, probably
</p>
<h5>
    Example
</h5>
<p>
    <em>The reception subsystem probably ought to be powerful enough to receive a signal inside a steel-framed
    building.</em>
</p>
<h4>
    Avoid wishful thinking
</h4>
<p>
    Engineering is a real-world activity. No system or component is perfect. Wishful thinking means asking for the
    impossible.
</p>
<p>
    Wishful-thinking terms include: reliable, safe, handle all unexpected failures, please all users, run on all platforms,
    never fail, upgradeable to all future situations
</p>
<h5>
    Examples
</h5>
<p>
    <em>The gearbox shall be 100% safe in normal operation.</em>
</p>
<p>
    <em>The network shall handle all unexpected errors without crashing.</em>
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="requirement_attributes" briefDescription="Requirements attributes capture additional information, such as risk, planned iteration, source of requirement, about each requirement. This additional information is used to manage the project." id="_VQ268O0KEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" presentationName="Requirement Attributes" variabilityType="na">
          <Presentation name="requirement_attributes_1,_VQ268O0KEdqHTdbLTmC5IQ" briefDescription="" id="-fCBrf_5JlrmuKgyrCaKGOA" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2006-09-20T08:41:34" changeDescription="" version="0.2">
            <MainDescription><![CDATA[<p>
    Attributes are a very important source of requirements information. Just as every person has attributes (age, hair
    color, gender), each requirement has a source, a relative importance, and time it was created. Attributes do more than
    simply clarify a&nbsp;requirement.&nbsp; If created properly, they can yield significant information about the state of
    the system. Just as you can run a database query to find all men with brown hair over age 30, given our human example,
    you can run queries on the status of requirements to find&nbsp;all high-priority requirements from the customer in the
    last 30 days. <a class="" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[TEL06]</a>
</p>
<h4>
    Examples of attributes
</h4>
<p>
    Listed below is a partial list of some common attributes and a brief description of their meaning. Some attributes are
    best described as a number, date, Boolean (true or false) or a text field for entering free format comments. Other
    attributes can be expressed as lists. For instance, priority type is a list of high, medium, and low; Weekday is a list
    which includes Monday, Tuesday, and so on.
</p>
<p>
    <em>Source</em> - Person, document or other origin of a given requirement.&nbsp; This is&nbsp;useful&nbsp;for
    determining whom to call for questions or for grouping&nbsp;requirements according to the person making the demands.
</p>
<p>
    <em>Priority</em> - Statement of relative importance of the requirement, either to the system (mandatory, critical,
    optional) or to other requirements (high, medium, low). It is good to track the mandatory or high-priority
    items&nbsp;as an indication of how well the system will meet the greatest needs or for compliance-related metrics.
</p>
<p>
    <em>Assigned to</em> - Who in the organization is responsible for making sure the requirement is met (person's name or
    organizational name).
</p>
<p>
    <em>Comments</em> - Reviewer's or writer's comments on a requirement.
</p>
<p>
    <em>Difficulty</em> - An indication of the level of effort needed or how hard it will be to implement the requirement
    (high, medium, low).
</p>
<p>
    <em>Status</em> - Degree of completeness (completed, partial, not started).
</p>
<p>
    <em>Risk</em> - Confidence measure on the likelihood of meeting (or not meeting) a requirement. Could be high, medium,
    low or the integers one through ten.
</p>
<p>
    <em>Due By</em> - Date the requirement must be provided.
</p>
<p>
    <em>Method of verification</em> - Qualification type to be used to verify that a requirement has been met: analysis,
    demonstration, inspection, test, and walkthrough.
</p>
<p>
    <em>Level of Test</em> - Describes the verification lifecycle stage at which the requirement is determined to be met:
    unit test, component, system or product.
</p>
<p>
    <em>Subsystem Allocation</em> - Name of system or subsystem a requirement is to be assigned to (for instance, flight
    control module, wing assembly, passenger cabin).
</p>
<p>
    <em>Test Number</em> - Identification of a specific test or other method of verification.
</p>
<br />
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="traceability" briefDescription="Traceability is a term used to describe the establishment and maintenance of relationships  between artifacts, such as a requirement and a design class or a requirement and  a test case, so that you can track the completeness of work  &amp;lt;strong&amp;gt; &amp;lt;/strong&amp;gt;and assess the impact of changes." id="_eYtQQO0KEdqHTdbLTmC5IQ" orderingGuide="" suppressed="false" presentationName="Traceability" variabilityType="na">
          <Presentation name="traceability_1,_eYtQQO0KEdqHTdbLTmC5IQ" briefDescription="" id="-TksCtMgc0b4QqzwzniGvIw" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2006-05-02T12:37:44" changeDescription="Added concept in accordance with Feb 23, 2006 minutes of RM SIG meeting." version="0.1">
            <MainDescription><![CDATA[<p align="left"> Traceability is about understanding how high-level requirements 
  (objectives, goals, aims, aspirations, expectations, needs) are transformed 
  into low-level requirements, how they are implemented, and how they are verified. 
</p>
<p>
    Using traceability can provide the following benefits <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html#HUL05"
    guid="_9ToeIB83Edqsvps02rpOOg">[HUL05]</a>:
</p>
<ul>
    
  <li> <strong>Greater confidence in meeting objectives </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> Establishing traceability engenders greater reflection on how objectives 
    are satisfied.&nbsp; Traceability permits coverage analysis to ensure that 
    everything you have done everything that you agreed to do and only what you 
    agreed to do.</p>
</blockquote>
<ul>
    
  <li> <strong>Ability to assess the impact of change </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px"> 
  <p> Traceability permits various forms of impact analysis that can be used to 
    assess the impact of a proposed change on the cost, schedule, and technical 
    aspects of the project.</p>
</blockquote>
<ul>
    
  <li><strong> Improved accountability </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> Traceability provides great clarity about how work contributes to the 
    whole. </p>
</blockquote>
<ul>
  <li><strong> Ability to track progress </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> It is notoriously difficult to measure progress when all that you are doing 
    is creating and revising artifacts. Traceability processes allow precise measures 
    of progress, such as: Is there a design artifact for each requirement? Is 
    there a test case for each requirement?. </p>
</blockquote>
<ul>
    
  <li><strong> Ability to balance cost against benefit </strong></li>
</ul>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    
  <p> Relating product components to the requirements allows you to compare benefits 
    to costs. </p>
</blockquote>
<br dir="ltr" />
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="use_case_formats" briefDescription="This guideline describes different use case formats and associated levels of detail  that you may want to use, depending upon the nature  of the project." id="_qq0GMAXkEduj_7BEUj1JfQ" orderingGuide="" suppressed="false" presentationName="Use Case Formats" variabilityType="na">
          <Presentation name="new_guideline,_qq0GMAXkEduj_7BEUj1JfQ" briefDescription="" id="-pQrBSyxJHLLodLbS4R_Zdw" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-16T04:20:15" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3> Use Case Formats </h3>
<p> Use cases differ from project to project and person to person. A use case 
  that works in one situation may be totally unsuited for another. Different projects 
  have different needs. (See <a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[ADO04]</a> 
  for more information on use case formats.) </p>
<p>Some need rigorous documentation, including <strong>high-ceremony use cases</strong>, 
  which are formal, highly structured use cases. If the writers used a template, 
  then they filled out all or almost all of its fields for each use case. High-ceremony 
  use cases are best suited for large, extremely complex, safety-critical systems, 
  such as flight control systems, telephone switches, and so forth. They are also 
  used in development cultures that have high documentation standards. </p>
<p>Other projects may be more agile and less formal, benefiting from <strong>low-ceremony 
  use cases</strong>, which are informal, less rigidly structured use cases. If 
  the writers used a template, then they may have left many of the fields blank. 
  Low-ceremony use cases are best suited for smaller, less complex, less safety-critical 
  systems where most of the stakeholders have a strong background in the problem 
  domain. Sometimes, simple descriptions suffice, such as use case <strong>briefs</strong>. 
</p>
<p> As <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html" guid="_4BJ_YCxSEdqjsdw1QLH_6Q">Guideline: 
  Detail Use Cases and Scenarios</a> explains, it makes sense to write use cases 
  iteratively. Starting with the basic details, you can then identify the various 
  alternative and error paths that the use case might follow so that you can evaluate, 
  rearrange, or eliminate them, and then elaborate or fill in the details of the 
  courses that you intended to use. You can then write the 
  use cases in<strong> </strong> one or more of 
  the following formats, progressively, until you 
  reach the one with the level of detail required for a specific project: </p>
<ul>
  <li><a id="Actor-Goal-List" name="Actor-Goal_List"><strong>Actor-Goal list</strong></a>: 
    A format for the overview</li>
  <li> <a id="Briefs" name="Briefs"><strong>Briefs: </strong></a>A format for 
    writing summary use cases</li>
  <li> <a id="Improvisational Score" name="Improvisational Score"><strong>Improvisational 
    score: </strong></a>A format for writing less formal, low-ceremony use cases</li>
  <li> <a id="Symphonic Score" name="Symphonic Score"><strong>Symphonic score: 
    </strong></a>A format for writing more formal, high-ceremony use cases</li>
</ul>
<h4>Actor-Goal list </h4>
<p> <strong>Context: </strong>You have identified your actors and are trying to 
  identify use cases. </p>
<p> <strong>Problem:</strong> Developing a set of use cases in an ad hoc manner 
  can lead to unnecessary work, missing features, and feature creep. Weight 
  is one of the most important factors in space flight &#8212; so important that 
  the United States space agency, NASA, will not 
  allow anything on a spacecraft that isn’t absolutely critical to the flight. 
  If something literally isn’t worth its weight, then it doesn’t go. Likewise, 
  each use case adds cost to a system; therefore, you need to be sure to include 
  only those use cases that add some kind of value to your collection. </p>
<p> <strong>Forces:<em> </em></strong></p>
<ul>
  <li>
    <p><strong>Simply listing actors or listing goals is not informative enough, 
      but actors and goals together are informative.</strong> The classical approach 
      to writing use cases is to define a list of actors, then find use cases 
      for each. A variation on this theme is to itemize what the system must accomplish. 
      Yet, neither approach is adequate by itself. You need to know both who is 
      using the system and why they are using it. Otherwise, you introduce the 
      potential of either feature creep or missed features. At the least, a set 
      of use cases should describe this association. </p>
  </li>
  <li> 
    <p><strong> A quick overview of the entire project structure is sufficient 
      and necessary early in the use case development cycle.</strong> Ideally, 
      this overview should be as short as reasonably possible. It must contain 
      key information as to who requires each service and why they need it. Most 
      other information is not very useful at this stage of the project, because 
      it runs the risk of quickly becoming obsolete, as well as discouraging 
      out-of-the-box (innovative) thinking. An overview 
      helps the writers work through the entire set from a high-level view, expanding 
      some use cases, eliminating others, and combining still others into a more 
      logical grouping. </p>
  </li>
  <li> 
    <p><strong>You need to be able to expand each to a full use case on demand. 
      </strong>A <em>seedling</em><strong> </strong>use case forms the basis for 
      a full use case later in the iterative development cycle. Each seedling 
      use case needs to convey enough information so that someone, possibly other 
      than the outline writer, can easily go back and expand it into a more informative 
      use case. </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Build an Actor-Goal list, 
  which is a list of actors and their goals that 
  gives you an overview of entire project needs.<strong></strong></p>
<ul>
  <li>
    <p>Start by identifying the list of actors who will use the system, and then 
      identify at least one goal for each. Actors without goals indicate that 
      you haven’t adequately defined the system. The actor is beyond the system’s 
      scope, doesn’t belong in the system, or is part of another actor. </p>
  </li>
  <li>
    <p>Likewise, leftover goals can indicate that the system is too complex and 
      you're trying to accomplish too much, or that you haven’t adequately defined 
      all of the necessary actors. Carefully evaluate the leftovers to see if 
      you are just overlooking some detail, or whether they don’t belong in the 
      system. </p>
  </li>
  <li>
    <p>Remove unassociated actors and goals from the list. </p>
  </li>
</ul>
<p> Sometimes, this list may provide enough information to serve as use cases 
  for very small, high-communicating, low-ceremony project teams. Usually, the 
  actor goal list is the first step of identifying use cases. </p>
<h4>
    Briefs
</h4>
<p> <strong>Context: </strong>You have written an Actor-Goal list that outlines 
  your use cases. </p>
<p> <strong>Problem: </strong>Relying solely on an overview to capture the important 
  parts of a system’s behavior is dangerous, because it provides only high-level 
  information and can easily introduce ambiguity into a system. </p>
<p> <strong>Forces: </strong></p>
<ul>
  <li> 
    <p><strong>Although valuable, an Actor-Goal list does not clearly describe 
      a system.</strong> Usually, an outline doesn’t provide enough precision 
      to avoid ambiguity, which can wreak havoc on a project by leading to unnecessary 
      or erroneous development. Yet, an outline is helpful, because you still 
      want an overview that you can easily scan. Unfortunately, with the passing 
      of time or sheer volume of work, it’s too easy to forget details 
      that were obvious to you earlier.</p>
  </li>
  <li> 
    <p><strong>Iterative use case development requires creating placeholders for 
      expansion.</strong> To develop use cases iteratively, you start with sparse 
      use cases, reorganize them, and flesh them out as the system takes shape. 
      Ideally, these placeholders should be clear enough to: 1) unambiguously 
      describe their role in the system, and 2) allow someone to expand the use 
      case, even if they were not involved in writing them originally. </p>
  </li>
  <li> 
    <p><strong>Because outlines are general by nature, do not spend a lot of time, 
      energy, or money writing them. </strong>Outlines provide an inexpensive 
      method of documenting complex ideas in a manner that is easy to follow, 
      and they provide a mechanism for people outside of a project to understand 
      the high-level concepts. While it may take 
      some effort to think things through, you don’t want to waste resources describing 
      your ideas. The system is still in a state of flux at this point, and it 
      is too early to spend much time documenting its shifting details. </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Write two to four sentences per use case, capturing 
  key activities and key-extension handling. </p>
<ul>
  <li>
    <p> Expand the Actor-Goal list into<strong> briefs</strong> by writing a two- 
      to four-sentence use cases for each entry in the list. </p>
  </li>
  <li>
    <p>Briefly describe each use case’s main&nbsp;scenario and most important 
      extensions. </p>
  </li>
  <li>
    <p> Include enough information to eliminate ambiguity for at least the main&nbsp;scenario 
      of the system. </p>
  </li>
</ul>
<h4> Improvisational score</h4>
<p> <strong>Context: </strong>You are operating in well-known domains or in situations 
  where writing high-ceremony use cases would require all of your allotted development 
  time. </p>
<p> <strong>Problem:</strong> Writing formal, high-ceremony use cases when lesser 
  detail would suffice wastes time and resources. </p>
<p> Jazz is considered to be “musician’s music,” and jazz players are usually 
  highly skilled. Many jazz musicians prefer to improvise in small, highly skilled 
  teams, such as jazz quartets. To improvise effectively, the musicians must have 
  a thorough understanding of the conventions that form the given musical style, 
  including chord sequences, rhythmic patterns, and melodies. These conventions 
  provide a basic framework for the musicians to interact as a team, while still 
  allowing room for spontaneous creativity. </p>
<p> Likewise, use cases do not always need to be specified in excruciating detail. 
  A far-preferable strategy is simply to define the basic structure of what the 
  developers need to implement. The use cases act as placeholders that may be 
  elaborated later or simply improvised by the developer who implements the use 
  case. </p>
<p> <strong>Forces:</strong></p>
<ul>
  <li> 
    <p><strong>Briefs do not provide enough information. </strong>While useful, 
      use-case briefs describe only the more significant parts of behavior. Often, 
      developers need more information, especially when working in unfamiliar 
      domains or in the heart of the system, where the actor has many choices 
      to make and many paths to follow. Briefs do not describe all of the important 
      events that can happen, nor do they describe the details that go into making 
      choices along the way. </p>
  </li>
  <li> 
    <p><strong>Fully elaborated use cases can be too expensive, time consuming, 
      long to write, and boring to read. </strong>It 
      takes a lot of time and effort to write a formal, fully descriptive set 
      of use cases. Maintaining this set takes even longer. Often, a collection 
      of use cases reaches the point of diminishing returns long before it is 
      completely written, much less formalized. Readers often prefer shorter, 
      simpler use cases over long, complicated ones, because overly detailed use 
      cases can be overwhelming and, frankly speaking, quite boring. </p>
  </li>
  <li> 
    <p><strong>Many groups communicate well enough to 
      resolve ambiguities on the fly. </strong>While briefs may be insufficient, 
      stakeholders don’t always need everything to be spelled out for them. Developers 
      are usually capable of asking questions and filling out the necessary detail 
      from their own domain knowledge. Many people can work with a fair level 
      of ambiguity, and most organizations possess what is often referred to as 
      their “core competencies.” Mature organizations with strong domain knowledge 
      can survive, and even thrive, using more informal, less precise use cases. 
    </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Specify the use cases at 
  a low level of precision, allowing the developers to fill in the missing details 
  as necessary. The level of precision required depends on the background experiences 
  of the development team. Skip the less meaningful fields on the template, and 
  write the Main Scenario section as a simple paragraph. 
  Describe key-extension handling in the next paragraph 
  or two. Be prepared to resolve ambiguities and expand detail on the fly throughout 
  the project. </p>
<p> When you can rely upon open and frequent communication among the developers 
  and customer, write the use case with less detail and precision. The developers 
  can fill in the gaps by asking users or by using knowledge of the domain. However, 
  the developers need a thorough understanding of the business context to be able 
  to fill out the details themselves. Even the most knowledgeable developer will 
  still need access to the customers and users to get answers to questions and 
  clarify requirements. </p>
<p> Ideally, the project will be structured to enable effective communication 
  between the customer and the developers. Typically, this will involve having 
  a small, co-located team, with the developers having easy access to the users 
  throughout the project. The risk of misunderstanding can be resolved by frequent 
  incremental delivery if the development organization 
  has a relatively low-ceremony culture. </p>
<p> Jazz improvisation does not always work. It can become tedious and unpleasant 
  to listen to, even for the committed connoisseur. 
  For this reason, you also need feedback from the audience to determine the success 
  of the improvisations. Multi-level or two-tier reviews are critical to success 
  (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/guidelines/effective_req_reviews,_E-dPIL-GEdqb7N6KIeDL8Q.html" guid="_E-dPIL-GEdqb7N6KIeDL8Q">Guideline: 
  Effective Requirement Reviews</a>). </p>
<p> Improvisation may not always be suitable for the organizational culture, a 
  full <strong>symphonic score</strong> may be preferable in large, high-ceremony 
  teams (see section that follows). For instance, 
  I once watched a conductor toss his baton away in disgust when a pianist improvised 
  to such an extent that the orchestra could not follow the score. If the organization 
  deems the risk of improvising to be unacceptably high, then you can specify 
  the use cases with a higher level of detail and precision. You could start with 
  a strategy of specifying low levels of detail and precision, and then adapt 
  as necessary. </p>
<h4> Symphonic score </h4>
<p> <strong>Context: </strong>Writing structure for high-ceremony situations, 
  such as when there are many developers or when development teams are geographically 
  dispersed. </p>
<p> <strong>Problem: </strong>Writing low-ceremony use cases for high-ceremony 
  situations raises the risk of miscommunication to unacceptable levels. </p>
<p> A conductor’s version of a symphonic score contains the music for the entire 
  orchestra, as well as any accompanying vocals. The parts to be performed by 
  different voices or instruments are written on a separate staff, with all of 
  the staves aligned, one above another. This score specifies each note and its 
  associated timing in precise detail, so that the orchestra can perform a symphony 
  as the composer intended. </p>
<p> As with use cases, a score tells the musician what to play, not how to play 
  it. For most symphonies, the orchestra will not be able to meet the composer, 
  so instead, they must rely upon the director to interpret the 
  score and the composer's intentions. </p>
<p> <strong>Forces: </strong></p>
<ul>
  <li> 
    <p><strong>Certain development situations and cultures require high degrees 
      of formality. </strong>Some organizations operate in a highly formal manner, 
      thus require a highly formal process. While this formality may not 
      be desirable, it is the company's way of doing business, so things need 
      to be done that way. Other organizations are highly formal because they 
      do highly complex, life-critical work, where even small failures could have 
      disastrous consequences. For instance, no one would feel comfortable flying 
      on an airliner with an off-the-shelf, one-size-fits-all flight management 
      system. </p>
  </li>
  <li> 
    <p><strong>The cost of repairing miscommunication  
      is high. </strong>It is easy to write vague, inadequate use cases full of 
      ambiguity. Use cases can be too brief and ambiguous, or contain domain-specific 
      details that may be beyond the understanding of many stakeholders. Either 
      way, they provide an opportunity for a misunderstanding that leads to an 
      incorrect implementation. The cost of correcting these mistakes depends 
      on when they are discovered. <em>Earlier</em> is cheaper than<em> later</em>, 
      especially when later means customers finding the problem in the delivered 
      product. To avoid miscommunication, aim to write use cases that are general 
      enough for all of the stakeholders to follow, yet precise enough for the 
      developers to use when building the system. </p>
  </li>
  <li> 
    <p><strong>Developers need detail for implementing steps, business rules, 
      data fields, and, especially, for handling extensions. </strong>No one has 
      developed a program that can take a set of use cases as input, and churn 
      out a completed system. Even the best-case tools seem to require human intervention 
      to flesh out details and resolve ambiguities. Similarly, developers who 
      do not understand the business context or lack domain expertise may not 
      be able to fully comprehend a product. In an ideal project, software developers 
      would have access to the domain experts to ask questions, so they could 
      fill in any areas that may have been missed (see<em> Improvisational score</em>, 
      previously). But often, they do not ask. Therefore, they misunderstand the 
      more complex or ambiguous use cases in the set. To develop a system correctly, 
      a team needs either access to domain experts or additional information that 
      describe the steps, business rules, data fields, and extension handling 
      that they are implementing. </p>
  </li>
</ul>
<p> <strong>Solution: </strong>Specify your use cases with a high level of precision, 
  explicitly filling in all of the details in the use case template, while staying 
  technology-neutral. The level of precision required depends on the background 
  experiences of the development team. </p>
<p> Intuition may tell you that if some detail is good, then more must be better. 
  However, be careful about falling into the trap of over-specifying details. 
  It’s naive to believe that everyone who reads your use cases will be able to 
  understand them. Different people may interpret the use cases differently. Prepare 
  for this eventuality in your process, and avoid the tendency to over-specify 
  your use cases. If you try to specify a use case in too much detail, you may 
  fall into the classic analysis paralysis trap. </p>
<p> People are often tempted to address the communication problem by trying to 
  explain the business domain within the use cases. In a similar manner, they 
  include too much technical detail. Succumbing to these temptations by explaining 
  the business domain or including technical details is always a mistake, because 
  it complicates the process and obfuscates the requirements. The reader of the 
  use cases cannot distinguish the real requirements from the boring background 
  information, so will soon get distracted and lose interest. Instead, include 
  this information in an extra section. </p>
<p> If you are handing over the requirements to a development team whose members 
  are unfamiliar with the domain, then you will need an alternative strategy for 
  teaching them the domain knowledge. </p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:TermDefinition" name="feature" briefDescription="" id="_PgYREAeYEduWycDgioo5rg" orderingGuide="" suppressed="false" presentationName="Feature" variabilityType="na">
          <Presentation name="new_term_definition,_PgYREAeYEduWycDgioo5rg" briefDescription="" id="-qpBnpWqiD7gjT08LjTMbsQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-06-29T07:56:21" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[An externally observable service provided by the system that directly fulfills 
a <a class="elementLink"
href="./../../../openup_basic/guidances/termdefinitions/stakeholder_need,_WUiFcAeYEduWycDgioo5rg.html"
guid="_WUiFcAeYEduWycDgioo5rg">Stakeholder Need</a>&nbsp;.]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:TermDefinition" name="stakeholder_need" briefDescription="" id="_WUiFcAeYEduWycDgioo5rg" orderingGuide="" suppressed="false" presentationName="Stakeholder Need" variabilityType="na">
          <Presentation name="new_term_definition,_WUiFcAeYEduWycDgioo5rg" briefDescription="" id="-1pmL5bC27rtWB84PXAgq9Q" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[The business or operational problem (opportunity) that must be fulfilled to justify 
purchase or use of the system.]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Checklist" name="supporting_requirements" briefDescription="This check list is used to verify that all types of supporting requirements are considered." id="_Vael8CGMEdu3VKXZx45D3A" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" variabilityType="na">
          <Presentation name="new_checklist,_Vael8CGMEdu3VKXZx45D3A" briefDescription="" id="-kw2vYHKDkWv2tZrDMrBPNA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Have global Functional requirements that will be implemented in the next iteration been captured and validated?" briefDescription="" id="_kTZiACGMEdu3VKXZx45D3A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Are functional requirements that affect multiple Use Cases identified? For example, all Use Cases may be subject to&#xD;
        access control, audit trail, general responses to abnormal situations (overflow, communication facilities, error&#xD;
        handling and recovery) and so on.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For each of these requirements, are they behavioral and better captured in a common Use Case?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For each of these functions, is it clear how input and shared data generate output and shared data?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have Usability requirements that will be implemented in the next iteration been captured and validated?" briefDescription="" id="_-eJXoCGMEdu5QMD9IAHRNg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Have the efficiency and usability factors of user tasks been considered?&amp;nbsp;&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are the requirements specified in a way that is verifiable, including metrics and target values?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Have&amp;nbsp;novice as well as expert users been considered?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have Reliability requirements that will be implemented in the next iteration been captured and validated?" briefDescription="" id="_QCbtwCGNEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Have reliability requirements been specified as measurable requirements or prioritized design goals?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is error checking and recovery required?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are undesired events considered and their required responses specified?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are initial or special states considered (such as cold starts or abnormal termination)?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have Performance requirements that will be implemented in the next iteration been captured and validated?" briefDescription="" id="_e3pOgCGNEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Have the resource and performance margin requirements been stated (speed, response time, recovery time of various&#xD;
        software functions)?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have Supportability requirements that will be implemented in the next iteration been captured and validated?" briefDescription="" id="_l8CeUCGNEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Are there any requirements that will enhance the supportability or maintainability of the system being built?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have Constraints that must be considered in the next iteration been captured and validated?" briefDescription="" id="_wIttsCGNEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Are there any required standards in effect, implementation language, policies for database integrity, resource&#xD;
        limits, operating environment(s), etc.?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Has the use of inherited design or code or pre-selected tools been specified?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have External Interfaces that must be considered in the next iteration been identified?" briefDescription="" id="_5j6c0CGNEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Is it clear how the software interacts with people, the system's hardware, other hardware, and other software?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Have all critical data elements that cross system boundaries been identified for those scenarios that will be&#xD;
        implemented in the next iteration?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have Business Rules that will be implemented in the next iteration been captured and validated?" briefDescription="" id="_H052MCGOEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Are the rules relevant to the use cases identified (data validation rules, formulas, flow decisions)?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have applicable Standards and Regulatory Compliance requirements that must be considered in the next iteration been identified?" briefDescription="" id="_NBM78CGOEdubdKsr57an1g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Have all requirements derived from existing standard and regulations been specified?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="supporting_requirements_intent_req" briefDescription="" id="_oclg0DRXEdudA-StyUUwnw" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_BVh9cL-CEdqb7N6KIeDL8Q" variabilityType="contributes">
          <Presentation xsi:type="uma:ArtifactDescription" name=",_oclg0DRXEdudA-StyUUwnw" briefDescription="" id="-SUqkkwrs1D_5YXZls-3YBg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-14T03:34:35" changeDescription="" version="1.0.0" externalId="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;h4>&#xD;
    Recommendation: Use the Supporting Requirements Specification Template&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/templates/supporting_requirements_spec,_ItYXcNa9Edqrw4BYKyYKiA.html&quot; guid=&quot;_ItYXcNa9Edqrw4BYKyYKiA&quot;>Template: Supporting Requirements Specification&lt;/a>&amp;nbsp;provides a tool to capture,&#xD;
    structure, and organize the supporting requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Even in a small project, a requirements management tool, a database, or a spreadsheet, are recommended for prioritizing&#xD;
    and managing requirements. If Stakeholders are comfortable with accessing requirements directly from that tool or with&#xD;
    accessing a report automatically generated from the tool, you will not need a separate document.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Checklist>_Vael8CGMEdu3VKXZx45D3A</Checklist>
          <Checklist>_jxn9EO0HEdqHTdbLTmC5IQ</Checklist>
          <Guideline>_wr24gNcGEdqz_d2XWoVt6Q</Guideline>
          <Template>_ItYXcNa9Edqrw4BYKyYKiA</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="use_case_intent_req" briefDescription="" id="_qis78DRbEduFvfVCXiK3AA" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0VGbUMlgEdmt3adZL5Dmdw" variabilityType="contributes">
          <Presentation xsi:type="uma:ArtifactDescription" name=",_qis78DRbEduFvfVCXiK3AA" briefDescription="" id="-JcGDIeBIMM099mbWX5fXbA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-14T03:30:41" changeDescription="" version="1.0.0" externalId="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;p>&#xD;
    Some projects apply Use Cases informally to help discover requirements, documenting and maintaining these requirements&#xD;
    in another form such as user stories. How you tailor Use Cases may depend on project size, team experience, your tool&#xD;
    set, the customer relationship, and so forth. See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/detail_ucs_and_scenarios,_4BJ_YCxSEdqjsdw1QLH_6Q.html&quot; guid=&quot;_4BJ_YCxSEdqjsdw1QLH_6Q&quot;>Guideline: Detail Use Cases and Scenarios&lt;/a>&amp;nbsp;for guidance related to documenting&#xD;
    Use Cases.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Checklist>_0kNwINk1Edq2Q8qZoWbvGA</Checklist>
          <Template>_0cpNwMlgEdmt3adZL5Dmdw</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="vision_intent_req" briefDescription="" id="_6OAFQDRdEduFvfVCXiK3AA" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0WVxcMlgEdmt3adZL5Dmdw" variabilityType="contributes">
          <Template>_0cW54MlgEdmt3adZL5Dmdw</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Example" name="uc_model_evolve" briefDescription="This example illustrates how the use-case model evolves over time when using a &amp;quot;breadth before depth&amp;quot; approach to maximize value and minimize risk early in the lifecycle and to minimize re-work later." id="_t4QdAMNqEdu2IdAIaWZyAw" orderingGuide="" suppressed="false" presentationName="Evolution of the Use-Case Model" variabilityType="na">
          <Presentation name="new_example,_t4QdAMNqEdu2IdAIaWZyAw" briefDescription="" id="-JviMIao63C7w9C8W6iPJrw" orderingGuide="" suppressed="false" authors="Chris Sibbald" changeDate="2007-02-23T07:23:26" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    This example illustrates how the use-case model and associated use-case specification will evolve during the
    lifecycle.&nbsp; It shows the state of the use case model at two points in the lifecycle: early inception and towards
    the end of elaboration.&nbsp; The purpose is to illustrate how one would&nbsp;<a class="elementLink"
    href="./../../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html"
    guid="_P9cMUPV_EdmdHa9MmVPgqQ">Find and Outline Requirements</a> and&nbsp;<a class="elementLink"
    href="./../../../openup_basic/tasks/detail_requirements,_0e1mIMlgEdmt3adZL5Dmdw.html"
    guid="_0e1mIMlgEdmt3adZL5Dmdw">Detail Requirements</a> so as to maximize stakeholder value and minimize risk early in
    the project as well as to minimize re-work later.
</p>
<p>
    The example uses an Automated Teller Machine as the example system because it is familiar to most people.&nbsp; This
    familiarity&nbsp;simplifies understanding the principles without&nbsp;getting lost in domain specific terminology.
</p>
<h4>
    Early Inception
</h4>
<p>
    Assume you have just started on the project as the Analyst.&nbsp; You have identified the key stakeholders and met with
    them to discuss their needs.&nbsp; During your meetings, you identified a number of key actors,&nbsp;use cases and
    supporting requirements for the ATM system.&nbsp; You captured the use cases and actors, with names and brief
    descriptions only, in the use-case model.&nbsp; An example of this work is given in the document <a
    href="./resources/ATM%20UC%20Model%20Inception.doc" target="_blank">ATM UC Model Inception.doc</a>.
</p>
<p>
    Prior to committing significant time to detailing these use cases now, you recognize that a “breadth before depth”
    approach can save you valuable time and permit you to identify the highest value and/or highest risk items so you can
    concentrate on those first.
</p>
<p>
    You hold a brainstorming session with the stakeholders and outline the basic flow of each of the main use cases.&nbsp;
    As you are working through, you may identify some additional alternative flows.&nbsp; Fight the urge to “dive-in” to
    the details on these alternative flows at this point, simply list them and come back later when you have a better
    understanding of the “big picture”.
</p>
<p>
    Examples of the notes you took during this exercise are attached below.&nbsp;(Note the choice of font is intentional to
    illustrate that these are notes, not formal documents).
</p>
<p>
    <a href="./resources/Withdraw%20Cash%20Outline.doc" target="_blank">Withdraw Cash Outline.doc</a>
</p>
<p>
    <a href="./resources/Deposit%20Funds%20Outline.doc" target="_blank">Deposit Funds Outline.doc</a>
</p>
<p>
    <a href="./resources/Transfer%20Funds%20Outline.doc" target="_blank">Transfer Funds Outline.doc</a>
</p>
<p>
    Reviewing your notes, you recognize that there is some behavior that is common to most of the use cases, namely the
    steps required to validate the Bank Customer.&nbsp; Factoring this behavior out into an &lt;&lt;included&gt;&gt; use
    case will simplify communications, iteration planning,&nbsp;and maintenance.
</p>
<p>
    You update the use case model accordingly: <a href="./resources/ATM%20UC%20Model%20Elaboration.doc" target="_blank">ATM
    UC Model Elaboration.doc</a>.
</p>
<h4>
    Elaboration
</h4>
<p>
    With a better understanding of the system, you can now prioritize your effort to maximize value and minimize
    risk.&nbsp; You start by detailing the common behavior captured in the use case: Validate User.&nbsp; This use case
    captures key architectural requirements that will exercise a significant portion of the system (communications with the
    Bank, card reader interface, etc.).&nbsp; Implementing this one key scenario will go a long way to reducing risk.
</p>
<p>
    An example of the Validate User Specification is given below:<br />
    <br />
     <a href="./resources/Use%20Case%20Spec%20-%20Validate%20User.doc" target="_blank">Use Case Spec - Validate
    User.doc</a>
</p>
<p>
    Note that there may still be some un-answered questions, but that’s OK.&nbsp; Capture these directly in the use-case
    specification and get them answered (see Section 5.6 of the Validate User UC Specification, above for an example).
</p>
<p>
    Continuing with another architecturally significant thread, you detail the basic flow and some key alternate flows of
    the use case: Withdraw Cash.&nbsp; You know that if the team can implement this, much of the other functionality will
    be low risk.
</p>
<p>
    An example of the Withdraw Cash Specification is given below:
</p>
<p>
    <a href="./resources/Use%20Case%20Spec%20-%20Withdraw%20Cash.doc" target="_blank">Use Case Spec - Withdraw Cash.doc</a>
</p>
<h3>
    Summary
</h3>
<p>
    By following a breadth before depth approach to outlining and detailing use cases one can make better decisions on
    priorities.&nbsp; Start by identifying actors.&nbsp; Then for each actor, ask “What is the main purpose this actor
    would like to use the system?”.&nbsp; This will lead to the identification of the use cases.&nbsp; Capture the actors
    and use cases in the use-case model along with a brief description.
</p>
<p>
    Prioritize the use cases, and then draft the main scenario or basic flow.&nbsp; As you are working through this you may
    identify alternate flows (what can go wrong, what options are available, etc.).&nbsp; Capture these, along with a brief
    description.
</p>
<p>
    Review the use-case model and reprioritize and assess risk.&nbsp; For the high priority (based on value to the
    stakeholders) and/or high risk use cases detail the main scenario and the critical alternate flows.
</p>
<p>
    If you follow this approach, you will increase the likelihood of delivering value early, minimizing risk, and
    minimizing re-work.<br />
     &nbsp;
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Example" name="use_case_spec" briefDescription="This is an example of a completed use-case specification for the Withdraw Cash use case for an Automated Teller Machine." id="_JLOiIMNvEdu2IdAIaWZyAw" orderingGuide="" suppressed="false" presentationName="Use-Case Specification" variabilityType="na">
          <Presentation name=",_JLOiIMNvEdu2IdAIaWZyAw" briefDescription="" id="-qq-9Brh5oa6H3lsdp-m8mQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-23T07:55:56" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    The attached document provides an example of a use-case specification for an Automated Teller Machine (ATM).&nbsp; The
    ATM was selected as an example system since it is familiar to most people.&nbsp; This familiarity&nbsp;simplifies
    understanding the principles without&nbsp;getting lost in domain specific terminology.
</p>
<p>
    Example use-case specification: <a href="./resources/Use%20Case%20Spec%20-%20Withdraw%20Cash.doc" target="_blank">Use
    Case Spec - Withdraw Cash.doc</a>
</p>
<p>
    A companion example, <a class="elementLink"
    href="./../../../openup_basic/guidances/examples/uc_model_evolve,_t4QdAMNqEdu2IdAIaWZyAw.html"
    guid="_t4QdAMNqEdu2IdAIaWZyAw">Evolution of the Use-Case Model</a>, shows how the use-case model as a whole evolves
    over time.<br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Example>_t4QdAMNqEdu2IdAIaWZyAw</Example>
        </ContentElement>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ContentPackage" name="test" briefDescription="Portion of testing discipline that relates to Intent." id="_IIPZQDRjEduU7vV49F9N0A" orderingGuide="" suppressed="false" global="false">
        <ContentElement xsi:type="uma:Task" name="create_test_cases" briefDescription="Develop the test cases and test data for the requirements to be tested." id="_0iwc0clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Create Test Cases" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="create_test_cases,_0iwc0clgEdmt3adZL5Dmdw" briefDescription="" id="_NrVKsKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-08T12:38:57" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Review the requirements to be tested" briefDescription="" id="_IJFSsKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Work with&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Role: Analyst&lt;/a> and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0YDosMlgEdmt3adZL5Dmdw&quot;>Role:&#xD;
    Developer&lt;/a>&amp;nbsp;to identify which use-case scenarios need new or additional test cases. Review the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0aQBEslgEdmt3adZL5Dmdw&quot;>Artifact: Iteration Plan&lt;/a>&amp;nbsp;to ensure you understand the scope of development for&#xD;
    the current iteration.&lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify relevant Test Cases" briefDescription="" id="_aDe_ILGcEdubqf8m_Zrvvg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Identify paths through the use-case scenario as unique test conditions.&amp;nbsp; Consider alternative or exception paths&#xD;
    from both a positive and negative perspective.&amp;nbsp;&amp;nbsp;Review the test ideas list for patterns of test cases that&#xD;
    apply to the use-case scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Discuss the requirement with the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role:&#xD;
    Stakeholder&lt;/a> to identify other conditions of satisfaction for the requirement.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    List the test cases with a unique name that identifies the condition they evaluate or their expected result.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Outline the Test Cases" briefDescription="" id="_LpbM8KuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    For each test case, write a brief description with an expected result.&amp;nbsp; Ensure that a casual reader can clearly&#xD;
    understand the difference between test cases.&amp;nbsp; Note the logical pre-conditions and post-conditions that apply to&#xD;
    each test case. Optionally, outline steps for the test case.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Verify that test cases meet the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/checklists/test_case,_0Zxf8MlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0Zxf8MlgEdmt3adZL5Dmdw&quot;>Checklist: Test Case&lt;/a>&amp;nbsp;guidelines.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information on the test case, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/templates/test_case,_0dT8IMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0dT8IMlgEdmt3adZL5Dmdw&quot;>Template: Test Case&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify test data needs" briefDescription="" id="_NK18YKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Review each test case and note where data input or output might be required. Identify the type, quantity, and&#xD;
    uniqueness of the required data, and add these observations to the test case. Focus on articulating the data needed and&#xD;
    not on creating specific data.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For more information on test data selection, see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/checklists/test_case,_0Zxf8MlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0Zxf8MlgEdmt3adZL5Dmdw&quot;>Checklist: Test Case&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Share and evaluate the Test Cases" briefDescription="" id="_Ok_mMKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Walk through the test cases with the&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Role:&#xD;
    Analyst&lt;/a>&amp;nbsp;and&amp;nbsp;&lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0YDosMlgEdmt3adZL5Dmdw&quot;>Role:&#xD;
    Developer&lt;/a>&amp;nbsp;responsible for the related&amp;nbsp;use-case scenario.&amp;nbsp;&amp;nbsp;Ideally, the &lt;a&#xD;
    class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;&#xD;
    guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role: Stakeholder&lt;/a>&amp;nbsp;also participates.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Ask the participants to agree that if &lt;em>these test cases pass&lt;/em>, they will consider these requirements&#xD;
    implemented.&amp;nbsp; Elicit additional test ideas from the &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Role: Analyst&lt;/a>&#xD;
    and the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;&#xD;
    guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role: Stakeholder&lt;/a> to ensure you understand the expected behavior of the use-case&#xD;
    scenario.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    During the walkthrough, ensure that:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot;&#xD;
        guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Artifact: Use Case&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementLinkWithType&quot;&#xD;
        href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;&#xD;
        guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Artifact: Supporting Requirements&lt;/a>&amp;nbsp;planned for the current iteration have&#xD;
        test cases.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        All the participants agree with the expected results of the test cases.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        There are no&amp;nbsp;&lt;em>other&lt;/em> conditions of satisfaction for the requirement being tested, which indicates&#xD;
        either a missing test case or a missing requirement.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Optionally, capture new patterns of test cases&amp;nbsp;in&amp;nbsp;the test ideas list (see &lt;a class=&quot;elementLinkWithType&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/concepts/test_ideas_list,_0jnYcMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0jnYcMlgEdmt3adZL5Dmdw&quot;>Concept: Test Ideas List&lt;/a>).&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    To achieve a shared understanding of the specific conditions that the solution must meet.
</p>]]></Purpose>
          </Presentation>
          <Concept>_0jnYcMlgEdmt3adZL5Dmdw</Concept>
          <PerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0VGbUMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0ZS-0MlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0ZS-0MlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_BVh9cL-CEdqb7N6KIeDL8Q</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="test_ideas" briefDescription="A list of test ideas sorted in decreasing order of importance and associated with specific testing strategies used to create executable tests." id="_0jnYcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Ideas" variabilityType="na">
          <Presentation name="test_ideas,_0jnYcMlgEdmt3adZL5Dmdw" briefDescription="" id="_uqL2gMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-07-21T12:10:39" changeDescription="" version="">
            <MainDescription><![CDATA[<p>
    <strong>Test Ideas List</strong> - A list of brief statements identifying tests that are potentially useful to conduct.
</p>
<p>
    <strong>Test Ideas Catalog</strong> - A catalog of common faults and mistakes done when developing software.
</p>
<ul>
    <li>
        Test Ideas will describe any of the elements of an executable test.&nbsp;
    </li>
    <li>
        Test ideas ensure the important ideas are not forgotten and are detailed later in test cases.&nbsp;&nbsp;
    </li>
    <li>
        Test Ideas are to be captured at a less-specific level in an intermediate form.
    </li>
    <li>
        Test ideas are more reviewable and understandable then complete tests.&nbsp; Making the reasoning behind the test
        idea clearer.&nbsp;
    </li>
    <li>
        Test ideas support more powerful test, by not constraining the tester.&nbsp; Making it easier to create tests that
        validate more then just the defined requirements.
    </li>
    <li>
        Test Ideas are often based on explicit and implicit fault modules, to include but not limited to Booleans,
        boundaries and method calls.&nbsp; Test Ideas Lists will contain test ideas from many faults models derived for one
        or many work products.
    </li>
</ul>
<p>
    Creating test ideas before testing for review and inspection of design work products assists in discovering design or
    analysis errors.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="types_of_test" briefDescription="Testing is applied to different types of targets, in different stages or levels of work effort. This Concept introduces various types of test." id="_0aJ6cMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Types of Test" variabilityType="na">
          <Presentation name="types_of_test,_0aJ6cMlgEdmt3adZL5Dmdw" briefDescription="" id="_y-_PIMPdEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T12:37:14" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    There is much more to testing computer software than simply evaluating the functions, interface, and response-time
    characteristics of a target-of-test.&nbsp;Additional tests must focus on characteristics and attributes, such as the
    target-of-test.
</p>
<ul>
    <li>
        integrity (resistance to failure)
    </li>
    <li>
        ability to be installed and executed on different platforms
    </li>
    <li>
        ability to handle many requests simultaneously
    </li>
</ul>
<p>
    To achieve this, many different types of tests are implemented and executed.&nbsp;Each test type has a specific
    objective and support technique.&nbsp;Each technique focuses on testing one or more characteristics or attributes of
    the target-of-test.
</p>
<p>
    The following sections list the types of test based on the most obvious <strong>quality dimensions</strong> they
    address.
</p>
<h3>
    Quality Dimension: Functionality
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Function test:</strong>&nbsp;Tests focused on validating the target-of-test functions as intended, providing
    the required services, methods, or use cases. This test is implemented and executed against different targets-of-test,
    including units, integrated units, applications, and systems.
</p>
<p>
    <strong>Security test:</strong>&nbsp;Tests focused on ensuring the target-of-test data (or systems) are accessible only
    to those actors for which they are intended. This test is implemented and executed on various targets-of-test.
</p>
<p>
    <strong>Volume test:</strong>&nbsp;Tests focused on verifying the target-of-test's ability to handle large amounts of
    data, either as input and output or resident within the database.&nbsp;Volume testing includes test strategies such as
    creating queries that would return the entire contents of the database, or that would have so many restrictions that no
    data is returned, or where the data entry has the maximum amount of data for each field.
</p>
<h3>
    Quality Dimension:&nbsp;Usability
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Usability test:</strong>&nbsp;Tests that focus on:
</p>
<ul>
    <li>
        human factors
    </li>
    <li>
        esthetics
    </li>
    <li>
        consistency in the user interface
    </li>
    <li>
        online and context-sensitive help
    </li>
    <li>
        wizards and agents
    </li>
    <li>
        user documentation
    </li>
    <li>
        training materials
    </li>
</ul>
<p>
    <strong>Integrity test:</strong>&nbsp;Tests that focus on assessing the target-of-test's robustness (resistance to
    failure), and technical compliance to language, syntax, and resource usage.&nbsp;This test is implemented and executed
    against different targets-of-tests, including units and integrated units.
</p>
<p>
    <strong>Structure test</strong>: Tests that focus on assessing the target-of-test's adherence to its design and
    formation.&nbsp;Typically, this test is done for Web-enabled applications ensuring that all links are connected,
    appropriate content is displayed, and no content is orphaned.
</p>
<h3>
    Quality Dimension: Reliability
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Stress test:</strong>&nbsp; A type of reliability test that focuses on evaluating how the system responds under
    abnormal conditions.&nbsp;Stresses on the system could include extreme workloads, insufficient memory, unavailable
    services and hardware, or limited shared resources.&nbsp;These tests are often performed to gain a better understanding
    of how and in what areas the system will break, so that contingency plans and upgrade maintenance can be planned and
    budgeted for well in advance.
</p>
<p>
    <strong>Benchmark test:</strong>&nbsp; A type of performance test that compares the performance of a new or unknown
    target-of-test to a known reference-workload and system.
</p>
<p>
    <strong>Contention test:</strong>&nbsp; Tests focused on validating the target-of-test's ability to acceptably handle
    multiple actor demands on the same resource (data records, memory, and so on).
</p>
<h3>
    Quality Dimension: Performance
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Load test:</strong>&nbsp; A type of performance test used to validate and assess acceptability of the
    operational limits of a system under varying workloads while the system-under-test remains constant.&nbsp;In some
    variants, the workload remains constant and the configuration of the system-under-test is varied.&nbsp; Measurements
    are usually taken based on the workload throughout and in-line transaction response time.&nbsp;The variations in
    workload usually include emulation of average and peak workloads that occur within normal operational tolerances.
</p>
<p>
    <strong>Performance profile:</strong> A test in which the target-of-test's timing profile is monitored, including
    execution flow, data access, function and system calls to identify and address both performance bottlenecks and
    inefficient processes.
</p>
<p>
    <strong>Configuration test:</strong>&nbsp; Tests focused on ensuring the target-of-test functions as intended on
    different hardware and software configurations.&nbsp;This test might also be implemented as a system performance test.
</p>
<h3>
    Quality Dimension: Supportability
</h3>
<h4>
    Types of Test
</h4>
<p>
    <strong>Installation test:</strong>&nbsp; Tests focused on ensuring the target-of-test installs as intended on
    different hardware and software configurations, and under different conditions (such as insufficient disk space or
    power interruptions).&nbsp;This test is implemented and executed against applications and systems.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
      </MethodPackage>
      <ContentElement xsi:type="uma:TermDefinition" name="actor" briefDescription="" id="_ZsK30EvBEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="actor" variabilityType="na">
        <Presentation name="new_term_definition,_ZsK30EvBEdunZcj9T5hrMQ" briefDescription="" id="-4RQJzq_1URTZ5FGCBKnTIw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Someone or something, outside the system that interacts with the system.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="analyst" briefDescription="" id="_GEAwAEvCEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="analyst" variabilityType="na">
        <Presentation name="new_term_definition,_GEAwAEvCEdunZcj9T5hrMQ" briefDescription="" id="-1RwpgmmY974S0YkxEOFDCw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Role representing customer and end-user concerns]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="business_rule" briefDescription="" id="_NtGL0EvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="business rule" variabilityType="na">
        <Presentation name=",_NtGL0EvDEdunZcj9T5hrMQ" briefDescription="" id="-COrjB4k8Qtf6ZpPEcBNwpw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A declaration of policy or condition that must be satisfied by the system under consideration. For more information see
Supporting Requirements]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="furps" briefDescription="" id="_ZH6M0EvEEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="FURPS+" variabilityType="na">
        <Presentation name=",_ZH6M0EvEEdunZcj9T5hrMQ" briefDescription="" id="-vq2pL6yQuqGhql9Wo_Av4w" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T06:45:04" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Functional, usability, reliability, performance, supportability + others. This acronym represents categories that can be
used in the definition of product requirements. For more information see Supporting Requirements]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="glossary" briefDescription="" id="_VhhDMEvrEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="glossary" variabilityType="na">
        <Presentation name=",_VhhDMEvrEdunZcj9T5hrMQ" briefDescription="" id="-05pn_DGdNui9qqwx46iKZQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T07:40:24" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[An artifact in OpenUP that defines the vocabulary and other important terms that are part of a project and the problem
domain.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="supporting_requirement" briefDescription="" id="_U_olUEvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" variabilityType="na">
        <Presentation name=",_U_olUEvDEdunZcj9T5hrMQ" briefDescription="" id="-ketzwgDgY82DMyfuHqu3Cw" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T06:32:14" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Supporting requirements are requirements that&nbsp;define necessary system quality attributes&nbsp;such as performance,
usability and reliability, as well as global functional requirements&nbsp;that are not captured in behavioral requirements
artifacts such as use-cases.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="use_case" briefDescription="" id="_IHRO8EvHEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="use case" variabilityType="na">
        <Presentation name=",_IHRO8EvHEdunZcj9T5hrMQ" briefDescription="" id="-HDfMzDXoilK-f2iNreHRVg" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Captures requirements as&nbsp;a&nbsp; sequence of actions a system performs that yields an observable result of value to
those interacting with the system.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="use_case_model" briefDescription="" id="_k6B3kEvmEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="use-case model" variabilityType="na">
        <Presentation name=",_k6B3kEvmEdunZcj9T5hrMQ" briefDescription="" id="-UTrE64wEDJIC1FRUomEYDg" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A&nbsp;model of the system use cases and actors and the relationships between them]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="use_case_scenario" briefDescription="" id="_oXmYMEvGEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="use-case scenario" variabilityType="na">
        <Presentation name=",_oXmYMEvGEdunZcj9T5hrMQ" briefDescription="" id="-t3jNM5ZWkYtzB8A4Chz2Vw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Represents specific instances of the use case that correspond to specific inputs from the Actor or to specific conditions
in the environment. Each scenario describes alternate ways that the system provides a behavior, or it may describe failure
or exception cases]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="vision" briefDescription="" id="_J_5kgEvHEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="vision" variabilityType="na">
        <Presentation name=",_J_5kgEvHEdunZcj9T5hrMQ" briefDescription="" id="-VMnkFJpPLdEDUpbz2QDgow" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T03:21:36" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[The user's or customer's view of the product to be developed, specified at the level of key stakeholder needs and features
of the system.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ContentPackage" name="solution" briefDescription="Solution sub-process." id="_kB42IDRiEduU7vV49F9N0A" orderingGuide="" suppressed="false" global="false">
      <MethodPackage xsi:type="uma:ContentPackage" name="architecture" briefDescription="" id="_0WuL8MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
        <MethodPackage xsi:type="uma:ContentPackage" name="visual_modeling" briefDescription="" id="_0WuL8clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
          <ContentElement xsi:type="uma:Concept" name="visual_modeling" briefDescription="This concept introduces the use of semantically rich graphical and textual design notations to capture software designs." id="_0XY6UMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Visual Modeling" variabilityType="na">
            <Presentation name="visual_modeling,_0XY6UMlgEdmt3adZL5Dmdw" briefDescription="" id="_SB1n8MM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-03T06:12:42" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<p align="center">
    <img height="229" alt="visual modelling" src="openup_basic/guidances/concepts/resources/visual.gif" width="447" />
</p>
<p align="center">
    Visual modeling raises the level of abstraction
</p>
<p>
    Visual modeling is the use of semantically rich, graphical and textual design notations to capture software designs. A
    notation, such as UML, allows the level of abstraction to be raised, while maintaining rigorous syntax and semantics.
    In this way, it improves communication in the team as the design is formed and reviewed, allowing the reader to reason
    about the design, and it provides an unambiguous basis for implementation.
</p>
<h3>
    How visual models help
</h3>
<p>
    A model is a simplified view of a system. It shows the essentials of the system from a particular perspective and hides
    the nonessential details. Visual models help you:
</p>
<ul>
    <li>
        Increase understanding of complex systems
    </li>
    <li>
        Explore and compare design alternatives at a low cost
    </li>
    <li>
        Form a foundation for implementation
    </li>
    <li>
        Capture requirements precisely
    </li>
    <li>
        Communicate decisions unambiguously
    </li>
</ul>
<h4>
    Increase understanding of complex systems
</h4>
<p>
    The importance of models increases as systems become more complex. For example, you can build a doghouse without
    blueprints. However, as you progress to building houses and then to skyscrapers, your need for blueprints becomes
    pronounced.
</p>
<p>
    Similarly, a small application built by one person in a few days may be easily understood in its entirety. However, an
    e-commerce system with tens of thousands of source lines of code (SLOCs) or an air traffic control system with hundreds
    of thousands of SLOCs can no longer be easily understood by one person. Constructing models allows a developer to focus
    on the big picture, understand how components interact, and identify fatal flaws.&nbsp;
</p>
<p>
    Among the various types of models are these examples:
</p>
<ul>
    <li>
        Use cases to specify behavior unambiguously
    </li>
    <li>
        Class diagrams and data model diagrams to capture design
    </li>
    <li>
        State transition diagrams to model dynamic behavior
    </li>
</ul>
<p>
    Modeling is important because it helps the team visualize, construct, and document the structure and behavior of the
    system without getting lost in complexity.
</p>
<h4>
    Explore and compare design alternatives at a low cost
</h4>
<p>
    You can create and modify simple models inexpensively to explore design alternatives. Innovative ideas can be captured
    and reviewed by other developers before investing in costly code development. When coupled with iterative development,
    visual modeling helps developers assess design changes and communicate these changes to the entire development team.
</p>
<h4>
    Form a foundation for implementation
</h4>
<p>
    Today, many projects employ object-oriented programming languages to build reusable, change-tolerant, and stable
    systems. To get these benefits, it is even more important to use object technology in design.
</p>
<p>
    The creation of visual models, whether on paper; around a whiteboard; or in a modeling tool, can help a team to gain
    agreement on key aspects of the system before investing time in proving their ideas with code. Having a shared model of
    the system promotes collaboration within the team, encouraging everyone to work towards the same goal.
</p>
<p>
    With the support of appropriate tools, you can use a design model to generate an initial code for implementation. This
    is referred to as <strong>forward engineering</strong> or <strong>code generation</strong>. You can also enhance design
    models to include enough information to build the system.
</p>
<p>
    <strong>Reverse engineering</strong> may also be applied to generate design models from existing implementations. You
    can use this method to evaluate existing implementations.
</p>
<p>
    <strong>Round-trip engineering</strong> combines both forward and reverse engineering techniques to ensure consistent
    design and code. Combined with an iterative process and the right tools, round-trip engineering allows you to
    synchronize the design and code during each iteration.
</p>
<h4>
    Capture requirements precisely
</h4>
<p>
    Before building a system, it's critical to capture the requirements. Specifying the requirements using a precise and
    unambiguous model helps to ensure that all stakeholders can understand and agree on the requirements.
</p>
<p>
    A model that separates the external behavior of the system from the implementation of it helps you focus on the
    intended use of the system, without getting bogged down in implementation details.
</p>
<h4>
    Communicate decisions unambiguously
</h4>
<p>
    The Unified Modeling Language (UML) is&nbsp;a consistent notation that can be applied for system engineering, as well
    as for business engineering. According to these excerpts from the UML specification, a standard notation:
</p>
<ul>
    <li>
        <p>
            Serves as a language for communicating decisions that are not obvious or cannot be inferred from the code
            itself.
        </p>
    </li>
    <li>
        <p>
            Provides semantics that are rich enough to capture all important strategic and tactical decisions.
        </p>
    </li>
    <li>
        <p>
            Offers a form concrete enough for humans to reason [about] and for tools to manipulate.
        </p>
    </li>
</ul>
<p>
    UML represents the convergence of the best practice in software modeling throughout the object-technology industry. For
    more information on the UML, see <a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[UML05]</a>.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
            <Guideline>_we3F4ACpEdu8m4dIntu6jA</Guideline>
          </ContentElement>
          <ContentElement xsi:type="uma:Artifact" name="architecture_vm" briefDescription="" id="_lRV2QEvkEduCAaECSrUMPQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0XAf0MlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
          </ContentElement>
          <ContentElement xsi:type="uma:Concept" name="component_vm" briefDescription="" id="_HZGFsKrPEdu6T6WyNqBzqQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0YP18MlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <Presentation name="new_concept,_HZGFsKrPEdu6T6WyNqBzqQ" briefDescription="" id="-zfl87vJBFdinDB02ArLXOQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-23T12:48:34" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<p align="left">
    The Unified Modeling Language [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">UML05</a>] defines <em>component</em> as follows:
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <blockquote>
        <p>
            A modular part of a system that encapsulates its contents and whose manifestation is replaceable within its
            environment. A component defines its behavior in terms of provided and required interfaces. As such, a
            component serves as a type, whose conformance is defined by these provided and required interfaces
            (encompassing both their static as well as dynamic semantics). (See <strong>UML representation</strong> at the
            end of this section for definitions from earlier versions of UML.)
        </p>
        <p>
            A <em>component</em> is defined as a subtype of structured class. Therefore, a component has attributes and
            operations, is able to participate in associations and generalizations, and has internal structure and ports.
        </p>
    </blockquote>
</blockquote>
<p align="left">
    A number of UML standard stereotypes exist that apply to components, including &lt;&lt;subsystem&gt;&gt; to model
    large-scale components, and &lt;&lt;specification&gt;&gt; and &lt;&lt;realization&gt;&gt; to model components with
    distinct specification and realization definitions, where one specification may have multiple realizations.
</p>
<p align="left">
    Here, we use&nbsp;the term <em>component&nbsp;</em>in a&nbsp;broader way than the UML definition. Rather than defining
    components as having characteristics, such as modularity, deployability, and replaceability, we instead recommend these
    as desirable characteristics of components. See the section on Component Replaceability.
</p>
<h4 align="left">
    Modeling of components
</h4>
<p align="left">
    The UML component is a modeling construct that provides the following capabilities:
</p>
<div align="left">
    <ul>
        <li>
            Group classes to define a larger granularity part of a system
        </li>
        <li>
            Separate the visible interfaces from internal implementation
        </li>
        <li>
            Execute instances run-time
        </li>
    </ul>
</div>
<p align="left">
    A component includes <strong>provided</strong> and <strong>required</strong> interfaces that form the basis for wiring
    components together. A <strong>provided interface</strong> is one that is either implemented directly by the component
    or one of its realizing classes or subcomponents, or it is the type of a provided port of the component. A
    <strong>required interface</strong> is designated by a usage dependency of the component or one of its realizing
    classes or subcomponents, or it is the type of a required port.
</p>
<p align="left">
    A component has an external view (or <em>black box</em> view) through its publicly visible properties and operations
    .Optionally, a behavior such as a protocol state machine may be attached to an interface, a port, and the component
    itself to define the external view more precisely by making dynamic constraints in the sequence of operation calls
    explicit. The wiring between components in a system or other context can be structurally defined by using dependencies
    between component interfaces (typically on component diagrams).
</p>
<p align="left">
    Optionally, you can make a more detailed specification of the structural collaboration by using parts and connectors in
    composite structures to specify the role or instance-level collaboration between components. That is the component's
    internal view (or <em>white-box</em> view) through its private properties and realizing classes or subcomponents. This
    view shows how the external behavior is realized internally. The mapping between external and internal views is by
    dependencies on components diagrams or delegation connectors to internal parts on composite structure diagrams.
</p>
<p align="left">
    The recommendation is to&nbsp;use components as the representation for design subsystems.
</p>
<h4 align="left">
    UML representation
</h4>
<p align="left">
    The definition of <em>component</em> with the UML has changed over time with the release of different versions. The
    version of UML you use may be constrained by the capabilities of the modeling tools you use. That is why the
    definitions from 1.3 to 2.0 are provided here.
</p>
<p align="left">
    UML 2.0 defined <em>component</em> as the following:
</p>
<blockquote dir="ltr" style="MARGIN-RIGHT: 0px">
    <blockquote>
        <p align="left">
            ...a modular part of a system that encapsulates its contents and whose manifestation is replaceable within its
            environment.
        </p>
        <p align="left">
            A component defines its behavior in terms of provided and required interfaces. As such, a component serves as a
            type whose conformance is defined by these provided and required interfaces (encompassing both their static as
            well as dynamic semantics).
        </p>
    </blockquote>
</blockquote>
<p align="left">
    UML 1.5 defined <em>component</em> as the following:
</p>
<blockquote>
    <blockquote>
        <div align="left">
            A modular, deployable, and replaceable part of a system that encapsulates implementation and exposes a set of
            interfaces. A component is typically specified by one or more classes or subcomponents that reside on it and
            may be implemented by one or more artifacts (e.g., binary, executable, or script files).
        </div>
        <div align="left">
            <p>
                In UML 1.3 and earlier versions of the UML, the component notation was used to represent files in the
                implementation. Files are no longer considered components by the latest UML definitions. However, many
                tools and UML profiles still use the component notation to represent files.
            </p>
        </div>
    </blockquote>
</blockquote>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="abstract_away_complexity_vm" briefDescription="" id="_34jWsLcIEduRNaXpzCOLXQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_we3F4ACpEdu8m4dIntu6jA" variabilityType="contributes">
            <Presentation name="new_guideline,_34jWsLcIEduRNaXpzCOLXQ" briefDescription="" id="-OcMsciNn-UtD9fTHj26LGA" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-08T01:14:24" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<h4>
    Model key perspectives
</h4>
<p>
    Modeling helps raise the level of abstraction because you simplify complex ideas and represent them visually, as
    illustrations. Good models can convey information that helps the team visualize, specify, construct, and document
    software. The Unified Modeling Language (UML) provides an industry-standard approach to software modeling.
</p>
<p>
    When applying this strategy, you can use various techniques:
</p>
<ul>
    <li>
        <strong>Identify the key perspectives:</strong> Focus on modeling the things that count. Few (if any) projects
        benefit from modeling the entire design to a great level of detail. Make sure that you understand why you are
        modeling something and who will benefit.
    </li>
    <li>
        <strong>Communicate key architectural perspectives:</strong> Even if you choose to model very little&nbsp;of your
        design, it is often advantageous to produce diagrams that communicate the key architectural aspects of the system.
        Conveying the "big picture" to the rest of the team helps them understand the overall approach and develop cohesive
        software.&nbsp;
    </li>
    <li>
        <strong>Sketch the design:</strong> Not all models need to be detailed completely and presented in a software
        modeling tool. It is often perfectly acceptable (if not desirable) to produce hand-drawn sketches on paper or on a
        whiteboard when you are exploring and communicating the architecture and design with your team. You can use a
        digital camera or an electronic whiteboard to capture these diagrams and share them. For many small projects, this
        is often all you need. See <a href="http://www.agilemodeling.com/">http://www.agilemodeling.com/</a> for more
        information.
    </li>
    <li>
        <strong>Use a modeling tool as needed</strong>:&nbsp;If the team members are changing models throughout the
        project, sharing patterns/structure, debugging design, describing behavior, etc., then static photos or paper will
        become difficult to work with. The team may want to capture design in a software modeling tool. Other than
        communicating the design to the team, another benefit of a such a tool is the&nbsp;generation of structural code
        from the models. Many software development tools allow you to view the code as models, making it easier to
        comprehend static and dynamic aspects of a complex code base.
    </li>
    <li>
        <strong>Agree on a standard notation:</strong> In a team environment, it is important that others can understand
        your diagrams without much explanation. Choosing a standard notation enables others to quickly comprehend your
        diagrams without ambiguity. The Unified Modeling Language is an example of a widely understood notation.
    </li>
</ul>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
            <Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="analyze_arch_reqs_vm" briefDescription="" id="_SYDjUMUKEdu5GrwIlTJV7g" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_42UD4A3tEduibvKwrGxWxA" variabilityType="contributes">
            <Presentation name="new_guideline,_SYDjUMUKEdu5GrwIlTJV7g" briefDescription="" id="-I-2SvZtjELUYDQO0jvdxEA" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-25T09:57:17" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<h4>
    Capture architectural decisions (Visual Modeling)
</h4>
<p>
    You will find it useful to develop these three Unified Modeling Language (UML) diagrams at this stage:
</p>
<ul>

    <li>
        <strong>Layer map</strong> (represented as a class diagram using packages) that describes the upper-level layers of
        the architecture
    </li>
    <li>
        <strong>Draft deployment diagram</strong> that outlines the&nbsp;expected network topology
    </li>
    <li>
        <strong>Simple class diagram</strong> that shows the key abstractions and any obvious relationships among them
    </li>
</ul>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
            <Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
          </ContentElement>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ContentPackage" name="uc_modeling" briefDescription="" id="_douywISSEdu8NaFPL8nS_w" orderingGuide="" suppressed="false" global="false">
          <ContentElement xsi:type="uma:Task" name="analyze_arch_reqs_ucm" briefDescription="" id="_YdaogAI9Edu5WetVoS7Gvw" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0f-1oMlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <MandatoryInput>_W2SgEDR5EdutE_HNDTJk5Q</MandatoryInput>
          </ContentElement>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ContentPackage" name="deprecated" briefDescription="This is a temporary content package to hold old copies of elements while they are refactored for release 1.0 It should be deleted before final release. This package should not be published." id="_h15dULCxEdujaOuld2kPdg" orderingGuide="" suppressed="false" global="false">
          <ContentElement xsi:type="uma:Guideline" name="using_patterns" briefDescription="This guidance discusses the practical application of patterns in a project." id="_0cr7cACrEdu8m4dIntu6jA" orderingGuide="" suppressed="false" presentationName="Using Patterns" variabilityType="na">
            <Presentation name="using_patterns,_0cr7cACrEdu8m4dIntu6jA" briefDescription="" id="-U-5cLUk-mdaO518lh5CxTQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-22T12:38:16" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<p>
    In software design, it is primarily the development method and not the pattern and its pattern language that influences
    the process of pattern selection and use. As discussed in <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/patterns,_0YJvUMlgEdmt3adZL5Dmdw.html" guid="_0YJvUMlgEdmt3adZL5Dmdw">Concept: Patterns</a>, Alexander developed the concept of generative pattern languages
    to guide a designer’s application of individual patterns to the entire design. In software design, however, as
    Alexander observed [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">OOP96</a>] there is little evidence of using generative pattern languages.
</p>
<p>
    For iterative development methods, software patterns and pattern languages support the development method through their
    ability to be applied incrementally, or by piecemeal growth, and by providing extensible structures. From an
    architectural perspective, these two qualities allow software architecture to be designed and refactored incrementally,
    thus so avoid the need for a so-called "big, up-front design."
</p>
<h4>
    Piecemeal growth
</h4>
<p>
    The term <strong>piecemeal growth</strong>, as it applies to patterns, originates in Alexander's work. It refers to a
    top-down design process in which a design starts from a high-level structure that is embellished or refined through the
    implementation of lower-level patterns. For software development, this corresponds to using hierarchies of
    architectural and design patterns and idioms like those proposed by Buschmann et. al. [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">BUS96</a>]. Using the idea of piecemeal growth, an architect can start with one or more
    architectural patterns to provide an architectural vision for the design, and then progressively extend the design
    using design patterns. For example, an interactive application may use the Model-View-Controller pattern as its
    architectural vision, then during implementation the Command pattern may be selected to implement the Controller
    component.
</p>
<h4>
    Extensibility
</h4>
<p>
    A key aspect of object oriented design patterns is their ability to support extension without causing the rewriting of
    existing code. This feature allows a bottom up approach to the design process through code refactoring. When a problem
    is encountered during coding such as duplicate code, the developer can weighed up various patterns and their tradeoffs
    and select the appropriate solution in the context of the application.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
          </ContentElement>
        </MethodPackage>
        <ContentElement xsi:type="uma:Concept" name="pattern" briefDescription="A generalized solution that can be implemented and applied in a problem situation (a context) and thereby eliminate one or more of the inherent problems." id="_0YJvUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Pattern" variabilityType="na">
          <Presentation name="patterns,_0YJvUMlgEdmt3adZL5Dmdw" briefDescription="" id="_QvmkAMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T10:45:45" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h4>
    Origins
</h4>
<p>
    The idea of patterns as it is now applied to software design comes from the work of Christopher Alexander. He has
    written widely on the subject of applying patterns to the design and construction of towns and buildings. Two of his
    books, <em>A Pattern Language</em> [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">ALE77</a>] and <em>The Timeless Way of Building</em> [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">ALE79</a>] have had the greatest impact on the software community and the adoption of
    software patterns for the design of software. His concepts of patterns and pattern language provide a model for the
    capture of software design expertise in a form that can then be reapplied in recurring situations.
</p>
<h4>
    A definition of patterns
</h4>
<p>
    Today, the most commonly used definition of software patterns is from [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">GAM95</a>]:
</p>
<blockquote>
    <p>
        "A design pattern describes the problem, a solution to the problem consisting of a general arrangement of objects
        and classes, when to apply the solution, and the consequences of applying the solution."
    </p>
</blockquote>
<p>
    This definition often serves only as a starting point, however. A richer definition, based on Alexander’s work, is
    offered by Gabriel in his book, <em>A Timeless Way of Hacking</em> [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">ALU03</a>], in which each pattern is a three-part rule that expresses relationships
    among a certain context, a certain system of forces that occur repeatedly in that context, and a certain software
    configuration that allows these forces to resolve themselves.
</p>
<h4>
    Describing patterns
</h4>
<p>
    It is commonplace to describe patterns&nbsp;using the&nbsp;format made popular by Erich Gamma and his three colleagues
    [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">GAM95</a>]. They have come to be known as the Gang of Four (GoF); therefore, their
    description is known as the <strong>GoF format</strong>. The GoF format uses the following keywords to describe
    object-oriented design patterns:
</p>
<ul>
    <li>
        <p>
            <strong>Pattern name and classification:</strong> Naming the pattern allows design to work at a higher level of
            abstraction, using a vocabulary of patterns. Gamma says that finding a good name is one of the hardest problems
            of developing a catalogue of patterns (see <strong>Pattern catalogues</strong> later in this section).
        </p>
    </li>
    <li>
        <p>
            <strong>Intent:</strong> An answer to questions such as: What does the pattern do? What problem does it
            address?
        </p>
    </li>
    <li>
        <p>
            <strong>Also known as:</strong> Other names for the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Motivation:</strong> A concrete scenario that illustrates a design problem and how the pattern solves
            the problem.
        </p>
    </li>
    <li>
        <p>
            <strong>Applicability:</strong> Instructions for how you can recognize situations in which patterns are
            applicable.
        </p>
    </li>
    <li>
        <p>
            <strong>Structure:</strong> A graphical representation of the classes in the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Participants:</strong> The responsibilities of the classes and objects that participate in the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Collaborations:</strong> How participants collaborate to fulfil their responsibilities.
        </p>
    </li>
    <li>
        <p>
            <strong>Consequences:</strong> The results, side effects and trade offs caused by using the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Implementation:</strong> Guidance on the implementation of the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Sample code:</strong> Code fragments that illustrate the pattern’s implementation.
        </p>
    </li>
    <li>
        <p>
            <strong>Known uses:</strong> Where to find real-world examples of the pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Related patterns:</strong> Synergies, differences, and other pattern relationships.
        </p>
    </li>
</ul>
<p>
    Although the GoF format is specifically intended for object-oriented development, you can use it, with slight
    modification, to address other software patterns. A more general keyword format for software patterns based on
    Alexander’s principles uses keywords such as <em>problem</em>, <em>context</em>, <em>forces</em> and <em>solution</em>.
</p>
<h4>
    Pattern catalogs
</h4>
<p>
    To assist with the identification and selection of patterns, various classification schemes have been proposed. One of
    the early schemes, proposed by Buschmann and his associates, [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">BUS96</a>] uses three classifiers: granularity, functionality, and structured
    principles. Of those three classifiers, it is their granularity classifier that has remained popular. Granularity
    classifies patterns into three levels of abstraction:
</p>
<ul>
    <li>
        <p>
            <strong>Architectural patterns:</strong> Architectural patterns express the fundamental structure of a software
            scheme. Examples of architectural pattern include: layers, pipes and filters, and the model view controller
            pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Design patterns:</strong> Software architecture usually consists of smaller architectural units that
            are described by design patterns. The GoF pattern is an example of a design pattern.
        </p>
    </li>
    <li>
        <p>
            <strong>Idioms.</strong> An idiom is the lowest-level pattern, and it is specific to a programming language.
        </p>
    </li>
</ul>
<p>
    Buschmann and his colleagues introduced four groups for categorizing architectural patterns:
</p>
<ul>
    <li>
        Structure
    </li>
    <li>
        Distributed systems
    </li>
    <li>
        Interactive systems
    </li>
    <li>
        Adaptable systems
    </li>
</ul>
<p>
    The following table shows the categorization of their architectural patterns.
</p>
<table cellspacing="0" cellpadding="2" width="85%" summary="Categories for Architectural Patterns [BUS96]" border="1"
valign="top">
    <caption>
        <strong>Categories for Architectural Patterns<br />
        </strong>
    </caption>
    <tbody>
        <tr>
            <th scope="col">
                <div align="center">
                    <strong>Category</strong>
                </div>
            </th>
            <th scope="col">
                <div align="center">
                    <strong>Pattern</strong>
                </div>
            </th>
        </tr>
        <tr>
            <td>
                Structure
            </td>
            <td>
                <p>
                    Layers<br />
                     Pipes and filters<br />
                     Blackboard
                </p>
            </td>
        </tr>
        <tr>
            <td>
                Distributed systems
            </td>
            <td>
                Broker
            </td>
        </tr>
        <tr>
            <td>
                Interactive systems
            </td>
            <td>
                Model view controller<br />
                 Presentation abstraction control
            </td>
        </tr>
        <tr>
            <td>
                <p>
                    Adaptable systems
                </p>
            </td>
            <td>
                <p>
                    Reflection<br />
                     Micro kernel
                </p>
            </td>
        </tr>
    </tbody>
</table>
<p>
    For design patterns, Gamma's group categorized their design patterns by purpose, using three categories:
</p>
<ul>
    <li>
        Creational
    </li>
    <li>
        Structural
    </li>
    <li>
        Behavioral
    </li>
</ul>
<h4>
    Pattern languages
</h4>
<p>
    In addition to the concept of patterns, Alexander also gave the software community the concept of a pattern language.
    The purpose of developing a pattern language was to provide a vocabulary of design principles (patterns) that would
    allow those who work, study, or live in buildings to communicate effectively with the planners and designers of those
    buildings. Alexander explains that when using a pattern language:
</p>
<blockquote>
    <p>
        We always use it as a sequence, going through the patterns, moving always from the larger patterns to the smaller,
        always from the ones that create structure to the ones which then embellish those structures, and then to those
        that embellish the embellishments.
    </p>
</blockquote>
<p>
    In applying patterns in this way, Alexander advocated the use of generative pattern languages, ones that, given an
    initial context, would always lead to good design.&nbsp; Alexander&nbsp;states:
</p>
<blockquote>
    <p>
        Thus, as in the case of natural languages, the pattern language is generative. It not only tells us the rules of
        arrangement, but shows us how to construct arrangements — as many as we want — which satisfies the rules.
    </p>
</blockquote>
<p>
    In the application of software patterns, pattern names provide a vocabulary for the communication of software ideas.
    The sequential application of patterns finds application in software design processes, both waterfall and iterative,
    that successively apply architectural patterns, and then design patterns, and, finally, idioms to design and implement
    a software system. Software processes, however, rely on the skills of the Architect and Developer roles to guide the
    application of patterns, rather than a generative pattern language.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="component" briefDescription="An encapsulated part of a system that is, ideally, a nontrivial, nearly independent,  and replaceable part of a system that fulfills a clear function in the context  of well-defined architecture." id="_0YP18MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Component" variabilityType="na">
          <Presentation name="component,_0YP18MlgEdmt3adZL5Dmdw" briefDescription="" id="_TZiasMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-23T12:49:37" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p align="left">
    The software industry and literature use the term <strong>componen</strong>t to refer to many different things. It is
    often used in the broad sense to mean a constituent part. It is also frequently used in a narrow sense to denote
    specific characteristics that enable replacement and assembly in larger systems.
</p>
<p align="left">
    Here. we use <em>component</em> to mean <strong>an encapsulated part of a system</strong> that is, ideally, a
    nontrivial, nearly independent, and replaceable part of a system that fulfils a clear function in the context of
    well-defined architecture. This includes two types of components:
</p>
<ul>
    <li>
        <div align="left">
            <p>
                <strong>Design component.</strong> A significant encapsulated part of the design that includes design
                subsystems and, sometimes, significant design classes and design packages.
            </p>
        </div>
    </li>
    <li>
        <div align="left">
            <p>
                <strong>Implementation component.</strong> A significant encapsulated part of the implementation, generally
                code that implements a design component.
            </p>
        </div>
    </li>
</ul>
<p align="left">
    Ideally, the design reflects the implementation; therefore, you can simply refer to <em>components</em>, with each
    component having a design and an implementation.
</p>
<h4 align="left">
    Component replaceability
</h4>
<p align="left">
    In UML terminology, components should be replaceable. However, this may mean only that the component exposes a set of
    interfaces that hide an underlying implementation.
</p>
<p align="left">
    There are other, stronger, kinds of replaceability: .
</p>
<div align="left">
    <ul>
        <li>
            <p>
                <strong>Source file replaceability:</strong> If two classes are implemented in a single source code file,
                then those classes cannot usually be separately versioned and controlled. However, if a set of files fully
                implements a single component (and no other component), then the component source files are replaceable.
                This characteristic makes it easier to use version control, to use the file as a baseline, and to reuse the
                source file.
            </p>
        </li>
        <li>
            <p>
                <strong>Deployment replaceability:</strong> If two classes are deployed in a single executable file, then
                each class is not independently replaceable in a deployed system. It is desirable for larger-granularity
                components to be replaceable during deployment, which allows new versions of the component to be deployed
                without having to rebuild the other components. This usually means that there is one file or one set of
                files that deploy the component, and no other component.
            </p>
        </li>
        <li>
            <p>
                <strong>Run-time replaceability:</strong> If a component can be redeployed into a running system, then it
                is referred to as <em>run-time replaceable</em>. This enables you to upgrade software without loss of
                availability.
            </p>
        </li>
        <li>
            <p>
                <strong>Location transparency:</strong> Components with network-addressable interfaces are referred to as
                having <em>location transparency</em>. This allows components to be relocated to other servers or to be
                replicated on multiple servers to support fault tolerance, load balancing, and so on. These kinds of
                components are often referred to as <em>distributed</em> or <em>distributable</em> components.
            </p>
        </li>
    </ul>
</div>
<h4 align="left">
    Component instantiation
</h4>
<p align="left">
    A component may or may not be directly instantiated at run time.
</p>
<p align="left">
    An indirectly instantiated component is implemented, or realized, by a set of classes, subcomponents, or parts. The
    component itself does not appear in the implementation; it merely serves as a design that an implementation must
    follow. The set of realizing classes, subcomponents, or parts must cover the entire set of operations specified in the
    provided interface of the component. The manner of implementing the component is the responsibility of the implementer.
</p>
<p align="left">
    A directly instantiated component specifies its own encapsulated implementation. It is instantiated as an addressable
    object, which means that a design component has a corresponding construct in the implementation language; therefore, it
    can be referenced explicitly.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="analyze_arch_reqs" briefDescription="Analyze the architecturally significant requirements and define a candidate architecture for the system. Define the architectural patterns, key mechanisms, and where applicable, modeling conventions for the system." id="_0f-1oMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Analyze the Architectural Requirements" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="analyze_architecture,_0f-1oMlgEdmt3adZL5Dmdw" briefDescription="" id="_qDRSULBKEdm7Eph_l9Cn9w" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-03T10:37:35" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    This task focuses on defining a candidate&nbsp;architecture&nbsp;that will guide&nbsp;the development, testing, and
    operation of the system. It relies on gathering experience gained in similar systems or problem domains to constrain
    and focus the architecture so that effort is not wasted in re-inventing architecture.
</p>
<p>
    Capture architectural decisions in the <a class="elementLink"
    href="./../../openup_basic/workproducts/architecture_notebook,_0XAf0MlgEdmt3adZL5Dmdw.html"
    guid="_0XAf0MlgEdmt3adZL5Dmdw">Architecture Notebook</a>. Make sure that this is communicated across the team.
</p>]]></MainDescription>
            <KeyConsiderations><![CDATA[<p>
    This task&nbsp;is most beneficial when developing new and unprecedented systems. In systems where there is already a
    well-defined architecture, this task might be omitted, or performed quickly as a&nbsp;review of the existing
    architecture.
</p>
<p>
    It is critical that this task is performed collaboratively with active involvement of other team members and project
    stakeholders so that consensus and common understanding is reached. It is particularly vital for the architect to
    involve the developer(s) throughout this task. The architecture effort&nbsp;is about providing leadership and
    coordination of the technical work rather than putting in a solo performance.
</p>]]></KeyConsiderations>
            <Section name="Identify architectural goals" briefDescription="" id="_3nMQQA3rEduibvKwrGxWxA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Describe the goals of the architecture by examining the product &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/checklists/vision,_0WoFUMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0WoFUMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&amp;nbsp;and requirements, including architecturally significant requirements.&#xD;
    Also, talk to the project &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot;&#xD;
    guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a> and &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VxJsMlgEdmt3adZL5Dmdw&quot;>Analyst&lt;/a>.&#xD;
    These goals will guide your&amp;nbsp;approach to important architectural and design decisions.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify architectural constraints" briefDescription="" id="_9o6Z4CSCEdqDjNgZyGMf5w" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Understand&amp;nbsp;any constraints (or opportunities) on the solution&amp;nbsp;that are inherent in the existing environment&#xD;
    or organization. If available, examine the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;&#xD;
    guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting Requirements&lt;/a>&amp;nbsp;for any constraints that have already been&#xD;
    identified.&amp;nbsp;Discuss any critical time and resource constraints with the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Project&#xD;
    Manager&lt;/a>, as these&amp;nbsp;will also need to be taken into account when arriving at your decisions. Discuss potential&#xD;
    constraints with the tester such as hooks for tests, and to identify architectural areas that may be difficult to test.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Survey, assess, and select available assets" briefDescription="" id="_B899cMP2EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Establish the availability of any existing software assets as suitable candidates for re-use. Make sure you consult&#xD;
    with others who have knowledge of existing assets, particularly the&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0YDosMlgEdmt3adZL5Dmdw&quot;>Developer&lt;/a>(s) and other&amp;nbsp;people outside the project team (such as production&#xD;
    support teams) in order to form a balanced view of the suitability of existing assets for re-use. Identifying reusable&#xD;
    assets could be done as a team brainstorming session.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Define approach for structuring the system" briefDescription="" id="_FVrlsMP2EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Decide how to structure&amp;nbsp;the software, both in logical and physical terms. As a minimum, decide on:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        How to partition the software when managing development&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How the software will be composed at run time.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    For each software partition, briefly describe&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Their name and purpose.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Their relationships to other partitions.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    These decisions will form the basis for structuring the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>&amp;nbsp;and the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0YuXEMlgEdmt3adZL5Dmdw&quot;>Build&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Define approach for deploying the system" briefDescription="" id="_tmvWwE5cEducxZ_XZXh-vw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Outline how the software will deploy over the nodes on the network. Work with stakeholders such as as network support and&#xD;
deployment&amp;nbsp;teams to ensure that the proposed approach is a good fit for the wider technical environment.</Description>
            </Section>
            <Section name="Identify key abstractions" briefDescription="" id="_I32E4MP2EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Identify the key abstractions that the system needs to handle. You can usually find these by looking for nouns that the&#xD;
    requirements emphasize or repeat, because they help identify what is important to the business. The &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html&quot;&#xD;
    guid=&quot;_Wn7HcNcEEdqz_d2XWoVt6Q&quot;>Glossary&lt;/a> is particularly useful for this. Work with the analyst and stakeholder&#xD;
    here, as they will have knowledge and materials that are relevant to this step. Work with the developer to identify key&#xD;
    abstractions internal to the system.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify architectural mechanisms" briefDescription="" id="_KBAsYMP2EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Catalog the architectural mechanisms that are necessary to fulfil the requirements. At this stage, it only&#xD;
    necessary&amp;nbsp;to capture&amp;nbsp;a relatively small amount of detail for each mechanism. Discuss the requirements&#xD;
    (especially&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;&#xD;
    guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting Requirements&lt;/a>) that are being addressed by each&amp;nbsp;mechanisms with the&#xD;
    analysts and stakeholders to make sure that the requirements are&amp;nbsp;unambiguous and well understood.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Capture architectural decisions" briefDescription="" id="_xTdYACGAEdqk6N_Ot_YEvA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Capture&amp;nbsp;important decisions&amp;nbsp;about the architecture for future reference. Consider using the templates&#xD;
    provided for the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/architecture_notebook,_0XAf0MlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0XAf0MlgEdmt3adZL5Dmdw&quot;>Architecture Notebook&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[To provide sufficient guidance and direction for the team to be able to perform analysis and design&nbsp;in consistent and
coherent ways.]]></Purpose>
          </Presentation>
          <Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
          <Concept>__O7tAMVvEduLYZUGfgZrkQ</Concept>
          <Guideline>_42UD4A3tEduibvKwrGxWxA</Guideline>
          <Guideline>_0gpkAMlgEdmt3adZL5Dmdw</Guideline>
          <PerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_Wn7HcNcEEdqz_d2XWoVt6Q</MandatoryInput>
          <MandatoryInput>_0WVxcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0XAf0MlgEdmt3adZL5Dmdw</Output>
          <Output>_0WuL8slgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0WuL8slgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_0XAf0MlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_0VGbUMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_BVh9cL-CEdqb7N6KIeDL8Q</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="develop_arch" briefDescription="Make concrete decisions about the architecture to provide guidance and direction  to the development work for the iteration." id="_0gRJgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Develop the Architecture" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="refine_architecture,_0gRJgMlgEdmt3adZL5Dmdw" briefDescription="" id="_rUis8LBKEdm7Eph_l9Cn9w" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-03T10:40:43" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    This task&nbsp;builds on&nbsp;the work&nbsp;performed during <a class="elementLink"
    href="./../../openup_basic/tasks/analyze_arch_reqs,_0f-1oMlgEdmt3adZL5Dmdw.html" guid="_0f-1oMlgEdmt3adZL5Dmdw">Analyze
    the Architectural Requirements</a>&nbsp;to produce a concrete approach for the main development work to follow.
</p>
<p>
    The objective is to resolve the overarching issues which affect the design and development activity for the current
    iteration. These are:
</p>
<ul>
    <li>
        To specify&nbsp;common mechanisms or patterns to be used.
    </li>
    <li>
        To&nbsp;specify what use will be made of existing software assets and how they will integrate with the overall
        solution.
    </li>
    <li>
        To&nbsp;specify what new software needs to be developed.
    </li>
    <li>
        To ensure that the appropriate hardware and software resources are&nbsp;specified to support the development and
        testing of the solution.
    </li>
    <li>
        To ensure that the architecture is useful to and used by the project team.
    </li>
</ul>
<p>
    The technical decisions&nbsp;taken as part of this task&nbsp;are concrete and unambiguous. Capture architectural
    decisions in the <a class="elementLink"
    href="./../../openup_basic/workproducts/architecture_notebook,_0XAf0MlgEdmt3adZL5Dmdw.html"
    guid="_0XAf0MlgEdmt3adZL5Dmdw">Architecture Notebook</a>. Make sure that this is communicated across the team.
</p>
<p>
    This task is applied iteratively; iterations after the first will need to take account of the <a class="elementLink"
    href="./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html"
    guid="_0WuL8slgEdmt3adZL5Dmdw">Design</a>&nbsp;and <a class="elementLink"
    href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html"
    guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a>&nbsp;products that have been developed so far.
</p>]]></MainDescription>
            <KeyConsiderations><![CDATA[<p>
    The architect should perform this task&nbsp;through collaboration with the whole&nbsp;team to promote consensus and a
    common understanding of the overall solution. The architect should be working to coordinate and guide the technical
    activities of the team, rather than seeking to do all the work alone.&nbsp;The architect should place emphasis&nbsp;on
    involving&nbsp;the developer(s) throughout this task.
</p>]]></KeyConsiderations>
            <Section name="Identify architectural priorities" briefDescription="" id="_P28vkMP3EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Determine&amp;nbsp;the&amp;nbsp;priorities for this iteration of&amp;nbsp;architecture work.&amp;nbsp;Balance the objectives for the&#xD;
    current iteration against the overall project objectives, ensuring that the architecture can support current and future&#xD;
    needs.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Refine architectural mechanisms" briefDescription="" id="_0qoQ8CikEduQBKSg5n118w" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Refine&amp;nbsp;each architectural mechanism into a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html&quot;&#xD;
    guid=&quot;_w2ACwA4LEduibvKwrGxWxA&quot;>Design Mechanism&lt;/a> by looking at the requirements in the context of the current&#xD;
    iteration. Include each architecturally significant&amp;nbsp;scenario in scope. Look for commonality across scenarios and&#xD;
    propose common components and patterns for their solution. Work with the developers and analysts&amp;nbsp;to gain consensus&#xD;
    on&amp;nbsp;the architecture mechanisms.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify business patterns" briefDescription="" id="_QtKuoCilEduQBKSg5n118w" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    The architecture of the system can often be best&amp;nbsp;communicated by showing how it handles important areas business&#xD;
    behaviour.&#xD;
&lt;/p>&#xD;
&lt;p dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    See &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/guidances/concepts/business_pattern,_Z53x0BapEduSTJywppIxVQ.html&quot;&#xD;
    guid=&quot;_Z53x0BapEduSTJywppIxVQ&quot;>Business Pattern&lt;/a>. Work with the stakeholders to assure the business patterns are&#xD;
    based on&amp;nbsp;sound knowledge.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify reuse opportunities" briefDescription="" id="_Vdln8MP3EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    Leverage reuse of existing components by evaluating their interfaces and the behavior that they provide. Reuse&#xD;
    components when their interfaces are similar or match the interfaces of components you would need to develop from&#xD;
    scratch. If not similar, modify the newly identified interfaces so you improve the fit with existing components&#xD;
    interfaces.&#xD;
&lt;/p>&#xD;
&lt;p dir=&quot;ltr&quot; style=&quot;MARGIN-RIGHT: 0px&quot;>&#xD;
    Work with developers to gain consensus on the suitability of using existing components.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify architecturally significant design elements" briefDescription="" id="_G_k1kBaqEduSTJywppIxVQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p align=&quot;left&quot;>&#xD;
    Refine the key abstractions to decide on the important design elements (such as classes and&amp;nbsp;subsystems)&amp;nbsp;that&#xD;
    make up the architecture, and provide at least a name and brief description for each. Add them to the &lt;a&#xD;
    class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>. Gain consensus with the developers on architecturally significant design&#xD;
    choices.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Map the software to the hardware" briefDescription="" id="_xIIVkMUbEdu5GrwIlTJV7g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Map the architecturally significant design elements to the target deployment environment. Work with hardware and network&#xD;
specialists to ensure that the hardware is sufficient to meet the needs of the system; and that any new hardware is&#xD;
available in time.</Description>
            </Section>
            <Section name="Define development architecture and test architecture" briefDescription="" id="_LsyLkBaqEduSTJywppIxVQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Ensure that the development and test architectures are defined.&amp;nbsp;Note any architecturally significant differences&#xD;
    between these environments and work with the team to devise strategies to mitigate any risks these may introduce.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Validate the architecture" briefDescription="" id="_Zlw-QMP3EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Verify that the architecture decisions are appropriate for their purpose.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Development work should be performed to&amp;nbsp;produce a&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0YuXEMlgEdmt3adZL5Dmdw&quot;>Build&lt;/a>&#xD;
    that shows that the software architecture is viable. This should provide the definitive basis for validating the&#xD;
    suitability&amp;nbsp;of the architecture.&amp;nbsp;As the software&amp;nbsp;should be developed iteratively, more than one&#xD;
    increment of the build may be required to prove the architecture.&amp;nbsp;During the early stages of the project (up to&#xD;
    the end of &lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/deliveryprocesses/elaboration_phase_iteration,_0Spa4BOKEduCNqgZdt_OaA.html&quot;&#xD;
    guid=&quot;_0Spa4BOKEduCNqgZdt_OaA&quot;>Elaboration&lt;/a>), it may be&amp;nbsp;acceptable for the software to have a incomplete or&#xD;
    prototypical feel, as it&amp;nbsp;will be&amp;nbsp;primarily concerned with baselining the architecture to provide a stable&#xD;
    foundation for the&amp;nbsp;&lt;a class=&quot;elementLinkWithUserText&quot;&#xD;
    href=&quot;./../../openup_basic/deliveryprocesses/construction_phase_iteration,_3CqrAROKEduCNqgZdt_OaA.html&quot;&#xD;
    guid=&quot;_3CqrAROKEduCNqgZdt_OaA&quot;>Construction&lt;/a> phase.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Communicate decisions" briefDescription="" id="_aRCI0MP3EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Ensure that those who need to act upon the architectural work&amp;nbsp;understand&amp;nbsp;it and are able to work with&#xD;
    it.&amp;nbsp;Make sure that the description of the architecture clearly conveys not only the solution but also the&#xD;
    motivation and objectives related to the&amp;nbsp;decisions that have been made in shaping the architecture. This will make&#xD;
    it easier for others to understand the architecture and to adapt it over time.&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    Provide a skeletal design to enable more&nbsp;comprehensive design activities to be performed coherently by the team.
</p>]]></Purpose>
          </Presentation>
          <Concept>_Z53x0BapEduSTJywppIxVQ</Concept>
          <Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
          <Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
          <Concept>__O7tAMVvEduLYZUGfgZrkQ</Concept>
          <Guideline>_mDf2EBapEduSTJywppIxVQ</Guideline>
          <PerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0WuL8slgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0XAf0MlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_BVh9cL-CEdqb7N6KIeDL8Q</MandatoryInput>
          <MandatoryInput>_0VGbUMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0WVxcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0YuXEMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0WuL8slgEdmt3adZL5Dmdw</Output>
          <Output>_0XAf0MlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="architecture_notebook" briefDescription="The Architecture Notebook describes the blueprint for software development. It contains the rationale, assumptions, explanations and implications of the decisions that were made in forming the architecture." id="_0XAf0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Architecture Notebook" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="architecture_notebook,_0XAf0MlgEdmt3adZL5Dmdw" briefDescription="" id="_H4gOYKYTEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-03T11:34:06" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<p>
    This artifact&nbsp;is a communication vehicle that tells Developers what pieces to build, as well as how those pieces
    behave and interact with each other. It determines the project structure so that managers can plan the project. It also
    gives whoever must maintain and change the architecture later their first glimpse of the system; and an understanding
    of the motivation behind the important technical decisions.
</p>
<p>
    This artifact focuses on specific aspects of the design, concentrating on structure, essential elements, key scenarios
    and those aspects that have a lasting impact on system qualities such as performance, reliability, adaptability and
    cost. It defines the set of mechanisms, patterns and styles that will guide the rest of the design, assuring its
    integrity.
</p>
<p>
    Architectural elements make excellent units of implementation, unit testing, integration, configuration management
    and&nbsp;documentation. The organisation of the architecture can also help the <a class="elementLink"
    href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">Project
    Manager</a> decide on the organisation of the team.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose><![CDATA[<p>
    To describe the essential part of the design of the system so the integrity and understandability of the system is
    assured.
</p>]]></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;p>&#xD;
    The he architecture can be represented in many forms and from many viewpoints, depending on the needs of the project&#xD;
    and the preferences of the project team. The architecture can be expressed as a simple metaphor or as a comparison to a&#xD;
    predefined architectural style or set of styles. It may be a precise set of models or documents that describe the&#xD;
    various aspects of the system's key elements. Expressing it as skeletal build is another option - although this build&#xD;
    may need to be baselined and preserved to ensure that the essence of the system can be understood as the system grows.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It is frequently a design artifact that must be represented in a readable and accessible way. It can reference models&#xD;
    that describe &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/guidances/guidelines/architectural_view,_T9nygClEEduLGM8dfVsrKg.html&quot;&#xD;
    guid=&quot;_T9nygClEEduLGM8dfVsrKg&quot;>Architectural View&lt;/a>s for communicating the architecture. A view is a representation&#xD;
    of a system from the perspective of a related set of concerns.&amp;nbsp;To choose the appropriate set of&#xD;
    views,&amp;nbsp;identify the Stakeholders who depend on software architecture documentation and the information that they&#xD;
    need.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    It need not be a formal document. The essence of the architecture can often be communicated through a series of simple&#xD;
    diagrams on a whiteboard; or as a list of decisions. Choose the medium that best meets the needs of the project.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_0YP18MlgEdmt3adZL5Dmdw</Concept>
          <Concept>__O7tAMVvEduLYZUGfgZrkQ</Concept>
          <Checklist>_17PYUNd6EdmIm-bsRSNCgw</Checklist>
          <Guideline>_T9nygClEEduLGM8dfVsrKg</Guideline>
          <Guideline>_0gpkAMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0gjdYMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_we3F4ACpEdu8m4dIntu6jA</Guideline>
          <Template>__JXkoCk8EduLGM8dfVsrKg</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="analysis_mechanism" briefDescription="An Analysis Mechanism is a conceptual representation of an Architectural Mechanism." id="_0gvqoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Analysis Mechanism" variabilityType="na">
          <Presentation name="analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw" briefDescription="" id="_S8KCcMP2EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T02:44:38" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    An Analysis Mechanism is a conceptual representation of an <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>. Over time, Analysis Mechanisms are refined into <a
    class="elementLink" href="./../../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html"
    guid="_w2ACwA4LEduibvKwrGxWxA">Design Mechanism</a>s&nbsp;and, later, into <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/implementation_mechanism,_0LcUkA4LEduibvKwrGxWxA.html"
    guid="_0LcUkA4LEduibvKwrGxWxA">Implementation Mechanism</a>s.
</p>
<p>
    Analysis Mechanisms&nbsp;allow the developer to focus on understanding the requirements without getting distracted by
    the specifics of a complex implementation. They are a way of abstracting away the complexity of the solution, so people
    can better comprehend the problem.
</p>
<p>
    Analysis Mechanisms are described in simple terms:
</p>
<ul>
    <li>
        <strong>Name:</strong> Identifies the mechanism.
    </li>
    <li>
        <strong>Basic attributes:</strong> Define the requirements of the mechanism.
    </li>
</ul>
<p>
    You can identify Analysis Mechanisms top-down, from previous knowledge, or bottom-up, meaning that you discover them as
    you proceed.
</p>
<p>
    In the top-down mode, experience guides the <a class="elementLink"
    href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"
    guid="_0X9iEMlgEdmt3adZL5Dmdw">Architect</a>, who knows that certain problems are present in the domain and will
    require certain kinds of solutions. Examples of common architectural problems that might be expressed as mechanisms
    during analysis are: persistence, transaction management, fault management, messaging, and inference engines. The
    common aspect of all of these is that each is a general capability of a broad class of systems, and each provides
    functionality that interacts with or supports the basic application functionality. The Analysis Mechanisms support
    capabilities required in the basic functional requirements of the system, regardless of the platform that it is
    deployed upon or the implementation language. Analysis Mechanisms also can be designed and implemented in different
    ways. Generally, there will be more than one design mechanism that corresponds with each Analysis Mechanism. There may
    also be more than one way of implementing each design mechanism.
</p>
<p>
    The bottom-up approach is where Analysis Mechanisms ultimately originate. They are created as the <a
    class="elementLink" href="./../../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"
    guid="_0X9iEMlgEdmt3adZL5Dmdw">Architect</a> sees, perhaps faintly at first, a common theme emerging from a set of
    solutions to various problems. For example: There is a need to provide a way for elements in different threads to
    synchronize their clocks, and there is a need for a common way of allocating resources. <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw.html"
    guid="_0gvqoMlgEdmt3adZL5Dmdw">Analysis Mechanism</a>, which simplify the language of analysis, emerge from these
    patterns.
</p>
<p>
    Identifying an Analysis Mechanism means that you identify a common, perhaps implicit&nbsp;subproblem, and you give it a
    name. Initially, the name might be all that exists. For example, the system will require a persistence
    mechanism.&nbsp;Ultimately, this mechanism will be implemented through the collaboration of various classes, some of
    which do not deliver application functionality directly, but exist only to support it. Very often these support classes
    are located in the middle or lower layers of a layered architecture, thereby providing a common support service to all
    application-level classes.
</p>
<p>
    If the subproblem that you identify is common enough, perhaps a pattern exists from which the mechanism can be
    instantiated, probably by binding existing classes and implementing new ones, as required by the pattern. An Analysis
    Mechanism produced this way will be abstract, and it will require further refinement throughout design and
    implementation work.
</p>
<p>
    You can see examples of how Architectural Mechanisms can be represented in <a class="elementLink"
    href="./../../../openup_basic/guidances/guidelines/example_analysis_mechanisms_descr,_4k_HsA4LEduibvKwrGxWxA.html"
    guid="_4k_HsA4LEduibvKwrGxWxA">Example Analysis Mechanism Descriptions</a>.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
          <Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
          <Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
          <Guideline>_4k_HsA4LEduibvKwrGxWxA</Guideline>
          <Guideline>_4k_HsQ4LEduibvKwrGxWxA</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Checklist" name="architecture" briefDescription="This checklist provides questions to help in evaluating whether architectural decisions have been captured appropriately." id="_17PYUNd6EdmIm-bsRSNCgw" orderingGuide="" suppressed="false" presentationName="Architecture" variabilityType="na">
          <Presentation name="architecture,_17PYUNd6EdmIm-bsRSNCgw" briefDescription="" id="_17Ve8Nd6EdmIm-bsRSNCgw" orderingGuide="" suppressed="false" authors="Chris Doyle, Mark Dickson" changeDate="2007-03-03T06:34:09" changeDescription="(Mark Dickson) formatted &amp; applied changes from Chris Doyle |Major re-|Major re-write in line with Supporting Requirements checklist" version="1.3">
            <MainDescription><![CDATA[<p>
    The items in this checklist represent good practices for creating and communicating a robust architecture. It may not
    be possible to address every item, and some items may only be able to be addressed to a limited extent. In these cases,
    be sure that there are good reasons for only partially addressing an item, or not addressing an item at all.
</p>
<p>
    Architecture can be performed every day. Use this checklist regularly to ensure the results are robust, consistent, and
    understandable. Make the architecture good enough for the specific goals being addressed by using this checklist to
    identify areas that have been skipped, ignored, or not sufficiently addressed.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Is the overall structure of the architecture clear?" briefDescription="" id="_LqpmkCALEduY2JH31Kkn-A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Are the key abstractions adequately defined?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Have&amp;nbsp;necessary&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html&quot;&#xD;
        guid=&quot;_mzxI0A4LEduibvKwrGxWxA&quot;>Architectural Mechanism&lt;/a>s been identified and described?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the architecture divide the system’s responsibilities into well-defined subsystems with well-defined&#xD;
        interfaces?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the packaging approach reduce complexity and improve understanding?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is subsystem and package partitioning and layering logically consistent?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are packages defined to be highly cohesive within the package, while the packages themselves are loosely coupled?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are all of the subsystem components for the iteration identified?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do the dependencies between subsystems and packages correspond to dependency relationships between the contained&#xD;
        classes?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do the classes in a subsystem support the services identified for the subsystem?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are the number and types of components reasonable?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Have the supporting requirements been adequately addressed?" briefDescription="" id="_pWBfQMm9EduiAPR4gd-qxA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Does the architecture adequately address&amp;nbsp;the global Functional requirements?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the architecture adequately address&amp;nbsp;the&amp;nbsp;Usability requirements?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the architecture adequately address&amp;nbsp;the&amp;nbsp;Reliability requirements?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the architecture adequately address&amp;nbsp;the&amp;nbsp;Performance requirements?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the architecture adequately address&amp;nbsp;the&amp;nbsp;Supportability requirements?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does the architecture adequately address&amp;nbsp;the other needs identified in the&amp;nbsp;&lt;a class=&quot;elementLink&quot;&#xD;
        href=&quot;./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot;&#xD;
        guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting Requirements&lt;/a>?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Can the architecture be delivered by the team?" briefDescription="" id="_PHv_kCALEduY2JH31Kkn-A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        Does the component architecture provide a suitable basis for organizing the development teams?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Does each team have the skills required to implement their allocated components?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are responsibilities divided well between teams?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Do all team members share the same understanding of the architecture as the one presented by the architect?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Can team members understand enough from the architecture to successfully design and code their allocated&#xD;
        components?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Is architecture showing appropriate stability?" briefDescription="" id="_A8m2YMm7EduiAPR4gd-qxA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul>&#xD;
    &lt;li>&#xD;
        If in Inception, is&amp;nbsp;a candidate&amp;nbsp;architecture emerging?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If in Elaboration, is the architecture beginning to stabilize?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If in Construction, is the architecture generally stable?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        If in Transition, is the architecture very stable?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="In general, does the architecture seem sensible?" briefDescription="" id="_aOKkwMm8EduiAPR4gd-qxA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;ul class=&quot;noindent&quot;>&#xD;
    &lt;li>&#xD;
        Is the&amp;nbsp;architecture&amp;nbsp;at an appropriate level of detail, given the objectives?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are concepts&amp;nbsp;handled in the simplest way possible?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Can the&amp;nbsp;architecture easily evolve,&amp;nbsp;so that&amp;nbsp;expected changes can be easily accommodated?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        At the same time, has the&amp;nbsp;architecture been overly structured to handle unlikely change at the expense of&#xD;
        simplicity and comprehensibility? (Hint: &quot;Yes&quot; to this question is not good).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are the key assumptions and decisions that the&amp;nbsp;architecture is based on documented and visible to reviewers&#xD;
        and consumers of the architecture?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Is the architecture description current?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Have the design guidelines been followed?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Are all technical risks either mitigated or addressed in a contingency plan?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
          </Presentation>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="layering" briefDescription="Guidance on the possible ways for partitioning the system." id="_0gpkAMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Layering" variabilityType="na">
          <Presentation name="layering,_0gpkAMlgEdmt3adZL5Dmdw" briefDescription="" id="_lbGQwMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T01:37:43" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Layering logically partitions the subsystems into a number of sets, with certain rules regarding how relationships can
    be formed between the layers. Layering provides a way to restrict inter-subsystem dependencies, with the result that
    the system is more loosely coupled and, therefore, more easily maintained.
</p>
<p>
    Consider the number and purpose of the layers carefully. Do not over-complicate the solution by defining more layers
    than are needed to meet the needs of the solution. More layers can always be added in the future to meet new
    requirements. Removing layers is not always as easy and may introduce risks into the project.
</p>
<p>
    The criteria for grouping subsystems follow a few patterns:
</p>
<ul>
    <li>
        <b>Visibility</b><strong>:</strong> Subsystems may depend only on subsystems in the same layer and the next-lower
        layer.
    </li>
    <li>
        <b>Volatility</b><strong>:</strong> 
        <ul>
            <li>
                <b>In the highest layers</b>, put elements that vary when user requirements change.
            </li>
            <li>
                <b>In the lowest layers</b>, put elements that vary when the implementation platform changes (hardware,
                language, operating system, database, and so forth).
            </li>
            <li>
                <strong>Sandwiched in the middle</strong>, put elements that are generally applicable across wide ranges of
                systems and implementation environments.
            </li>
            <li>
                <strong>Add layers</strong> when additional partitions within these broad categories help to organize the
                model.
            </li>
        </ul>
    </li>
    <li>
        <b>Generality</b><strong>:</strong> Abstract model elements tend to be placed lower in the model. If not
        implementation-specific, they tend to gravitate toward the middle layers.
    </li>
    <li>
        <b>Number of layers.</b> For a small system, three layers are sufficient. For a complex system, five to seven
        layers are usually sufficient. For any degree of complexity, more than 10 layers should be viewed with suspicion
        that increases with the number of layers. The table that follows gives you a few guidelines.
    </li>
</ul>
<p align="center">
    <strong>Guideline for number of layers according to number of classes</strong>
</p>
<div align="center">
    <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="0" bordercolordark="#808080" cellpadding="4" width="58%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <th width="40%">
                    <p align="center" scope="col">
                        <b>Number of Classes</b>
                    </p>
                </th>
                <th width="60%">
                    <p align="center" scope="col">
                        <b>Number of Layers</b>
                    </p>
                </th>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        0 - 10
                    </p>
                </td>
                <td width="60%">
                    <blockquote>
                        <blockquote>
                            <p>
                                No layering needed
                            </p>
                        </blockquote>
                    </blockquote>
                </td>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        10 - 50
                    </p>
                </td>
                <td width="60%">
                    <blockquote>
                        <blockquote>
                            <p>
                                2 layers
                            </p>
                        </blockquote>
                    </blockquote>
                </td>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        25 - 150
                    </p>
                </td>
                <td width="60%">
                    <blockquote>
                        <blockquote>
                            <p>
                                3 layers
                            </p>
                        </blockquote>
                    </blockquote>
                </td>
            </tr>
            <tr>
                <td width="40%">
                    <p align="center">
                        100 - 1000
                    </p>
                </td>
                <td width="60%">
                    <blockquote>
                        <blockquote>
                            <p>
                                4 layers
                            </p>
                        </blockquote>
                    </blockquote>
                </td>
            </tr>
        </tbody>
    </table>
</div>
<p>
    Failure to restrict dependencies according to Visibility criteria mentioned above can cause architectural degradation
    and make the system difficult to extend and maintain.
</p>
<p>
    Exceptions include cases where subsystems need direct access to lower-layer services. Make a decision about how to
    handle primitive services that are needed throughout the system, such as printing, sending messages, and so forth.
    There is little value in restricting messages to lower layers if the solution is to effectively implement call
    pass-throughs in the intermediate layers.
</p>
<h4>
    <a id="PartitioningPatterns" name="PartitioningPatterns">Partitioning patterns</a>
</h4>
<p>
    Within the top layers of the system, additional partitioning may help organize the model. The following guidelines for
    partitioning present different issues to consider:
</p>
<p>
    <b>User organization</b><strong>:</strong> Subsystems may be organized along lines that mirror the organization of
    functionality in the business organization (partitioning occurs along departmental lines). This partitioning often
    occurs early in the design because an existing enterprise model that is strongly partitioned according to the structure
    of the organization. This pattern usually affects only the top few layers of application-specific services and often
    disappears as the design evolves.
</p>
<ul>
    <li>
        <p>
            Partitioning along user-organization lines can be a good starting point for the model.
        </p>
    </li>
    <li>
        <p>
            The structure of the user organization is not stable over a long period of time because business
            reorganizations occur; therefore, it is not a good long-term basis for system partitioning. The internal
            organization of the system should enable the system to evolve and be maintained independently of the
            organization of the business that it supports.
        </p>
    </li>
</ul>
<p>
    <b>Areas of competence and skills:</b> Subsystems may be organized to partition responsibilities for parts of the model
    among different groups within the development organization. Typically, this occurs in the middle and lower layers of
    the system, and reflects the need for specialization in skills during the development and support of an infrastructure
    based on complex technology. Examples of such technologies include network and distribution management, database
    management, communication management, and process control, among others. Partitioning along competence lines may also
    occur in upper layers, where special competency in the problem domain is required to understand and support key
    business functionality. Examples include telecommunication call management, securities trading, insurance claims
    processing, and air traffic control, to name a few.
</p>
<p>
    <b>System distribution:</b> Within any of the layers of the system, the layers may be further partitioned horizontally,
    so to speak, to reflect the distribution of functionality.
</p>
<ul>
    <li>
        <p>
            Partitioning to reflect distribution of functionality can help you visualize the network communication that
            will occur as the system runs.
        </p>
    </li>
    <li>
        <p>
            Partitioning to reflect distribution can also, however, make the system more difficult to change if the
            deployment model changes significantly.
        </p>
    </li>
</ul>
<p>
    <b>Secrecy areas</b><strong>:</strong> Some applications, especially those requiring special security clearance to
    develop or support, require additional partitioning according to security access privileges. Software that controls
    access to secrecy areas must be developed and maintained by personnel with appropriate clearance. If the number of
    people with this background on the project is limited, the functionality requiring special clearance must be
    partitioned into subsystems that will be developed independently from other subsystems, with the interfaces to the
    secrecy areas the only visible aspect of these subsystems.
</p>
<p>
    <b>Variability areas:</b> Functionality that is likely to be optional, and therefore delivered only in some variants of
    the system, should be organized into independent subsystems that are developed and delivered independently from the
    mandatory functionality of the system.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
          <Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="repres_interfaces_to_ext_systems" briefDescription="This guideline introduces system level interfaces." id="_0gjdYMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Representing Interfaces to External Systems" variabilityType="na">
          <Presentation name="repres_interfaces_to_ext_systems,_0gjdYMlgEdmt3adZL5Dmdw" briefDescription="" id="_iCwb8MM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T01:05:55" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Interfaces with external systems should be consistently handled throughout the system, so markers need to be identified
    in the architecture to make sure that the team develop the coherant software. The architecture need not include a
    specific, detailed design for each system interface. It is often enough to simply identify the existence of the
    interfacre as a significant part of the architecture and create a subsystem to encapsulate the detail, so that it can
    be developed later.
</p>
<p>
    The <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html"
    guid="_uF-QYEAhEdq_UJTvM1DM2Q">Entity-Control-Boundary Pattern</a>&nbsp;provides the basis for a useful technique to
    support this.
</p>
<p>
    If the system communicates with another system, define one or more boundary classes to describe the communication
    protocol. An external system may be anything from software to hardware units that the current system will use, such as
    printers, terminals, alarm devices, and sensors. In each case, a boundary class that mediates the communication with
    the external system will be identified.
</p>
<p>
    Example:
</p>
<blockquote>
    <p>
        An automated teller machine (ATM) must communicate with the ATM network to ascertain whether a customer's bank
        number and PIN are correct, and whether the customer has sufficient funds to withdrawal the requested amount. The
        ATM network is an external system (from the perspective of the ATM); therefore, you would use a
        <strong>boundary</strong> class to represent it in a use-case analysis.
    </p>
</blockquote>
<p>
    If the interfaces with the system are simple and well-defined, a single class may be sufficient to represent the
    external system. Often, however, these interfaces are too complex to be represented by using a single class; they often
    require complex collaborations of many classes. Moreover, interfaces between systems are often highly reusable across
    applications. As a result, in many cases, a subsystem models the system interfaces more appropriately.
</p>
<p>
    The use of a subsystem allows the interface to the external system to be defined and stabilized, while leaving the
    design details of the system interface hidden as the system evolves.<br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="analyze_arch_reqs" briefDescription="This guideline provides additional information to support the analysis of architecturally significant requirements and the creation of an outline architecture." id="_42UD4A3tEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Analyze the Architectural Requirements" variabilityType="na">
          <Presentation name="analyze_arch_reqs,_42UD4A3tEduibvKwrGxWxA" briefDescription="" id="-YeVRerdEixh4HgHOuw2KRQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T12:12:32" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h4>
    Identify architectural goals
</h4>
<p>
    Architectural goals provide the motivation and rationale&nbsp;for decisions. These goals are&nbsp;often driven
    by&nbsp;the software requirements, particularly in&nbsp;<a class="elementLink"
    href="./../../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html"
    guid="_BVh9cL-CEdqb7N6KIeDL8Q">Supporting Requirements</a>, because they are not always&nbsp;obvious from&nbsp;the use
    cases alone [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">ALL02</a>].
</p>
<p>
    Architectural goals define how the system needs to respond to change over time. Consider these questions when writing
    your goals:
</p>
<ul>
    <li>
        What is the expected lifespan of the system?
    </li>
    <li>
        Will the system need to respond to technological changes over that time, such as new versions of middleware or
        other products?
    </li>
    <li>
        How&nbsp;frequently is&nbsp;the system&nbsp;expected to adapt to change?
    </li>
    <li>
        What changes can we anticipate in the future, and how can we make them easier to accommodate?
    </li>
</ul>
<p>
    These considerations will have a significant effect on the structure of the system.
</p>
<h4>
    Identify architectural constraints
</h4>
<p>
    Ginformation about the existing&nbsp;environment and identify any constraints in the solution. This will ease
    integration with the environment; and m ay reduce risk, cost and duplication of solution elements.
</p>
<p>
    Architectural constraints can arise from various factors:
</p>
<div style="MARGIN-LEFT: 2em">
    <ul>
        <li>
            Network topology
        </li>
        <li>
            Use of a given database vendor or an existing database
        </li>
        <li>
            Web environment (server configurations, firewall, DMZs, and so forth)
        </li>
        <li>
            Servers (hardware model, operating system)
        </li>
        <li>
            Use of third-party software or a particular technology
        </li>
        <li>
            Compliance with existing standards
        </li>
    </ul>
</div>
<p>
    For example, if the company uses only one type of database, you will probably try to use it as much as possible to
    leverage&nbsp;the existing database administration skills, rather than introducing a new one.
</p>
<p>
    These architectural constraints, combined with the requirements, help you define&nbsp;an appropriate&nbsp;candidate for
    the system architecture.
</p>
<h4>
    Survey, assess, and select from available assets
</h4>
<p>
    To assess and select assets to reuse on your project, you need to understand the requirements of the system's
    environment. You also need to understand the scope and general functionality of the system that the Stakeholders
    require. There are several types of assets to consider, including (but not limited to): reference architectures;
    frameworks; patterns; analysis mechanisms; classes; and experience. You can search asset&nbsp;repositories (internal or
    external to your organization) and industry literature to identify assets or similar projects.
</p>
<p>
    You need to assess whether available assets contribute to solving the key challenges of the current project and whether
    they are compatible with the project's architectural constraints. You also need to analyze the extent of the fit
    between assets and requirements, considering whether any of the requirements are negotiable (to enable use of the
    asset). Also, assess whether the asset could be modified or extended to satisfy requirements, as well as what the
    tradeoffs in adopting it are, in terms of cost, risk, and functionality.
</p>
<p>
    Finally, decide, in principle, whether to use one or more assets, and record the rationale for this decision.
</p>
<h4>
    Define approach for structuring the system
</h4>
<p>
    Structuring your system helps you manage its complexity by using the well-known "divide and conquer" strategy. By
    breaking the process into smaller and more manageable pieces, you make development easier.
</p>
<p>
    Layering&nbsp; is&nbsp;one of the most&nbsp;commonly used&nbsp;approaches for structuring and decomposing systems. Each
    layer groups similar classes or components, which communicate insofar as possible only with adjacent layers.&nbsp; See
    <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/guidelines/layering,_0gpkAMlgEdmt3adZL5Dmdw.html"
    guid="_0gpkAMlgEdmt3adZL5Dmdw">Guideline: Layering</a> for more information.
</p>
<p>
    You do not define which layers contain which classes or components. Instead, you define how many layers you will need
    and which kinds of layers you will use. For example, if you are developing a new middleware system, you probably do not
    need a business layer. Later, during&nbsp;design activities, you decide which classes and components will populate
    these layers.
</p>
<h4>
    Define approach for deploying the system
</h4>
<p>
    Develop a high level overview of how the software is deployed. For example, determine if the system needs to be
    accessed remotely, or has requirements that suggest distribution across multiple nodes. Some sources of information to
    consider are:
</p>
<ul>
    <li>
        users at geographical locations
    </li>
    <li>
        organization of business data
    </li>
    <li>
        service level requirements
    </li>
    <li>
        constraints (such as requirements to interface with legacy systems)
    </li>
</ul>
<p>
    Validate that the deployment overview supports users (especially those users at remote locations if this is required)
    performing typical&nbsp;usage scenarios&nbsp;while satisfying nonfunctional requirements and constraints. Validate that
    the nodes and connections are adequate to support the interactions between components on different nodes, and between
    components and their stored data.
</p>
<h4>
    Identify key abstractions
</h4>
<p>
    Requirements and analysis tasks usually uncover key concepts that the system must be able to handle. These concepts
    manifest in design as key abstractions.&nbsp;The <a class="elementLink"
    href="./../../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html"
    guid="_0WVxcMlgEdmt3adZL5Dmdw">Vision</a> and <a class="elementLink"
    href="./../../../openup_basic/workproducts/glossary,_Wn7HcNcEEdqz_d2XWoVt6Q.html"
    guid="_Wn7HcNcEEdqz_d2XWoVt6Q">Glossary</a> work products are good sources for key abstractions. These abstractions are
    often easily identified because they represent things that are significant to the business. For example, Customer and
    Account are typical key abstractions in the banking business.
</p>
<p>
    The abstractions that&nbsp;are identified at this point will also probably change and evolve during the course of the
    project. The purpose of this step is not to identify&nbsp;the complete&nbsp;set of classes and relationships that will
    survive throughout design.&nbsp;Rather, it is&nbsp;to identify the&nbsp;important&nbsp;concepts that the system must
    handle. The value in calling them out arly in the project is that everyone on the team understands the importance of
    these&nbsp;concepts and develops&nbsp;coherant software to handle them consistently.
</p>
<p>
    Don't spend too much time describing&nbsp;abstractions in detail at this initial stage, because there is a risk that
    spending too much time will result in identifying classes and relationships that the solution does not actually need.
    When&nbsp;identifying&nbsp;key abstractions, it can be useful to also define any obvious relationships that exist
    between them.&nbsp;These can be captured in a table or&nbsp;in diagrams (in a tool or whiteboard), and create a short
    description for each abstraction.&nbsp;In general, it is not worth agonizing over defining a highly detailed set of
    relationships at this early stage in design. The relationships will become more concrete and detailed later and
    will&nbsp;probably modify&nbsp;these early&nbsp;assumptions.
</p>
<h4>
    Identify&nbsp;architecture mechanisms
</h4>
<p>
    See&nbsp;<a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Concept: Architectural Mechanism</a>.
</p>
<h4>
    Capture architectural decisions
</h4>
<p>
    It is often useful to record key architectural decisions and working assumptions on an architectural overview diagram
    to make it easier to communicate the architecture to the project team and stakeholders.&nbsp;This information should be
    part of the description of the architecture, but it can vary in format to suit the needs of the project.&nbsp;For
    example, on an agile and low-ceremony project the overview diagram can be an informal picture story board or a graph
    with icons on either a whiteboard or a drawing tool. The illustration needs to show the nature of the proposed
    solution, convey the governing ideas, and represent the major building blocks.
</p>
<p>
    Architecture decisions should be captured in the <a class="elementLinkWithType"
    href="./../../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html"
    guid="_0XAf0MlgEdmt3adZL5Dmdw">Artifact: Architecture</a>.
</p>
<p>
    If a more complex system is required, then the architecture can be represented as a more comprehensive set
    of&nbsp;views that describe the architecture from a number of viewpoints. See <a class="elementLink"
    href="./../../../openup_basic/guidances/guidelines/architectural_view,_T9nygClEEduLGM8dfVsrKg.html"
    guid="_T9nygClEEduLGM8dfVsrKg">Architectural View</a>&nbsp;for more information.<br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Guideline>_0gpkAMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_T9nygClEEduLGM8dfVsrKg</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="arch_mech" briefDescription="Architectural Mechanisms are common solutions to common problems that can be used during development to minimize complexity." id="_mzxI0A4LEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Architectural Mechanism" variabilityType="na">
          <Presentation name="arch_mech,_mzxI0A4LEduibvKwrGxWxA" briefDescription="" id="-SJrpVySJ2npYs8NwGvnHjw" orderingGuide="" suppressed="false" authors="Mark Dickson" changeDate="2007-02-26T02:36:32" changeDescription="Simplified text explaining mechanism concept" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Architectural Mechanisms are&nbsp;used to satisfy architecturally significant requirements.&nbsp;When fully described,
    Architectural Mechanisms show patterns of structure and behavior in the software. They&nbsp;form the basis
    of&nbsp;common software&nbsp;that will be&nbsp;consistently applied&nbsp;across the product being developed. They also
    form the basis for standardizing the way that the software works; therefore, they are an important element of the
    overall software architecture. The definition of architecture mechanisms also enable decisions on whether existing
    software components can be leveraged to provide the required behaviour; or whether new software should be bought or
    built.
</p>
<p>
    The key point to take on board when discussing architecture mechanisms is that the defining them is all about making
    choices about *what* technology will be used to satisfy architecturally significant requirements. It is not about
    producing detailed design or software. This is a common misunderstanding. The creation of detailed design
    and&nbsp;software that&nbsp;shows&nbsp;*how* specific mechanisms&nbsp;are satisfied&nbsp;is&nbsp;a development task.
</p>
<p>
    The value in defining architecture mechanisms is that it
</p>
<ol>
    <li>
        explicitly calls out&nbsp;aspects of the solution mechanics that are common across the system. This aids planning.
    </li>
    <li>
        puts down markers for the developers to build those aspects of the system once and then re-use them. This reduces
        the workload.
    </li>
    <li>
        promotes the development of a consistent set of services. This makes the system easier to maintain.
    </li>
</ol>
<p>
    An&nbsp;Architectural Mechanism can have three states: Analysis, Design and Implementation.&nbsp;These
    categories&nbsp;reflect the state of the architectural mechanism over time. The state changes as successive levels of
    detail are uncovered during the refinement of architecturally significant requirements into working software. The
    categories are summarized in the table that follows.
</p>
<strong>States of an Architectural Mechanism</strong> 
<table style="WIDTH: 806px; HEIGHT: 228px" cellspacing="0" cellpadding="2" width="806"
summary="Types of Architectural Mechanism" border="1">
    <tbody valign="top">
        <tr>
            <th scope="col">
                State
            </th>
            <th scope="col">
                Description
            </th>
        </tr>
        <tr>
            <td>
                Analysis
            </td>
            <td>
                A conceptual solution to a common technical problem. For example,&nbsp;persistence is an abstract solution
                to the common requirement to store data. The purpose of this category is simply to identify the need for an
                Architectural Mechanism to be designed and implemented; and capture basic attributes for that mechanism.
            </td>
        </tr>
        <tr>
            <td>
                Design
            </td>
            <td>
                A refinement of an Analysis Mechanism into a concrete technology (for example, RDBMS). The purpose of this
                category is to enable initial design specifications to be produced and to guide precise product or
                technology selection.
            </td>
        </tr>
        <tr>
            <td>
                Implementation
            </td>
            <td>
                <p>
                    A further refinement of a Design Mechanism into a&nbsp;specific technology or product that implements
                    the required Architectural Mechanism. For example, MySQL, as a database product, implements the
                    Analysis Mechanism <strong>Persistence</strong> and Design Mechanism <strong>RDBMS.</strong>
                </p>
                <p>
                    This essentially represents the point at which the decision is made to re-use, buy or build specific
                    software to provide the services defined by the mechanism.
                </p>
            </td>
        </tr>
    </tbody>
</table>
<br />
<p>
    Be aware that these states are frequently referred to themselves as Analysis, Design and Implementation
    mechanisms.&nbsp;These are synonyms and merely represent the architecture mechanisms in different states of
    development. The transition from one state to another&nbsp;can often be obvious or intuitive. Therefore, it can be
    achieved in a matter of seconds. It can also require more considered analysis and design, thus take longer. The
    following diagram illustrates the transition of Architectural Mechanisms from one state to another.
</p>
<p>
    <strong>State Machine for Architectural Mechanisms</strong>
</p>
<p>
    <img style="WIDTH: 876px; HEIGHT: 115px" height="113" alt="Architectural Mechanism States"
    src="openup_basic/guidances/concepts/resources/ArchMechanismsStatemachine.JPG" width="600" />&nbsp;<br />
</p>
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_HrZGIA4MEduibvKwrGxWxA</Concept>
          <Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
          <Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
          <Guideline>_4k_HsA4LEduibvKwrGxWxA</Guideline>
          <Guideline>_4k_HsQ4LEduibvKwrGxWxA</Guideline>
          <Guideline>_4k_Hsg4LEduibvKwrGxWxA</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="design_mechanism" briefDescription="A Design Mechanism is a concrete representation of an Architectural Mechanism." id="_w2ACwA4LEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Design Mechanism" variabilityType="na">
          <Presentation name="design_mechanism,_hNXugOUuEdqGCpzGJ4tJOw" briefDescription="" id="-EG22TRyJ5TDKW6U88AXfhw" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T02:41:09" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p align="left">
    A Design Mechanism is a concrete representation of an&nbsp;<a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>. It is refined from an <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/analysis_mechanism,_0gvqoMlgEdmt3adZL5Dmdw.html"
    guid="_0gvqoMlgEdmt3adZL5Dmdw">Analysis Mechanism</a>&nbsp;and is further refined into an <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/implementation_mechanism,_0LcUkA4LEduibvKwrGxWxA.html"
    guid="_0LcUkA4LEduibvKwrGxWxA">Implementation Mechanism</a>&nbsp;as the design becomes more detailed.
</p>
<p align="left">
    Design Mechanisms can be&nbsp;represented as specific design patterns and frameworks&nbsp;in the <a class="elementLink"
    href="./../../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html"
    guid="_0WuL8slgEdmt3adZL5Dmdw">Design</a>. They are used&nbsp;to guide development&nbsp;(see <a class="elementLink"
    href="./../../../openup_basic/guidances/guidelines/using_patterns,_0cr7cACrEdu8m4dIntu6jA.html"
    guid="_0cr7cACrEdu8m4dIntu6jA">Using Patterns</a>). Design Mechanisms should still be relatively independent of
    implementation but provide enough detailed information for implementation choices to be made and software to be
    developed with confidence.
</p>
<p align="left">
    See <a class="elementLink"
    href="./../../../openup_basic/guidances/guidelines/example_design_mechanisms,_4k_Hsg4LEduibvKwrGxWxA.html"
    guid="_4k_Hsg4LEduibvKwrGxWxA">Example: Design Mechanisms</a>.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
          <Concept>_0LcUkA4LEduibvKwrGxWxA</Concept>
          <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
          <Guideline>_4k_Hsg4LEduibvKwrGxWxA</Guideline>
          <Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="implementation_mechanism" briefDescription="A representation of an Architecture Mechanism that uses a specific programming language or product." id="_0LcUkA4LEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Implementation Mechanism" variabilityType="na">
          <Presentation name="implementation_mechanisms,_3ANskOK5EdqHEo0wLIc5jg" briefDescription="" id="-Rex8oOBv985RruZNrCW0rg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-25T10:09:13" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    An Implementation Mechanism is a refinement of a corresponding Design Mechanism that uses, for example, a particular
    programming language and other implementation technology (such as a particular vendor's middleware product). An
    Implementation Mechanism may instantiate one or more idioms or implementation patterns.
</p>
<p>
    Review these points when you are considering Implementation Mechanisms:
</p>
<ul>
    <li>
        <p>
            <b>Determine the ranges of characteristics.</b> Take the characteristics that you identified for the Design
            Mechanisms into consideration to determine reasonable, economical, or feasible ranges of values to use in the
            Implementation Mechanism candidate.
        </p>
    </li>
    <li>
        <p>
            <b>Consider the cost of purchased components</b>. For Implementation Mechanism candidates, consider the cost of
            licensing, the maturity of the product, your history or relationship with the vendor, support, and so forth in
            addition to purely technical criteria.
        </p>
    </li>
    <li>
        <p>
            <b>Conduct a search for the right components, or build the components.</b> You will often find that there is no
            apparently suitable Implementation Mechanism for a particular Design Mechanism. This will either trigger a
            search for the right product or make the need for in-house development apparent. You may also find that some
            Implementation Mechanisms are not used at all.<br />
            <br />
            The choice of Implementation Mechanisms is based not only on a good match for the technical characteristics,
            but also on the non-technical characteristics, such as cost. Some of the choices may be provisional. Almost all
            have some risks attached to them. Performance, robustness, and scalability are nearly always concerns and must
            be validated by evaluation, exploratory prototyping, or inclusion in the architectural prototype.
        </p>
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0gvqoMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
          <Concept>_w2ACwA4LEduibvKwrGxWxA</Concept>
          <Guideline>_4k_Hsg4LEduibvKwrGxWxA</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="example_analysis_mechanisms_descr" briefDescription="Examples showing how to describe Analysis Mechanisms" id="_4k_HsA4LEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Example Analysis Mechanism Descriptions" variabilityType="na">
          <Presentation name="new_guideline,_V4qNUAn_Edu0OeEVPFogVA" briefDescription="" id="-CJ--jlBqXi3FzdOM_dw5_w" orderingGuide="" suppressed="false" authors="" changeDate="2006-07-11T12:10:58" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p> The following shows how to capture information for <a class="elementLinkWithType"
    href="file:///c|/documents%20and%20settings/rbalduino/my%20documents/tng/beacon/copyedit/structure_for_importing/openup_basic/openup_basic/guidances/concepts/analysis_mechanism,_0gvqomlgedmt3adzl5dmdw.html"
    guid="_0gvqoMlgEdmt3adZL5Dmdw">Concept: Analysis Mechanism</a>. </p>
<h3> Persistence </h3>
<p>For all classes with instances that may become persistent, you need to identify: 
  
<ul>
  <li> 
    <p><b>Granularity</b><strong>:</strong> What is the range of size of the objects 
      to keep persistent?</p>
  </li>
  <li> 
    <p><b>Volume</b><strong>: </strong>How many objects (number) do you need to 
      keep persistent?</p>
  </li>
  <li> 
    <p><b>Duration</b><strong>:</strong> How long does the object typically need 
      to be kept?</p>
  </li>
  <li> 
    <p><b>Retrieval mechanism</b><strong>: </strong>How is a given object uniquely 
      identified and retrieved? </p>
  </li>
  <li> 
    <p><b>Update frequency</b><strong>: </strong>Are the objects more or less 
      constant? Are they permanently updated? </p>
  </li>
  <li> 
    <p><b>Reliability</b><strong>: </strong>Do the objects need to survive a crash 
      of the process, the processor, or the whole system? </li>
</ul>
<h3>Communication </h3>
<p>For all model elements that need 
  to communicate with components or services that are running in other processes 
  or threads, you need to identify </p>
<ul>
  <li> 
    <p><b>Latency</b><strong>: </strong>How 
      fast must processes communicate with another? </p>
  </li>
  <li> 
    <p><b>Synchronicity</b><strong>: 
      </strong>Asynchronous communication. </p>
  </li>
  <li> 
    <p><b>Size of message</b><strong>: 
      </strong>A spectrum might be more appropriate than a single number. </p>
  </li>
  <li> 
    <p><strong>Protocol:</strong> Flow control, buffering, 
      and so on.</p>
  </li>
</ul>
<p> Notice that there is no design-level 
  information or specification here. Instead, this is more about collating and 
  refining architecturally significant requirements. </p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="example_architectural_mechanisms" briefDescription="Commonly encountered architectural mechanisms" id="_4k_HsQ4LEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Example Architectural Mechanisms" variabilityType="na">
          <Presentation name="example_architectural_mechanisms,_4k_HsQ4LEduibvKwrGxWxA" briefDescription="" id="-FqP5LgLVrlhvFC_eeYd_vA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-19T10:56:22" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Here are some examples of commonly encountered architectural mechanisms.<br />
    <br />
</p>
<table cellspacing="0" cellpadding="2" width="85%" summary="Example Architectural Mechanisms" border="1" valign="top">
    <caption>
        <strong>Example Architectural Mechanisms</strong>
    </caption>
    <tbody>
        <tr>
            <th scope="col">
                Architectural Mechanism
            </th>
            <th scope="col">
                Description
            </th>
        </tr>
        <tr>
            <td>
                Availability
            </td>
            <td>
                The percentage of time that the system must be available for use, including planned outages.
            </td>
        </tr>
        <tr>
            <td>
                Archiving
            </td>
            <td>
                Provides a means to move data from active storage when it has reached a specific state.
            </td>
        </tr>
        <tr>
            <td>
                Auditing
            </td>
            <td>
                Provides audit trails of system execution.
            </td>
        </tr>
        <tr>
            <td>
                Communication
            </td>
            <td>
                A mechanism for handling inter-process communication.
            </td>
        </tr>
        <tr>
            <td>
                Debugging
            </td>
            <td>
                Provides elements to support application debugging.
            </td>
        </tr>
        <tr>
            <td>
                Disaster Recovery
            </td>
            <td>
                Provides facilities to recover systems, application, data and networks.
            </td>
        </tr>
        <tr>
            <td>
                Error Management
            </td>
            <td>
                Allows errors to be detected, propagated, and reported.
            </td>
        </tr>
        <tr>
            <td>
                Event Management
            </td>
            <td>
                Supports the use of asynchronous events within a system.
            </td>
        </tr>
        <tr>
            <td>
                Graphics
            </td>
            <td>
                Supports user interface services, such as 3D rendering.
            </td>
        </tr>
        <tr>
            <td>
                Information Exchange
            </td>
            <td>
                Supports information interchange accross technical and organisational boundaries, with appropriate semantic
                and format translations.
            </td>
        </tr>
        <tr>
            <td>
                Licensing
            </td>
            <td>
                Provides services for acquiring, installing, tracking, and monitoring license usage. Might be required as
                part of authorising corporate bodies.
            </td>
        </tr>
        <tr>
            <td>
                Localisation / Internationalisation
            </td>
            <td>
                Provides facilities for supporting multiple human languages and rendering the language preffered by the
                user.
            </td>
        </tr>
        <tr>
            <td>
                Mail
            </td>
            <td>
                Services that allow applications to send and receive electronic mail.
            </td>
        </tr>
        <tr>
            <td>
                Mega-data
            </td>
            <td>
                Support for handling very large amounts of data.
            </td>
        </tr>
        <tr>
            <td>
                Memory Management
            </td>
            <td>
                Services for abstracting how memory is allocated and freed.
            </td>
        </tr>
        <tr>
            <td>
                Meta-data
            </td>
            <td>
                Supports the runtime introspection of components and data.
            </td>
        </tr>
        <tr>
            <td>
                Online help
            </td>
            <td>
                Provides online help capability
            </td>
        </tr>
        <tr>
            <td>
                Persistence
            </td>
            <td>
                Services to&nbsp;handle&nbsp;the reading and&nbsp;writing of&nbsp;stored&nbsp;data.
            </td>
        </tr>
        <tr>
            <td>
                Printing
            </td>
            <td>
                Provides facilities for interfacing with printers.
            </td>
        </tr>
        <tr>
            <td>
                Process Management
            </td>
            <td>
                Provides support for the management of processes and threads.
            </td>
        </tr>
        <tr>
            <td>
                Reporting
            </td>
            <td>
                Provides flexible reporting facilities
            </td>
        </tr>
        <tr>
            <td>
                Resource Management
            </td>
            <td>
                Provides support for the management of expensive resources, such as database connections.
            </td>
        </tr>
        <tr>
            <td>
                Scheduling
            </td>
            <td>
                Provides the ability to execute tasks at a specified time.
            </td>
        </tr>
        <tr>
            <td>
                Security
            </td>
            <td>
                Provides services to protect access to certain resources or information.
            </td>
        </tr>
        <tr>
            <td>
                System Management
            </td>
            <td>
                Services that facilitate management of applications in an operational environment.
            </td>
        </tr>
        <tr>
            <td>
                Time
            </td>
            <td>
                Services to synchronise time on a network, and to translate times into different time zones.
            </td>
        </tr>
        <tr>
            <td>
                Transaction Management
            </td>
            <td>
                A mechanism for handling ACID transactions.
            </td>
        </tr>
        <tr>
            <td>
                Workflow
            </td>
            <td>
                Support for the movement of documents and other items of work, typically through an organisation.
            </td>
        </tr>
    </tbody>
</table>
<br />
<br />
<br />
<br />
 
<p>
    <br />
    <br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="example_design_mechanisms" briefDescription="Examples that show how to describe design mechanisms" id="_4k_Hsg4LEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Example: Design Mechanisms" variabilityType="na">
          <Presentation name="new_guideline,_K32gYAoBEdu0OeEVPFogVA" briefDescription="" id="-mAo18f36rZ1R98kpZX7HMw" orderingGuide="" suppressed="false" authors="" changeDate="2006-07-11T12:11:18" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3> Design 
  Mechanism Characteristics and Mapping</h3>
<p> Consider the analysis mechanism for <strong>persistence</strong>. </p>
<ul>
  <li> There might be a need for many (2,000) small objects (200 bytes each) to 
    be stored for a few seconds, with no need for them to 
    survive thereafter. </li>
  <li> There might be a need for several <strong></strong>very large <strong></strong> 
    objects to be stored permanently on disk for several months, never updated, 
    but with sophisticated means of retrieval. </li>
</ul>
<p> These objects require different support 
  for persistency. The best option depends on the characteristics 
  of the design mechanism:</p>
<ul>
    
  <li> <b>In-memory storag</b><strong>e: </strong>For up to 1 Mb total (size x 
    volume); very fast access for read, write, update. </li>
  <li> <b>Flash card</b><strong>:</strong> For up to 8 Mb; slow update and write 
    access; moderate read access. </li>
  <li> <b>Binary file</b><strong>:</strong> For 100 Kb to 200 Mb; slow update; 
    slow read-and-write access. </li>
  <li> <b>Database management system (DBMS)</b><strong>: </strong>For 100 Kb and 
    upward (essentially no upper limit); even slower update and read-and-write 
    access. </li>
</ul>
<p> Note that these speeds are rated as slow only as compared 
  to in-memory storage. Obviously, in some environments, caching can improve 
  apparent access times. (See Figure 1.)</p>
<blockquote>
    
  <p align="center"> <img height="221" title="Figure 1. Mapping Analysis Mechanisms to Design Mechanisms and Classes" alt="Mapping Analyis Mechanisms to Design Mechanisms and Classes" src="openup_basic/guidances/guidelines/resources/co_dmec1.gif"
        width="372" /> </p>
</blockquote>
<div align="center">
  <p><strong>Figure 1. Mapping Analysis Mechanisms to Design Mechanisms and Classes</strong></p>
  <h3 align="left">Mapping Design Mechanisms to Implementation Mechanisms </h3>
  <p align="left"> The <b>persistence</b> design mechanisms can be mapped to implementation 
    mechanisms as Figure 2 shows: </p>
  <p align="center"> <img height="216" title="Figure 2. How persistence design mechanism map to implementation mechanism" alt="How persistence design mechanism map to implementation mechanism" src="openup_basic/guidances/guidelines/resources/co_dmec2.gif" width="325" /></p>
  <p align="center"><strong>Figure 2. How persistence design 
    mechanism map to implementation mechanism</strong> </p>
  <p align="left">A possible mapping between analysis mechanisms and design mechanisms. 
    Dotted arrows mean "is specialized by," implying that the characteristics 
    of the design mechanisms are inherited from the analysis mechanisms but that 
    they will be specialized and refined. </p>
  <p align="left"> After you have finished optimizing the mechanisms, the following 
    mappings exist (see Figure 3): </p>
  <blockquote> 
    <p align="center"> <img height="110" title="Figure 3. Mapping structure after optimizing the mechanisms" alt="Illustration of mapping structure after optimizing the mechanisms" src="openup_basic/guidances/guidelines/resources/co_dmec3.gif" width="418" /> 
    </p>
    <p align="center" class="picturetext"><strong>Figure 3. Mapping structure 
      after optimizing the mechanisms </strong></p>
    <p align="left" class="picturetext">The design decisions for a client class 
      in terms of mappings between mechanisms. The Flight 
      class needs two forms of persistency<strong>:</strong> <strong>in-memory 
      storage</strong>, implemented by a predefined  
      library routine, and <strong>a database,</strong> implemented with an off-the-shelf 
      ObjectStorage product. </p>
  </blockquote>
  <p align="left"> The map must be navigable in both directions to make it easy 
    to determine client classes when changing implementation mechanisms. </p>
  <h4 align="left">Refining 
    the mapping between design and implementation mechanisms </h4>
</div>
<p> Initially, the mapping between design mechanisms and implementation mechanisms 
  is likely to be less than optimal, but it will get the project running, identify 
  unforeseen risks, and trigger further investigations and evaluations. As the 
  project continues and you gain more knowledge, you will need to refine the mapping. 
</p>
<p> Proceed iteratively to refine the mapping between design and implementation 
  mechanisms. Eliminate <strong></strong>redundant 
  paths, working both top-down and bottom-up. </p>
<p> <b>Working top-down: </b>When working top-down (from top to bottom), new and 
  refined use-case realizations will put new requirements on the necessary design 
  mechanisms through the analysis mechanisms that you need. These new requirements 
  might uncover additional characteristics of a design mechanism, forcing a split 
  between mechanisms. A compromise between the system's complexity and its performance 
  is also necessary: </p>
<ul>
    <li>
        Too many different design mechanisms make the system too complex.
    </li>
  <li> Too few design mechanisms can create performance problems for implementation 
    mechanisms that stretch the limits of the reasonable ranges of the values 
    of their characteristics. </li>
</ul>
<p> <b>Working bottom-up: </b>When working bottom-up (from bottom to top) and 
  investigating the available implementation mechanisms, you might find products 
  that satisfy several design mechanisms at once, but force some adaptation or 
  repartitioning of your design mechanisms. You want to minimize the number of 
  implementation mechanisms you use, but too few of them can also lead to performance 
  problems. </p>
<p> After you decide to use a DBMS to store class A objects, you might be tempted 
  to use it to store all objects in the system. This could be very inefficient 
  or very cumbersome. Not all objects that require persistency need to be stored 
  in the DBMS. Some objects may be persistent, but one application may access 
  them frequently, while other applications access them only infrequently. A hybrid 
  strategy, in which the object is read from the DBMS into memory and periodically 
  synchronized, may be the best approach. </p>
<blockquote>
  <p class="example"> <b>Example</b> </p>
  <p class="example"> A flight can be stored both in memory for fast access and 
    in a DBMS for long-term persistency. However, this triggers a need for a mechanism 
    to synchronize both. </p>
</blockquote>
<p> It is not uncommon to have more than one design mechanism associated with 
  a client class as a compromise between different characteristics. </p>
<p> Because implementation mechanisms often come in bundles in off-the-shelf components 
  (operating systems and middleware products), some optimization based on cost, 
  impedance mismatch, or uniformity of style needs to occur. Also, mechanisms 
  are often interdependent, which makes clear separation of services into design 
  mechanisms difficult. </p>
<blockquote> 
  <p class="example"> <b>Examples</b> </p>
  <ul>
    <li> The notification mechanism can be based on the inter-process communication 
      mechanism. </li>
    <li> The error reporting mechanism can be based on the persistency mechanism. 
    </li>
  </ul>
</blockquote>
<p> Refinement continues over the whole Elaboration phase, and is always a compromise 
  between: </p>
<ul>
    
  <li> An exact fit with the requirements of the clients of the design mechanism, 
    in terms of the expected characteristics. </li>
    <li>
        The cost and complexity of having too many different implementation mechanisms to acquire and integrate.
    </li>
</ul>
<p> The overall goal is always to have a simple, clean set of mechanisms that 
  give conceptual integrity, simplicity, and elegance to a large system. </p>
<h3> Describing Design Mechanisms </h3>
<p>
    As with analysis mechanisms, design mechanisms can be modeled using a collaboration, which may instantiate one or more
    architectural or design patterns (see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/using_patterns,_0cr7cACrEdu8m4dIntu6jA.html"
    guid="_0cr7cACrEdu8m4dIntu6jA">Concept: Using Patterns</a>).
</p>
<blockquote>
  <p> <strong>Example: A persistence mechanism </strong></p>
  <p> This example uses an instance of a pattern for RDBMS-based persistency drawn 
    from <strong></strong><a 
    href="http://java.sun.com/products/jdbc/index.html" target="_blank" ><u>Java&#8482; 
    Database Connectivity (JDBC)</u></a>. Although we present the design here, 
    JDBC supplies actual code for some of the classes. Therefore, it is a short 
    step from what is presented here to an implementation mechanism. </p>
</blockquote>
<p> Figure 4, titled <strong> JDBC: Static view,</strong> shows the classes (actually, 
  the classifier roles) in the collaboration. <strong></strong></p>
<p align="center"> <img height="382" title="Figure 4. JDBC: Static View" alt="Diagram of the figure titled Static View: JDBC shows the classes (actually, the classifier roles) in the collaboration. " src="openup_basic/guidances/guidelines/resources/jdbc1.gif" width="571" /></p>
<p align="center"> <strong>Figure 4. JDBC: Static view </strong></p>
<p align="left"> The yellow classes are the ones that were supplied. The others, 
  in tan (myDBClass and so on), 
  were bound by the designer to create the mechanism. </p>
<p align="left"> In a Java database class, a client will work with a <b>DBClass</b> 
  to read and write persistent data. The DBClass is responsible for accessing the JDBC database, using the <b>DriverManager</b> 
  class. Once a database <b>connection</b> is open, the DBClass can then create SQL statements that will be sent to the underlying RDBMS 
  and executed using the <b>Statement</b> class. The Statement class is what communicates with the database. The result of the SQL query 
  is returned in a <b>ResultSet</b> object.<span style="mso-spacerun: yes">&nbsp;</span> 
</p>
<p align="left"> The <b>DBClass</b> is responsible for making another class instance 
  persistent. It understands the OO-to-RDBMS mapping and can interface with the 
  RDBMS. The DBClass flattens the 
  object, writes it to the RDBMS, and then reads the object data from the RDBMS 
  and builds the object. Every class that is persistent has a corresponding DBClass.&nbsp; 
</p>
<p align="left"> The <b>PersistentClassList</b> is used to return a set of persistent 
  objects as a result of a database query, for example: DBClass.read(). 
</p>
<p align="left"> A series of dynamic views follow, in Figures 5 thorough 9, to 
  show how the mechanism actually works. <strong></strong></p>
<p align="center"> <img height="146" title="Figure 5. JDBC: Initialize" alt="Diagram of JDBC: Initialize" src="openup_basic/guidances/guidelines/resources/jdbc2.gif" width="285" /> 
</p>
<p align="center"> <b>Figure5. JDBC: Initialize</b> </p>
<p>
    Initialization must occur before any persistent class can be accessed.
</p>
<p> To initialize the connection to the database, the DBClass 
  must load the appropriate driver by calling the DriverManager 
  getConnection() operation with a URL, user, and password. </p>
<p> The operation getConnection() 
  attempts to establish a connection to the given database URL. The driver manager 
  attempts to select an appropriate driver from the set of registered JDBC drivers. 
</p>
<blockquote> 
  <p> <strong>Parameters</strong></p>
  <blockquote> 
    <p> <b>URL</b><strong>: </strong>A database URL in the form jdbc:subprotocol:subname. 
      This URL is used to locate the actual database server and is not Web-related, 
      in this instance. </p>
    <p> <b>user</b><strong>: </strong>The database user who is making the connection.</p>
    <p> <b>pass</b><strong>:</strong> The user's password </p>
  </blockquote>
  <p> <strong>Returns</strong></p>
  <blockquote>
    <p> A connection to the URL.</p>
  </blockquote>
</blockquote>
<p align="center"> <img height="253" title="Figure 6. JDBC: Create" alt="Diagram of JDBC: Crreate" src="openup_basic/guidances/guidelines/resources/jdbc3.gif" width="478" /> 
</p>
<p align="center"> <b>Figure 6. JDBC: Create</b> </p>
<p align="left"> To create a new class, the persistency client asks the DBClass 
  to create the new class. The DBClass 
  creates a new instance of PersistentClass with default values. The DBClass 
  then creates a new Statement using the Connection class createStatement()
  operation. The Statement runs, 
  and the data is added to the database.</p>
<p align="center"> <img height="352" title="Figure 7. JDBC: Read" alt="Diagram of JDBC: Read" src="openup_basic/guidances/guidelines/resources/jdbc4.gif" width="600" /> 
</p>
<p align="center"> <b>Figure 7. JDBC: Read</b> </p>
<p> To read a persistent class, the persistency client asks the DBClass 
  to read. The DBClass creates 
  a new Statement using the Connection class createStatement() operation. The Statement is executed, and the 
  data is returned in a ResultSet object. The DBClass then creates 
  a new instance of the PersistentClass and populates it with the retrieved data. The data is returned in a collection 
  object, an instance of the PersistentClassList class. </p>
<p> <strong>Note: </strong></p>
<p>The string passed to executeQuery() 
  is not necessarily exactly the same string as the one passed into the 
  read(). The DBClass 
  will build the SQL query to retrieve the persistent data from the database, 
  using the criteria passed into the . 
  This is because it is not useful for the client of the DBClass 
  to know the internal structure of the database to create a valid query. This 
  knowledge is encapsulated within DBClass. 
</p>
<p align="center"> <img height="255" title="Figure 8. JDBC: Update" alt="Diagram of JDBC: Update" src="openup_basic/guidances/guidelines/resources/jdbc5.gif" width="473" /> 
</p>
<p align="center"> <b>Figure 8. JDBC: Update</b> </p>
<p> To update a class, the persistency client asks the 
  DBClass to update. The DBClass 
  retrieves the data from the given PersistentClass object, and creates a new Statement 
  using the Connection class createStatement() 
  operation. Once the Statement 
  is built, the database is updated with the new data from the class. </p>
<p> <strong>Remember: </strong>It is the job of the DBClass 
  to flatten the PersistentClass and 
  write it to the database. That is why it must be retrieved from the given PersistentClass 
  before creating the SQL Statement. 
</p>
<p> <strong>Note: </strong></p>
<p>In the above mechanism, the PersistentClass 
  must provide access routines for all persistent data so that 
  DBClass can access them. This provides external access to certain persistent 
  attributes that would have been private otherwise. This is a price you have 
  to pay to pull the persistence knowledge out of the class that encapsulates 
  the data.</p>
<p align="center"> <img height="255" title="Figure 9. JDBC: Delete" alt="Diagram of JDBC: Delete" src="openup_basic/guidances/guidelines/resources/jdbc6.gif" width="473" /> 
</p>
<p align="center"> <b>Figure 9. JDBC: Delete</b></p>
<p align="left"> To delete a class, the persistency client asks the DBClass to delete the PersistentClass. 
  The DBClass creates a new Statement  using the Connection class createStatement() 
  operation. The Statement is 
  executed and the data is removed from the database. </p>
<p align="left"> In the actual implementation of this design, you would make some 
  decisions about the mapping of DBClass 
  to the persistent classes, such as having one DBClass 
  per persistent class and allocating them to appropriate packages. These packages 
  will depend on<strong> </strong>the supplied java.sql file (see <a href="http://java.sun.com/products/jdbc/index.jsp">JDBC: 
  API Documentation</a>)<strong> </strong>package that contains the supporting 
  classes DriverManager, Connection, Statement, 
  and ResultSet. </p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="architecturally_significant_requirements" briefDescription="Some requirements have a profound impact on the architecture of the solution and require special attention." id="_HrZGIA4MEduibvKwrGxWxA" orderingGuide="" suppressed="false" presentationName="Architecturally Significant Requirements" variabilityType="na">
          <Presentation name="new_concept,_eFElAOK2EdqHEo0wLIc5jg" briefDescription="" id="-EytH4BCNGiHF6pZrp8ISCw" orderingGuide="" suppressed="false" authors="Mark Dickson" changeDate="2006-07-07T01:53:04" changeDescription="First Draft" version="1.0">
            <MainDescription><![CDATA[<p> Not all requirements have equal significance in the architecture.&nbsp;Some 
  play an important role in determining the architecture of the 
  system, but others do not. </p>
<p> Deciding whether a specific requirement is architecturally significant is 
  often a matter of judgment. Typically, these are requirements that are 
  technically challenging, technically constraining, or central to the 
  system's purpose. </p>
<p> These are good examples of Architecturally Significant Requirements:</p>
 
<ul>
  <li> The system must record every modification to customer records for audit 
    purposes.</li>
  <li> The system must respond within 5 seconds.</li>
  <li> The system must&nbsp;deploy on Microsoft Windows XP and Linux. </li>
  <li> The system must encrypt all network traffic.</li>
  <li> The ATM system must dispense cash on&nbsp;demand&nbsp;to validated account 
    holders with sufficient cleared funds.</li>
</ul>
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="business_pattern" briefDescription="A re-usable portion of design that can be applied to multiple domain-specific activities." id="_Z53x0BapEduSTJywppIxVQ" orderingGuide="" suppressed="false" presentationName="Business Pattern" variabilityType="na">
          <Presentation name="new_concept,_RoSdMBWYEduCK502eDgjUQ" briefDescription="" id="-Of51hmgdsO_U2-pnbJ67Cg" orderingGuide="" suppressed="false" authors="" changeDate="2006-07-21T08:59:56" changeDescription="" version="">
            <MainDescription><![CDATA[<p> Business Patterns are a form of Design Pattern&nbsp;(see <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/using_patterns,_0cr7cACrEdu8m4dIntu6jA.html"
    guid="_0cr7cACrEdu8m4dIntu6jA">Concept: Using Patterns</a>) and are the business-domain 
  counterpart of <a
    class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/architecture_mechanism,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Concept: Architectural Mechanism</a>. Just as 
  similar problems in the technical domain may be solved by using Architecture 
  Mechanisms, similar problems in the business domain can be solved by using Business 
  Patterns. </p>
<p> Business Patterns are often found in COTS products. For example, packaged 
  applications that support Enterprise Resource Planning or Customer Relationship 
  Management ship with functionality to support a variety of generic business 
  processes. Similarly, it is frequently possible to identify related or similar 
  behavior in the Use Case&nbsp;Scenarios&nbsp;and thereby derive generic designs 
  that you can use in the design of the system. These elements of generic behavior 
  can be&nbsp;expressed as Design&nbsp;Patterns and applied to the system design. 
</p>
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
          <Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="develop_architecture" briefDescription="This guideline provides additional information to support the ongoing refinement and development of the architecture." id="_mDf2EBapEduSTJywppIxVQ" orderingGuide="" suppressed="false" presentationName="Develop the Architecture" variabilityType="na">
          <Presentation name="develop_architecture,_mDf2EBapEduSTJywppIxVQ" briefDescription="" id="-t7mQSRPYITkMoYRVNz7jQg" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T12:44:53" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h4>
    Identify architectural priorities
</h4>
<p>
    Architecture&nbsp;priorities&nbsp;can take the form of&nbsp;one or more <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>s brought into scope by association to the scenarios
    prioritized for the current iteration. Other drivers may also be apparent. For example, it may be necessary to move
    certain aspects of the architecture from prototypical to production quality implementation; or explore certain aspects
    of the architecture to inform future iterations.
</p>
<p>
    The architectural&nbsp;priorities are often&nbsp;driven by&nbsp;the development of software that implements an&nbsp;<a
    class="elementLink" href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a>.&nbsp;It is important to specify the qualities of these
    mechasnisms precisely and this may lead you to supplement the usage scenarios with quality attributes. As more than one
    usage scenario may plkace demands on the same mechanisms, it may be helpful to consolidate these into quality
    scenarios.
</p>
<p>
    For example, if you want a system to be secure, specify the types of threats. Quality scenarios are one way to express
    desired qualities in collaboration with the system stakeholders [<a class="elementLinkWithUserText"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">KAZ04</a>]. Walk through things that could happen to the system and How it would
    respond. <strong>Use-case scenarios</strong> focus on run-time behavior where the stakeholder is the user.
    <strong>Quality scenarios</strong> encompass other interactions with the system as well, such as system maintenance
    staff modifying the system.
</p>
<p>
    Several scenarios may be devised for each quality attribute (such as usability, reliability, performance,
    or&nbsp;security). For instance, security scenarios for denial of service and unauthorized access. A good scenario
    makes clear what the stimulus is, what causes it, and what responses are appropriate.
</p>
<p>
    Example:
</p>
<blockquote>
    <p>
        During peak operation, an unauthorized intruder tries to download prohibited data through the system
        administrator’s interface. The system detects the attempt, blocks access, and notifies the supervisor within 15
        seconds.
    </p>
</blockquote>
<p>
    After you have collected the scenarios, you need to establish priorities for them. Use scenarios to realize
    requirements, so that their mapping onto the architecture, their impact, and their interactions can be understood.
</p>
<h4>
    Refine &nbsp;the architecture mechanisms
</h4>
<p>
    Consider each high-priority quality scenario, and map each of these onto the architecture mechanisms. Refine the
    mechanisms to identify the specific technology&nbsp;to be used&nbsp;to handle each mechanism in scope. For example, for
    the Persistence mechasnism, it may be appropriate to&nbsp;use a relational database management system such as
    MySQL.&nbsp;Consider the selection of technology in the context of the requirements and constraints.
</p>
<p>
    See <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Concept: Architectural Mechanism</a> for more information.
</p>
<h4>
    Identify Business Patterns
</h4>
<p>
    The&nbsp;architecture of&nbsp;a software system can often be characterised by a small number of essential scenarios.
    For example, for an on-line book store describing the way the software handles the scenarios for ordering a book and
    checking out the shopping cart are often enough to communicate the essence of the architecture. Such business patterns
    also provide a useful blueprint for similar functionality throughout the system.
</p>
<h4>

    Identify reuse opportunities
</h4>
<p>
    After looking for similar behavior and returned values, then look for similarity of parameters. If their
    interfaces&nbsp;are not an exact match for the component interfaces being proposed, you can modify the
    proposed&nbsp;signatures to increase the degree of reuse. Some design mechanisms, such as performance or security
    requirements, may disqualify a component from reuse even when there is&nbsp;a perfect match between operation
    signatures.
</p>
<p align="left">
    A common set of components may exist that provides many of the <a class="elementLink"
    href="./../../../openup_basic/guidances/concepts/arch_mech,_mzxI0A4LEduibvKwrGxWxA.html"
    guid="_mzxI0A4LEduibvKwrGxWxA">Architectural Mechanism</a> that you need&nbsp;for the new system. These components may
    be available either because they were developed or purchased previously for&nbsp;similar systems. Given their
    suitability and compatibility within the software architecture, there may be a need to reverse-engineer these
    components to represent them in a design model and reuse them in a project.
</p>
<p align="left">
    Similar thinking applies to&nbsp;existing databases. Part of the information to be used by the application under
    development may already reside in a database. You may be able to get the classes that represent the database structures
    that hold this information by reverse-engineering the database.
</p>
<h4 align="left">
    Identify architecturally significant design elements
</h4>
<p align="left">
    Consider&nbsp;each high-priority&nbsp;scenario in scope. Walk through the actions that the&nbsp;scenario initiates and
    highlight the areas of the architecture that participate in realizing, or implementing, the requirements.
</p>
<p>
    Identifying components will help hide the complexity of the system and help you work at a higher level. Components need
    to be internally cohesive and to provide external services through a limited interface. Component identification can
    be&nbsp;based on architectural layers, deployment choices, or key abstractions. Ask yourself these questions:
</p>
<ul>
    <li>
        What is logically or functionally related (same use case or service, for example)?
    </li>
    <li>
        What entities provide services to multiple others?
    </li>
    <li>
        What entities depend on each other? Strongly or weakly?
    </li>
    <li>
        What entities should you be able to exchange independently from others?
    </li>
    <li>
        What will run on the same processor or network node?
    </li>
    <li>
        What parts are constrained by similar performance requirements?
    </li>
</ul>
<p>
    Each component includes entities from the problem domain, control classes that coordinate complex tasks within
    components, and interfaces that handle communication with the environment. The interface for each instantiated element
    is identified. At this point, interfaces do not need to be as detailed as a signature, but they do need to document
    what the elements need, what they can use, and what they can depend on.
</p>
<p>
    Identified patterns define the types of elements, but not a specific number. Apply the chosen patterns to define a new
    set of elements that conform to the patterns. Functionality will be allocated to the instantiated elements.
</p>
<h4>
    Define development and test architectures
</h4>
<p>
    The development and test architectures may be different from the target production implementation.
</p>
<ul>
    <li>
        Additional software may need to be developed to support testing.
    </li>
    <li>
        Alternative deployment configurations may need to be defined in response to constraints on development hardware.
    </li>
    <li>
        Multiple environments may be required to support different categories of tests.
    </li>
</ul>
<p>
    In each case, you need to specify the architecture. Also, be sure to consider the impact on the quality of the overall
    architecture.
</p>
<h4>
    Validate the architecture
</h4>
<p>
    The surest way to validate the architecture is through software. The software developed up to the end of the
    Elbaoration Phase is largely aiming to validate the architecture, to the point where it can be baselined, thereby
    providing some level of stability during the Construction phase.
</p>
<p>
    It can also be useful to perform simple validation by walking through the main design concepts and models, perhaps
    around a whiteboard or through other collaborative techniques. This can help refine thinking but will not act as a
    subsitute for building some software.
</p>
<h4>
    Communicate decisions
</h4>
<p>
    You can document and communicate your decisions as many ways as you wish:
</p>
<ul>
    <li>
        Publication of&nbsp;reference source code.
    </li>
    <li>
        Publication of&nbsp;reference models.
    </li>
    <li>
        Publication of&nbsp;software architecture documentation.
    </li>
    <li>
        Formal&nbsp;presentations of the material.
    </li>
    <li>
        Informal walkthroughs of the architecture
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_Z53x0BapEduSTJywppIxVQ</Concept>
          <Guideline>_T9nygClEEduLGM8dfVsrKg</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="architectural_view" briefDescription="Architecture can be represented from a variety of viewpoints, all of which can be combined to create a holistic view of the system." id="_T9nygClEEduLGM8dfVsrKg" orderingGuide="" suppressed="false" presentationName="Architectural View" variabilityType="na">
          <Presentation name=",_T9nygClEEduLGM8dfVsrKg" briefDescription="" id="-cnGBBA4NXmhTIjHjlHx4Mw" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-22T08:29:43" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p> As an Architect, you may want to consider the following views (not all views 
  are relevant to all systems or all the Stakeholders). This set of views is known 
  as the 4+1 Views of Software Architecture</strong> [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">KRU95</a>].. 
</p>
<p>
    <img height="254" alt="4+1 Views of Software Architecture" src="openup_basic/guidances/guidelines/resources/4plus1_2.jpg" width="405" />
</p>
<ul>
  <li> 
    <p> Use-case view:</strong> Describes functionality of the system, 
      its external interfaces, and its principal users. The use-case view&nbsp;contains 
      the <a class="elementLink" href="./../../../openup_basic/workproducts/uc_model,_0UCrZclgEdmt3adZL5Dmdw.html" guid="_0UCrZclgEdmt3adZL5Dmdw">Use-Case 
      Model</a>. This view is mandatory when using the 4+1 Views, because all 
      elements of the architecture should be derived from requirements. </p>
  </li>
  <li> 
    <p> Logical view: </strong>Describes how the system is structured 
      in terms of units of implementation. The elements are packages, classes, 
      and interfaces. The relationship between elements shows dependencies, interface 
      realizations, part-whole relationships, and so forth. Note: </strong>This 
      view is mandatory when using the 4+1 Views of Software Architecture. </p>
  </li>
  <li> 
    <p>Implementation view: </strong>Describes how development artifacts 
      are organized in the file system. The elements are files and directories 
      (any configuration items). This includes development artifacts and deployment 
      artifacts. This view is optional when using the 4+1 Views. </p>
  </li>
  <li> 
    <p>Process view: </strong>Describes how the run-time system is structured 
      as a set of elements that have run-time behavior and interactions. Run-time 
      structure often bears little resemblance to the code structure. It consists 
      of rapidly changing networks of communication objects. The elements are 
      components that have run-time presence (processes, threads, Enterprise JavaBeans&#8482; 
      (EJB&#8482;), servlets, DLLs, and so on), data stores, and complex connectors, 
      such as queues. Interaction between elements varies, based on technology. 
      This view is useful for thinking </strong>about 
      run-time system quality attributes, such as performance and reliability. 
      This view is optional when using the 4+1 Views. </p>
  </li>
  <li> 
    <p> Deployment views: </strong>Describe how the system is mapped to 
      the hardware. This view is optional when using the 4+1 Views. </p>
  </li>
</ul>
<p>In addition, you may wish to represent the following, </p>
<ul>
  <li>
    <p> Data view:</strong> A specialization of the logical view. Use 
      this view if persistence is a significant aspect of the system, and the 
      translation from the design model to the data model is not done automatically 
      by the persistence mechanism. </p>
  </li>
</ul>
<p><br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Role" name="architect_sln" briefDescription="" id="_cH6f0DR7EduwLdLujGQAIQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0X9iEMlgEdmt3adZL5Dmdw" variabilityType="contributes">
          <Concept>__O7tAMVvEduLYZUGfgZrkQ</Concept>
          <ResponsibleFor>_0XAf0MlgEdmt3adZL5Dmdw</ResponsibleFor>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="abstract_away_complexity" briefDescription="" id="_we3F4ACpEdu8m4dIntu6jA" orderingGuide="" suppressed="false" presentationName="Abstract Away Complexity" variabilityType="na">
          <Presentation name="abstract_away_complexity,_we3F4ACpEdu8m4dIntu6jA" briefDescription="" id="-X7QSjItNBz7w8603yBCv0Q" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-08T01:14:04" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Software&nbsp;development is a pursuit characterized by complexity. This can take many forms, such as accommodating
    complex requirements, technology, or team dynamics. Elevating the level of abstraction helps you manage this complexity
    and make measurable progress, despite the inherent difficulty of the task.
</p>
<p>
    Suggestions for several strategies that help abstract away complexity follow.
</p>
<h4>
    Leverage patterns
</h4>
<p>
    Patterns help you take advantage of proven techniques for solving common problems. You can benefit from the experience
    of seasoned practitioners and avoid "re-inventing the wheel," as the saying goes. The use of patterns is a crucial
    aspect of an architecture-centric approach to development, because it helps reduce the novelty and diversity of a
    solution, thus improves quality.
</p>
<p>
    See <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/pattern,_0YJvUMlgEdmt3adZL5Dmdw.html"
    guid="_0YJvUMlgEdmt3adZL5Dmdw">Concept: Pattern</a>&nbsp;for more information.
</p>
<h4>
    Design the architecture with components and services
</h4>
<p>
    This strategy helps manage software complexity through&nbsp;partitioning&nbsp;a system into a set of loosely coupled
    and highly cohesive subsystems. The benefits of this approach include the ability to organize the team around a set of
    smaller, more manageable objectives, and the ability to substitute parts of the system without disturbing the overall
    cohesion of the system. Exposing services encourages re-use by making the functionality of the system easier to
    comprehend. Focusing on services makes it possible to understand what the system does from a technical perspective
    without necessarily having to understand the details of how the system works.
</p>
<p>
    See <a class="elementLinkWithType"
    href="./../../../openup_basic/guidances/concepts/component,_0YP18MlgEdmt3adZL5Dmdw.html"
    guid="_0YP18MlgEdmt3adZL5Dmdw">Concept: Component</a>&nbsp;for more information.
</p>
<h4>
    Actively promote reuse
</h4>
<p>
    Incorporating existing software into an overall architecture helps reduce cost and improve quality by reusing proven
    working software, rather than developing from scratch. It also helps reduce the burden of maintenance by eliminating
    duplication in the software. Although often difficult to manage, a project or enterprise can reap significant benefits
    from a well-executed re-use strategy.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0YJvUMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_0YP18MlgEdmt3adZL5Dmdw</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="software_architecture" briefDescription="The software architecture represents the structure or structures of the system, which consists of software components, the externally visible properties of those components, and the relationships among them." id="__O7tAMVvEduLYZUGfgZrkQ" orderingGuide="" suppressed="false" presentationName="Software Architecture" variabilityType="na">
          <Presentation name="new_concept,__O7tAMVvEduLYZUGfgZrkQ" briefDescription="" id="-UQ_e8kozIP11Xu008RJd-A" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T10:06:26" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Software architecture is a concept that is easy to understand, and that most engineers intuitively feel, especially
    with a little experience, but it is hard to define precisely. In particular, it is difficult to draw a sharp line
    between design and architecture-architecture is one aspect of design that concentrates on some specific features.
</p>
<p>
    In An Introduction to Software Architecture, David Garlan and Mary Shaw suggest that software architecture is a level
    of design concerned with issues: "Beyond the algorithms and data structures of the computation; designing and
    specifying the overall system structure emerges as a new kind of problem. Structural issues include gross organization
    and global control structure; protocols for communication, synchronization, and data access; assignment of
    functionality to design elements; physical distribution; composition of design elements; scaling and performance; and
    selection among design alternatives." <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[GAR93]</a>
</p>
<p>
    But there is more to architecture than just structure; the IEEE Working Group on Architecture defines it as "the
    highest-level concept of a system in its environment" <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[IEP1471]</a>. It also encompasses the "fit" with system integrity, with economical
    constraints, with aesthetic concerns, and with style. It is not limited to an inward focus, but takes into
    consideration the system as a whole in its user environment and its development environment - an outward focus.
</p>
<p>
    In OpenUP, the architecture of a software system (at a given point) is the organization or structure of the system's
    significant components interacting through interfaces, with components composed of successively smaller components and
    interfaces.
</p>
<h3>
    Architecture Description
</h3>
<p>
    To speak and reason about software architecture, you must first define an architectural representation, a way of
    describing important aspects of an architecture. In OpenUP, this description is captured in the <a
    class="elementLinkWithType" href="./../../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html"
    guid="_0XAf0MlgEdmt3adZL5Dmdw">Artifact: Architecture</a>.
</p>
<h3>
    Architectural Views
</h3>
<p>
    We have chosen to represent software architecture in multiple architectural views. Each architectural view addresses
    some specific set of concerns, specific to stakeholders in the development process: users, designers, managers, system
    engineers, maintainers, and so on.
</p>
<p>
    The views capture the major structural design decisions by showing how the software architecture is decomposed into
    components, and how components are connected by connectors to produce useful forms <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[PW92]</a>. These design choices must be tied to the Requirements, functional, and
    supplementary, and other constraints. But these choices in turn put further constraints on the requirements and on
    future design decisions at a lower level.
</p>
<h3>
    Architectural Focus
</h3>
<p>
    Although the views above could represent the whole design of a system, the architecture concerns itself only with some
    specific aspects:
</p>
<ul>
    <li>
        The structure of the model - the organizational patterns, for example, Layering.
    </li>
    <li>
        The essential elements - critical use cases, main classes, common mechanisms, and so on, as opposed to all the
        elements present in the model.
    </li>
    <li>
        A few key scenarios showing the main control flows throughout the system.
    </li>
    <li>
        The services, to capture modularity, optional features, product-line aspects.
    </li>
</ul>
<p>
    In essence, architectural views are abstractions, or simplifications, of the entire design, in which important
    characteristics are made more visible by leaving details aside. These characteristics are important when reasoning
    about:
</p>
<ul>
    <li>
        System evolution-going to the next development cycle.
    </li>
    <li>
        Reuse of the architecture, or parts of it, in the context of a product line.
    </li>
    <li>
        Assessment of supplementary qualities, such as performance, availability, portability, and safety.
    </li>
    <li>
        Assignment of development work to teams or subcontractors.
    </li>
    <li>
        Decisions about including off-the-shelf components.
    </li>
    <li>
        Insertion in a wider system.&nbsp;
    </li>
</ul>
<h3>
    Architectural Patterns
</h3>
<p>
    Architectural patterns are ready-made forms that solve recurring architectural problems. An architectural framework or
    an architectural infrastructure (middleware) is a set of components on which you can build a certain kind of
    architecture. Many of the major architectural difficulties should be resolved in the framework or in the
    infrastructure, usually targeted to a specific domain: command and control, MIS, control system, and so on.
</p>
<h4>
    Examples of Architectural Patterns
</h4>
<p>
    <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[BUS96]</a> groups architectural patterns according to the characteristics of the
    systems in which they are most applicable, with one category dealing with more general structuring issues. The table
    shows the categories presented in <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[BUS96]</a> and the patterns they contain.
</p>
<div align="center">
    <table
    style="BORDER-RIGHT: rgb(128,128,128) 1px solid; BORDER-TOP: rgb(128,128,128) 1px solid; BORDER-LEFT: rgb(128,128,128) 1px solid; BORDER-BOTTOM: rgb(128,128,128) 1px solid"
     cellspacing="0" bordercolordark="#808080" cellpadding="4" width="85%" bordercolorlight="#808080" border="1">
        <tbody>
            <tr>
                <th id="col1" width="50%">
                    Category
                </th>
                <th id="col2" width="50%">
                    Pattern
                </th>
            </tr>
            <tr>
                <th id="row2" align="left" headers="col1" width="50%" rowspan="3">
                    Structure
                </th>
                <td headers="row2 col2" width="50%">
                    Layers
                </td>
            </tr>
            <tr>
                <td headers="row2 col2" width="50%">
                    Pipes and Filters
                </td>
            </tr>
            <tr>
                <td headers="row2 col2" width="50%">
                    Blackboard
                </td>
            </tr>
            <tr>
                <th id="row3" align="left" headers="col1" width="50%">
                    Distributed Systems
                </th>
                <td headers="row3 col2" width="50%">
                    Broker
                </td>
            </tr>
            <tr>
                <th id="row4" align="left" headers="col1" width="50%" rowspan="2">
                    Interactive Systems
                </th>
                <td headers="row4 col2" width="50%">
                    Model-View-Controller
                </td>
            </tr>
            <tr>
                <td headers="row4 col2" width="50%">
                    Presentation-Abstraction-Control
                </td>
            </tr>
            <tr>
                <th id="row5" align="left" headers="col1" width="50%" rowspan="2">
                    Adaptable Systems
                </th>
                <td headers="row5 col2" width="50%">
                    Reflection
                </td>
            </tr>
            <tr>
                <td headers="row5 col2" width="50%">
                    Microkernel
                </td>
            </tr>
        </tbody>
    </table>
    <br />
</div>
<p>
    Refer to <a class="elementlinkwithusertext"
    href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[BUS96]</a> for a complete description of these patterns.
</p>
<h3>
    <a id="Architectural Style" name="Architectural Style">Architectural Style</a>
</h3>
<p>
    A software architecture, or only an architectural view, may have an attribute called <b>architectural style</b>, which
    reduces the set of possible forms to choose from, and imposes a certain degree of uniformity to the architecture. The
    style may be defined by a set of patterns, or by the choice of specific components or connectors as the basic building
    blocks.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ContentPackage" name="development" briefDescription="" id="_0YcDMMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
        <MethodPackage xsi:type="uma:ContentPackage" name="visual_modeling" briefDescription="" id="_PGDx8PisEdmjyaJMRcPDWA" orderingGuide="" suppressed="false" global="false">
          <ContentElement xsi:type="uma:Artifact" name="design_vm" briefDescription="" id="_ZTGAYL3uEdqLRJZPGVbHDA" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0WuL8slgEdmt3adZL5Dmdw" variabilityType="contributes">
            <Concept>_0XY6UMlgEdmt3adZL5Dmdw</Concept>
          </ContentElement>
          <ContentElement xsi:type="uma:Task" name="design_solution_vm" briefDescription="Render the design visually to aid in solving the problem and communicating the  solution." id="_T8WvwL3vEdqLRJZPGVbHDA" orderingGuide="&lt;?xml version=&quot;1.0&quot; encoding=&quot;ASCII&quot;?> &lt;com.ibm.uma.edit.tng.util.model:OrderInfoCollection xmi:version=&quot;2.0&quot; xmlns:xmi=&quot;http://www.omg.org/XMI&quot; xmlns:com.ibm.uma.edit.tng.util.model=&quot;http:///com/ibm/uma/edit/tng/util/model.ecore&quot;>   &lt;orderInfos name=&quot;sections&quot; timestamp=&quot;1146255243164&quot;>     &lt;gUIDs>_4Z7WYKuKEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_YiTAIL3vEdqLRJZPGVbHDA&lt;/gUIDs>     &lt;gUIDs>_--6tYKuKEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_RBAyANbzEdqu5o2S60g5LA&lt;/gUIDs>     &lt;gUIDs>_A_LU8KuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_ObN0cNbzEdqu5o2S60g5LA&lt;/gUIDs>     &lt;gUIDs>_ENwJwKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_Gyf-cKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_JrHKUKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_KNZYAKuLEdmhFZtkg1nakg&lt;/gUIDs>     &lt;gUIDs>_OGYbwKuLEdmhFZtkg1nakg&lt;/gUIDs>   &lt;/orderInfos> &lt;/com.ibm.uma.edit.tng.util.model:OrderInfoCollection> " suppressed="false" presentationName="" variabilityBasedOnElement="_0fshwMlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <Presentation xsi:type="uma:TaskDescription" name=",_T8WvwL3vEdqLRJZPGVbHDA" briefDescription="" id="-_BAmniONtHWbpHQH7znR3g" orderingGuide="" suppressed="false" authors="" changeDescription="" version="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <Purpose></Purpose>
            </Presentation>
            <Guideline>_2uan8NbyEdqu5o2S60g5LA</Guideline>
            <Guideline>_CFAswNbzEdqu5o2S60g5LA</Guideline>
            <Guideline>_1fM3AC9_EduW5uTjiIcspQ</Guideline>
            <Guideline>_ienXEEyAEdu-df7p0PuRvQ</Guideline>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="uc_realizations" briefDescription="A use-case realization represents how a use case will be implemented in terms of collaborating objects. This guideline describes its purpose and UML notation." id="_2uan8NbyEdqu5o2S60g5LA" orderingGuide="" suppressed="false" presentationName="Use-Cases Realizations" variabilityType="na">
            <Presentation name="uc_realizations,_2uan8NbyEdqu5o2S60g5LA" briefDescription="" id="-CFYVionNDLkMw6SG6runQA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-27T12:24:33" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<p>
    A use-case realization represents how a use case will be implemented in terms of collaborating objects. This artifact
    can take various forms. It may include, for example, a textual description (a document), class diagrams of
    participating classes and subsystems, and interaction diagrams (communication and sequence diagrams) that illustrate
    the flow of interactions between class and subsystem instances.
</p>
<p>
    The reason for separating the use-case realization from its use case is that doing so allows the use cases to be
    managed separately from their realizations. This is particularly important for larger projects, or families of systems
    where the same use cases may be designed differently in different products within the product family. Consider the case
    of a family of telephone switches which have many use cases in common, but which design and implement them differently
    according to product positioning, performance and price.
</p>
<p>
    For larger projects, separating the use case and its realization allows changes to the design of the use case without
    affecting the baselined use case itself.
</p>
<p>
    In a model, a use-case realization is represented as a UML collaboration that groups the diagrams and other information
    (such as textual descriptions) that form part of the use-case realization.
</p>
<p>
    UML diagrams that&nbsp;support use-case realizations can be produced in an analysis context, a&nbsp;design context, or
    both, depending on the needs of the project. For each use case in the use-case model, there&nbsp;can be&nbsp;a use-case
    realization in the analysis/design model with a realization relationship to the use case. In UML this is shown as a
    dashed arrow, with an arrowhead like a generalization relationship, indicating that a realization is a kind of
    inheritance, as well as a dependency.<br />
</p>
<p align="center">
    <img height="109" alt="Use Case Realisations" src="openup_basic/guidances/guidelines/resources/ucrea1.gif" width="277" />
</p>
<p>
    A use-case realization in the&nbsp;design can be traced to a use case in the use-case model.
</p>
<h4>
    Class Diagrams Owned by a Use-Case Realization
</h4>
<p>
    For each use-case realization there may be one or more class diagrams depicting its participating classes. A class and
    its objects often participate in several use-case realizations. It is important&nbsp;while designing to coordinate all
    the requirements on a class and its objects that different use-case realizations may have. The figure below shows an
    analysis&nbsp;class diagram for the realization of the Receive Deposit Item use case. Note the use of
    boundary-control-entity stereotypes to represent analysis classes (see <a class="elementLinkWithType" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Concept: Entity-Control-Boundary Pattern</a>).
</p>
<p align="center">
    <img height="213" alt="Class diagram for the realization of Receive Deposit Item" src="openup_basic/guidances/guidelines/resources/md_ucre3.gif"     width="328" />
</p>
<p align="center">
    <strong>The use case Receive Deposit Item and its analysis-level class diagram</strong>.
</p>
<h4>
    Communication and Sequence Diagrams Owned by a Use-Case Realization
</h4>
<p>
    For each use-case realization there&nbsp;can be&nbsp;one or more interaction diagrams depicting its participating
    objects and their interactions. There are two types of interaction diagrams: sequence diagrams and communication
    diagrams. They express similar information, but show it in different ways. Sequence diagrams show the explicit sequence
    of messages and are better when it is important to visualize the time ordering of messages, whereas communication
    diagrams show the communication links between objects and are better for understanding all of the effects on a given
    object and for algorithm design.
</p>
<p>
    Realizing use cases through interaction diagrams helps to keep the design simple and cohesive. Assigning
    responsibilities to classes on the basis of what the use-case scenario explicitly requires encourages the design to
    contain the following:
</p>
<ul>
    <li>
        Only the functionality actually used in support of a use case scenario.
    </li>
    <li>
        Functionality that can be tested through an associated test case.
    </li>
    <li>
        Functionality that is more easily traceable to requirements and changes.
    </li>
    <li>
        Explicitly declared class dependencies that are easier to manage.
    </li>
</ul>
<p>
    These factors help improve the overall quality of the system.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
            <Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="design_components" briefDescription="This guideline describes how to visually represent design components." id="_CFAswNbzEdqu5o2S60g5LA" orderingGuide="" suppressed="false" presentationName="Design Components Representation" variabilityType="na">
            <Presentation name="design_components,_CFAswNbzEdqu5o2S60g5LA" briefDescription="" id="-6ep_EyK3ZO6vRGWtAqoJ-A" orderingGuide="" suppressed="false" authors="" changeDate="2006-04-28T10:31:47" changeDescription="" version="">
              <MainDescription><![CDATA[&nbsp;]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Role" name="developer_vm" briefDescription="" id="_sypCEPvjEdqf0-top1XJIg" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_BCtiMDR9EduwLdLujGQAIQ" variabilityType="contributes">
            <Presentation xsi:type="uma:RoleDescription" name="new_role,_sypCEPvjEdqf0-top1XJIg" briefDescription="" id="-xbAirPdH1IOKcnklk8hdqw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-11T08:34:39" changeDescription="" version="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <AssignmentApproaches></AssignmentApproaches>
              <Skills>&lt;p>&#xD;
    In addition, to create a visual model of the system, this role needs the ability to&amp;nbsp;render the design in the&#xD;
    Unified Modeling Language (UML).&#xD;
&lt;/p></Skills>
              <Synonyms></Synonyms>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="designing_visually" briefDescription="This guideline provides information on how to apply visual modeling to designing a system." id="_1fM3AC9_EduW5uTjiIcspQ" orderingGuide="" suppressed="false" presentationName="Designing Visually" variabilityType="na">
            <Presentation name="visual_modeling,_1fM3AC9_EduW5uTjiIcspQ" briefDescription="" id="-1xE2ZW3MjNAJ7jkaZNbkww" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-21T08:21:26" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Using visual modeling techniques to design software can help break down complex problems into a series of smaller,
    easier to manage tasks. Sharing pictures rather than written documents or source code also helps the understanding and
    communication of difficult concepts. Adopting standard modeling notations such as the UML increases this capability by
    helping to make diagrams precise and unambiguous.
</p>
<p>
    The degree of formality used when producing and disseminating models should vary according to your needs. Small,
    collaborative teams modeling around whiteboards and capturing the results on a sheet of paper or with digital cameras
    can yield good results. This can also help the team focus on producing software with the help of models; rather than
    becoming sidetracked into over-engineering both the models and the solution. Modeling tools provide additional value to
    projects, especially for more complex systems. Their specifics of use are outside the scope of this guideline, however.
</p>
<p>
    This guideline does not describe a formal sequential progression through prescriptive design steps. Whether some or all
    of these techniques are needed, or how long is spent on them will vary depending on real-world issues such as the
    complexity of the requirements; the experience of the designer; and the way the team works.
</p>
<p>
    This guideline uses a simplified scenario (Login) to help keep the focus on understanding the techniques rather than
    the specific requirements. In the real-world, it is doubtful that much time would be spent modeling a simple problem.
    Here is the use case diagram, for reference;
</p>
<p>
    <img height="142" alt="User Login Use Case Model" src="openup_basic/guidances/guidelines/resources/UserLoginUCM.JPG" width="472" />
</p>
<h3>
    Identify elements
</h3>
<p>
    Render the identified design elements as classes in a UML diagram.&nbsp; Apply appropriate stereotypes and optionally
    render the class using an icon specific to the stereotype to characterize the intent of the class in the design.&nbsp;
    Name and briefly describe the classes in a few sentences. Do not spend too much time working on associations, as these
    will be developed through working on collaborations in the next step.
</p>
<p>
    Classes can be drawn as a basic UML rectangle or with a specific symbol associated with a particular stereotype.
</p>
<p>
    The resulting class diagram should be conceptually similar to this one:
</p>
<p>
    <img height="228" alt="Identify Elements - Initial Class Model" src="openup_basic/guidances/guidelines/resources/IdentifyElementsBCE.JPG"     width="290" />
</p>
<p>
    For this example, the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Entity-Control-Boundary Pattern</a> has been used to derive two classes (LoginUI and
    LoginController). In addition, two design elements already identified in the architecture (SecuritySystemInterface and
    User) have also been incorporated.
</p>
<h3>
    Determine how elements collaborate to realize the scenario.
</h3>
<p>
    When determining collaboration, two kinds of diagrams are useful.
</p>
<ul>
    <li>
        A dynamic object diagram, showing how the design elements collaborate to realize the requirements.
    </li>
    <li>
        A static class diagram, showing the classes involved in realizing the requirements.
    </li>
</ul>
<p>
    Remember to also update any other impacted diagrams as appropriate, based on modifications or additions to the design.
</p>
<p>
    Create a number of dynamic object diagrams that walk through how a set of objects collaborate to perform the behavior
    of the scenarios.&nbsp; Even if just one scenario is being designed, this might take multiple diagrams to render it in
    smaller, understandable chunks or from multiple contexts.
</p>
<p>
    <img style="WIDTH: 776px; HEIGHT: 355px" height="355" alt="User Login Sequence Diagram"     src="openup_basic/guidances/guidelines/resources/UserLoginSeq.JPG" width="776" />
</p>
<p>
    The above sequence diagram shows the user credentials being passed through to the security system for authentication.
    Steps in the use case scenario are transformed into messages between the participating objects. The messages in this
    example are not yet fully formed (there are no parameters or return values), so they are prefixed with “//” to show
    that more work is needed.&nbsp; A sequence diagram was used in this example, but a communication diagram could have
    been used.
</p>
<p>
    It&nbsp;can be&nbsp;useful to create one or more static class diagrams that show the classes in the design that support
    the realization.&nbsp; These class diagrams are often called View of Participating Classes diagrams, they provide a
    focused view on the overall design by only showing the classes, relationships, operations, and attributes relevant to
    the collaboration.
</p>
<p>
    <img height="469" alt="Login VOPC" src="openup_basic/guidances/guidelines/resources/login_vopc.jpg" width="448" />
</p>
<p>
    This diagram shows the operations and relationships that were identified by drawing the sequence diagram. The
    relationships in this example&nbsp;have not been refined yet, so they are just shown as simple associations. Remember
    to examine the diagram to verify that the design can support the behavior in the sequence diagram.
</p>
<p>
    Working at this level of detail in the model during the early stages of design can be helpful. It keeps the diagrams
    relatively simple and easy to understand. It makes them easier to draw in a workshop and easier to change during
    discussion. It is often easier to add the detail once there is agreement on the fundamentals.
</p>
<h3>
    Refine design decisions
</h3>
<p>
    Once the fundamentals of the design are relatively stable, you can begin to add detail to the design. Some of this can
    be performed in code or in the model. If modeling is chosen, then refine attributes, responsibilities and
    relationships.
</p>
<h4>
    Describe responsibilities
</h4>
<p>
    Class responsibilities are either actions to be performed by an object or knowledge maintained and provided to other
    objects. Each class will typically have several responsibilities; each responsibility will evolve into one or more
    operations during design.
</p>
<p>
    Responsibilities are derived from messages on interaction diagrams or from non-functional requirements that a class has
    to support. Document a responsibility by giving it a name, and optionally a brief description (what it does).
</p>
<p>
    These operations can be left as self-evident from their context, they can be given textual descriptions of the
    algorithm required to perform the behavior, or they could spawn off another whole pass of this technique where a set of
    classes that collaborate together to perform the internals of the operation are identified, etc.
</p>
<h4>
    Describe attributes and associations
</h4>
<p>
    A class may have to store simple data information, like: string, integer, and the like. For such simple type of
    information, attributes are defined for classes. For a more complex or "behavioral” attribute, consider creating an
    extra class and establish an association to it.
</p>
<p>
    To perform their responsibilities, classes may depend on other classes to supply needed behavior. These other classes
    might be ones already identified in this design session, they might be existing classes pulled from the architecture,
    or the need for new classes might be conceived. Associations in a class diagram can be used to represent inter-class
    relationships.
</p>
<p>
    <img height="439" alt="Login VOPC (Refined)" src="openup_basic/guidances/guidelines/resources/login_vopc_refined.jpg" width="557" />
</p>
<p>
    This diagram shows a number of refinements. The LoginUI class has been replaced by LoginForm. The User class has been
    renamed UserCredentials and is created by the LoginForm class rather than LoginController. It is then used as a
    parameter for subsequent messages rather than passing the individual attributes. The SecuritySystemInterface class has
    been refined into two elements, ISystemSecurity, which provides a simple façade for interaction with the rests of the
    design; and SecuritySystemProxy, which handles interaction with the external security system.
</p>
<h3>
    Design internals
</h3>
<p>
    The classes in the design are likely to need to be distributed amongst different packages and subsystems or components.
</p>
<p>
    <img height="304" alt="User Login - Design Packages" src="openup_basic/guidances/guidelines/resources/dv_Packaging.JPG" width="571" />
</p>
<p>
    In this example, the LoginForm, LoginController and UserCredentials elements have been placed in a package called
    LocalSecurity. The SecuritySystemProxy is a part of a subsystem called SecuritySystemAdapter which realizes the
    ISecuritySystem interface. The SecuritySystemAdapter wraps the legacy SecuritySystem, expressed here as a component
    offering a validateUser interface.
</p>
<p>
    Each of these packaged elements can be distributed amongst the team for further development work.
</p>
<h3>
    Conclusion
</h3>
<p>
    This guideline walked through the techniques in a concrete manner started with a scenario of a use case through to
    distributing the classes identified into a set of packages. This example demonstrates a technique for designing
    visually, but it should be considered as just one conceptual pass of design.&nbsp; One could as easily apply this
    technique when defining the internals of how the SecuritySystemProxy class will collaborate with a set of classes to
    validate the credentials.
</p>
<p>
    When applying this guideline, work in small chunks and keep in mind the goal of delivering software to the users that
    provides value. To deliver high-quality software requires consideration of how the pieces will work together to deliver
    that value. But as soon as key decisions have been made and the decisions have been communicated to the appropriate
    team members, the team should move on to implementing the source code to verify the design and deliver the value.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Checklist" name="design_vm" briefDescription="" id="_nnSXcD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0XSzsMlgEdmt3adZL5Dmdw" variabilityType="contributes">
            <Presentation name="new_checklist,_nnSXcD6SEduAL-bCqar_dg" briefDescription="" id="-HQSI39vBrjpmQL1qHYOJtA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Section name="Packages and Organization" briefDescription="" id="_sG8ZoD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;p>&#xD;
    Is the package partitioning logical and consistent? Does it make sense to team members and stakeholders?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Do package names accurately describe the contents of the package and the role they play in the architecture? Do they&#xD;
    follow naming conventions?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Do public packages and interfaces provide a logically cohesive set of services?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are all the contents of a package listed? Are the classes within a package cohesive?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Do package dependencies correspond to the dependencies of the contained classes?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are there packages or classes within a package that can be separated into and independent or sub-package?&lt;br />&#xD;
&lt;/p></Description>
              </Section>
              <Section name="Views" briefDescription="" id="_tx6tsD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;p>&#xD;
    Does each diagram help the designer reason about the design, or communicate key design decisions to the team?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the relationships between diagrams clear when several diagrams are used to describe behavior?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is it easy to navigate between related diagrams?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each diagram focus on a relevant perspective? For instance, does a set of diagrams show a single class and its&#xD;
    direct relationships, rather than using&amp;nbsp;one or two diagrams to show all classes?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is each diagram complete and minimal? Does it show everything relevant to that view and nothing more?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the diagrams tidy and easy to interpret, with a minimum of clutter?&#xD;
&lt;/p></Description>
              </Section>
              <Section name="UML" briefDescription="" id="_yeFh4D6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;p>&#xD;
    Does the visual model conform to UML standards so all stakeholders can understand the model over time? See the&amp;nbsp;&lt;a href=&quot;http://www.uml.org/&quot; target=&quot;_blank&quot;>OMG UML Resource Page&lt;/a>&amp;nbsp;for more information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the visual model conform to project or organization specific modeling standards?&#xD;
&lt;/p>&#xD;
Is the visual model internally consistent? For instance, if an object diagram shows a relationship between objects, does a&#xD;
corresponding relationship exist between the appropriate classes?&lt;br />&#xD;
&lt;p>&#xD;
    Does the name of each class clearly reflect the role it plays?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each class offer the required behavior?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is there at least one&amp;nbsp;realization association defined for each interface? The realization may represent a 3rd&#xD;
    party implementation of the subsystem.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are&amp;nbsp;there dependency associations from each subsystem to the interfaces it uses?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is each operation in a subsystem interface described in a sequence diagram? Or at least mapped directly to an operation&#xD;
    in a class?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each class represent a single well defined abstraction?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are generalization relationships used only to inherit definitions, not behavior (implementation)? In other words, is&#xD;
    behavior shared through the use of association, aggregation and containment relationships instead of generalization?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are parent classes in generalization relationships abstract? Are the &quot;leaf&quot; classes in a generalization hierarchy the&#xD;
    only concrete classes?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are stereotypes used consistently and meaningfully?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Do&amp;nbsp;statecharts exist for classes with complex or restrictive state changes?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Do relationships have descriptive role or association names (one or the other but not both), and&amp;nbsp;correct&#xD;
    multiplicities?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are relationships between classes unidirectional whenever possible?&lt;br />&#xD;
    &amp;nbsp;&#xD;
&lt;/p></Description>
              </Section>
              <Section name="Non-UML Visual Modeling" briefDescription="" id="_IsDY4D6TEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
                <Description>&lt;p>&#xD;
    Are the semantics of the visual modeling language clearly defined, documented, and accessible to team members? The&#xD;
    semantics should be meaninful to the users of the model.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Can the semantics of the modeling language be understood over time? Is the language documented well enough so that team&#xD;
    members can understand the model long after design decisions have taken place?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are team members and stakeholders trained in the modeling language being used?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the visual model conform to the semantics of the visual modeling language? In other words, are the meanings&#xD;
    of&amp;nbsp;the symbols in the diagrams&amp;nbsp;consistent across the model and diagrams?&amp;nbsp;&#xD;
&lt;/p></Description>
              </Section>
            </Presentation>
          </ContentElement>
          <ContentElement xsi:type="uma:Guideline" name="data_modeling" briefDescription="A physical data model (PDM) captures the design of a persistent data store such as a relational database or data file. Data modeling is the act of creating such a model." id="_ienXEEyAEdu-df7p0PuRvQ" orderingGuide="" suppressed="false" presentationName="Physical Data Modeling" variabilityType="na">
            <Presentation name="new_guideline,_ienXEEyAEdu-df7p0PuRvQ" briefDescription="" id="-XMbxFU8M85cRlf3C4iwAGw" orderingGuide="" suppressed="false" authors="Scott Ambler" changeDate="2006-12-01T10:53:01" changeDescription="" version="1.0.0">
              <MainDescription><![CDATA[<h3>
    Overview
</h3>
Physical data models (PDMs) are used to design the structure of a persistent data store. Typically a PDM is created for a
single data store, although sometimes a PDM will cover several related data stores (this is particularly true when the data
storage mechanism is file based). The assumption in this guideline is that you are modeling the schema of a single
relational database. 
<h3>
    The Data Model in OpenUP
</h3>
The PDM is part of the Work Product: Design. It’s described as different views or perspectives of a portion of the design. 
<h3>
    Data Model Types
</h3>
<p dir="ltr" style="MARGIN-RIGHT: 0px">
    Traditionally, there are three types of data models:
</p>
<ol>
    <li>
        <div style="MARGIN-RIGHT: 0px">
            Conceptual. A conceptual model, also referred to as a domain model, depicts the critical business entities and
            the relationships between them.
        </div>
    </li>
    <li>
        <div style="MARGIN-RIGHT: 0px">
            Logical. A logical data model (LDM) adds detail, in particular data attributes and more entities. LDMs will
            optionally indicate candidate keys (one or more attributes of an entity which uniquely identify it) of an
            entity. LDMs describe how the design of the system handles the data that will be actually maintained in the
            PDM.
        </div>
    </li>
    <li>
        <div style="MARGIN-RIGHT: 0px">
            <p>
                Physical. A PDM depicts the table structure (in the case of a relational database design), the
                relationships between the tables, and the primary and foreign keys implemented by the tables. PDMs
                potentially indicate views, stored procedures, and other database elements.
            </p>
        </div>
    </li>
</ol>
<p>
    For systems built using object and/or component-based technology, the LDM is usually not created in favor of a class
    model.
</p>
<h4 style="MARGIN-RIGHT: 0px">
    Physical Data Modeling
</h4>
<p>
    The PDM consists of the detailed database table designs and their relationships. The tables in the PDM have
    well-defined columns, as well as keys and indexes as needed. The tables might also have triggers defined as necessary
    to support the database functionality and referential integrity of the system. In addition to the tables, stored
    procedures have been created, documented, and associated with the database in which the stored procedure will reside.
</p>
<p>
    The diagram below shows an example of some of the elements of a PDM. A UML-based notation is used, although other
    notations such as “crow's feet” or Information Engineering (IE) are also common. This example model is a part of the
    PDM of a fictional order entry system. It depicts three tables (Order, OrderItem, and Item), three stored procedures
    (GetOrders, GetTotalBusiness, and TestDatabase), and a trigger on Order named deleteOrderItems. The figure also depicts
    the columns of each table, the primary key for each table, and any foreign keys to other tables.
</p>
<p>
    <strong>Example Physical Data Model</strong>
</p>
<p>
    &nbsp;<img height="309" alt="" src="openup_basic/guidances/guidelines/resources/PDMSample.JPG" width="597" />
</p>
<p>
    An existing database can be reverse-engineered to populate the PDM if the team has access to a tool that can transform
    a database into a model.
</p>
<h3>
    How to Model Database Schemas
</h3>
<p>
    Perform the following in an iterative manner:
</p>
<ol>
    <li>
        Identify tables. A table is similar conceptually to object-orientation’s concept of a class – a table contains a
        collection of rows of data whereas a class defines a collection of objects. A table could contain rows representing
        people, places, things, events, or concepts. Examples of tables include Customer, Order, and OrderItem.
    </li>
    <li>
        Identify columns. Each table has one or more columns. A column stores a single data attribute for each row. For
        example, the Customer table may have columns such as First Name and Surname. A column has a single data type, such
        as INT, DATETIME, or VARCHAR.
    </li>
    <li>
        Follow accepted modeling conventions. Your organization should have standards and guidelines applicable to data
        modeling, in particular naming conventions,&nbsp;that you should follow.
    </li>
    <li>
        Identify relationships between tables. In the real world entities have relationships with other entities. For
        example, customers PLACE orders, customers LIVE AT addresses, and line items ARE PART OF orders. These
        relationships will exist between the rows of data stored in the corresponding tables.
    </li>
    <li>
        Assign keys. A key is one or more columns that uniquely identify a row in a table. A primary key is the preferred
        key for a table. For example, the Customer table may have two potential keys, CustomerID and SocialSecurityNumber.
        You could choose to use CustomerID as the primary key, thereby making SocialSecurityNumber a secondary key. Foreign
        keys are used to maintain relationships between rows.
    </li>
    <li>
        Normalize to reduce data redundancy. Data normalization is a process in which columns within a PDM are organized to
        increase the cohesion of tables. In other words, the goal of data normalization is to reduce and even eliminate
        data redundancy, an important consideration for application developers because it is incredibly difficult to store
        objects in a relational database that maintains the same information in several places.
    </li>
    <li>
        De-normalize to improve performance. Normalized data schemas, when put into production, often suffer from
        performance problems. An important part of data modeling is to de-normalize portions of&nbsp;the data schema, to
        increase data redundancy by storing the same information in several places or manners, to improve database access
        times.
    </li>
</ol>
<h3>
    Data Modeling Throughout the Lifecycle
</h3>
<h4>
    Inception Phase
</h4>
<p>
    During the Inception phase the goal is to identify high-level requirements for the system so that the scope may be
    identified and project funding obtained. Little, if any, data modeling is performed at this point although some
    conceptual modeling may occur. Detailed data models are usually not needed at this point.
</p>
<h4>
    Elaboration Phase
</h4>
<p>
    The goal of the Elaboration phase is to eliminate technical risk and to produce a stable (baselined) architecture for
    the system. One of several architectural issues that is likely to arise is data architecture. To support this effort,
    you will need to model the major database structures (tables, indexes, and primary and foreign key columns) and then
    create the database schema from the model (ideally it would be generated from a modeling tool).
</p>
<p>
    Additionally, representative data volumes may be loaded into the database to support performance testing. Based on the
    results of performance testing, the PDM might need to be adjusted with optimization techniques, including but not
    limited to de-normalizing, optimizing physical storage attributes, or distribution and indexing.
</p>
<h4>
    Construction Phase
</h4>
<p>
    During the Construction phase the goal is to build a working system that is ready to be released. During each
    iteration&nbsp;the&nbsp;design, implementation, and tests are fleshed out to implement that iteration's requirements.
    In other words development artifacts, including your data-oriented artifacts, evolve over time. To support data model
    changes you may discover the need to refactor your existing database schema.
</p>
<h4>
    Transition Phase
</h4>
<p>
    The PDM is maintained during the Transition phase in response to approved change requests. You should keep the PDM
    synchronized with the database as the application goes through final acceptance test and is deployed into production.
</p>
<h3>
    Round-trip Engineering Considerations
</h3>
<p>
    If a development team is using modern visual modeling tools that have the ability to convert classes to tables (and
    vice versa) or has the ability to reverse and forward engineer databases, then the team needs to establish guidelines
    for managing the transformation and engineering processes. The development team must define the points in the
    development of the application (build-and-release cycle) at which it will be appropriate to perform the class-to-table
    transformations and to forward-engineer the database. Once the initial database is created, the development team must
    define guidelines for the team to manage the synchronization of the PDM and database as the design and code of the
    system evolve throughout the project.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
            </Presentation>
          </ContentElement>
        </MethodPackage>
        <ContentElement xsi:type="uma:Artifact" name="implementation" briefDescription="Software code files, data files, and supporting files such as online help files that represent the raw parts of a system that can be built." id="_0YoQcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Implementation" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="implementation,_0YoQcMlgEdmt3adZL5Dmdw" briefDescription="" id="_6u9ZsKYcEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="Jim Ruehlin" changeDate="2007-03-02T07:47:39" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<p>
    This artifact&nbsp;is the collection of one or more of&nbsp;these elements:
</p>
<ul>
    <li>
        Source code files
    </li>
    <li>
        Data files&nbsp;
    </li>
    <li>
        Build scripts
    </li>
    <li>
        Other files that are transformed into the executable system
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose><![CDATA[<p>
    To represent the physical parts that make up the system to be built, organized in a way that is understandable and
    manageable.
</p>]]></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;p>&#xD;
    Implementation files represented as files in the local file system. File folders (directories), represented as&#xD;
    packages, group the files into logical units.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Guideline>_0Y0dsMlgEdmt3adZL5Dmdw</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="build" briefDescription="An operational version of a system or part of a system that demonstrates a subset of the capabilities to be provided in the final product." id="_0YuXEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Build" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="build,_0YuXEMlgEdmt3adZL5Dmdw" briefDescription="" id="_NqSB0KeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-30T09:24:06" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<p>
    This working version of the system is the result of putting the implementation of the system through a build process
    (typically an automated build script) that creates an executable version of the system, or one that runs.&nbsp; This
    executable version of the system will typically have a number of supporting files that are also considered part of this
    composite artifact.
</p>]]></MainDescription>
            <KeyConsiderations><![CDATA[<p>
    In an iterative lifecycle, each build must evolve from the previous iteration's build, adding more functionality and
    improving quality.
</p>
<p>
    The purpose of early builds that minimize or eliminate a risk or verify architectural decisions is to achieve
    consistently stable builds in later iterations.
</p>]]></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose><![CDATA[Deliver incremental value to the user and customer, and provide a testable artifact for verification.]]></Purpose>
            <ReasonsForNotNeeding>&lt;p>&#xD;
    There will always need to be an&amp;nbsp;operational version of the system.&#xD;
&lt;/p></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;p>&#xD;
    This work product is&amp;nbsp;almost always a composite product made up of numerous parts required to make the executable&#xD;
    system. Therefore a build is more than just executable files; it additionally includes such things as configuration&#xD;
    files, help files, and data repositories that will be put together resulting in the product that will be run by the&#xD;
    users. The specifics of those parts will vary by technology in use.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
          <Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
          <Guideline>_i8bUEL6cEdqti4GwqTkbsQ</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="developer_test" briefDescription="The instructions that validate individual software components perform as specified." id="_0YuXEclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Developer Test" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="developer_test,_0YuXEclgEdmt3adZL5Dmdw" briefDescription="" id="_NqSB0qeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-21T06:11:53" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<p> This artifact covers all of 
  the steps that are required to validate 
  a software component. It specifies test entries, 
  execution conditions, and expected results. These details 
  are identified for the purpose of evaluating a 
  particular aspect of a scenario. </p>
<p> The tests should be self-documenting in a way that 
  makes it clear upon completion of the test whether the component has 
  run correctly. </p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving>Not having developer tests can inhibit iterative development, because &#xD;
there is no assurance that modified components are still working correctly &#xD;
when you modify  components iteration by iteration.</ImpactOfNotHaving>
            <Purpose><![CDATA[Evaluate that a software component performs as specified.]]></Purpose>
            <ReasonsForNotNeeding>If the tests can be embedded into the actual production code, you might not need a separate work product. Nonetheless, some&#xD;
level of support for developer testing is always necessary.</ReasonsForNotNeeding>
            <BriefOutline>&lt;p>&#xD;
    There is no predefined template for this&amp;nbsp;work product and a testing tool will&amp;nbsp;affect how the work product is&#xD;
    handled, but here are some key issues that should be addressed:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Setup&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Inputs&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Script&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Expected Results&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Evaluation Criteria&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Clean-Up&#xD;
    &lt;/li>&#xD;
&lt;/ul></BriefOutline>
            <RepresentationOptions>&lt;p align=&quot;left&quot;>&#xD;
    The following are recommendation and options for representing this work product.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Recommendation: Automated Code Unit&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    The most appropriate technique for running these tests is using code that tests the components fully and that you can&#xD;
    run regularly as you update the system during development.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When code is the&amp;nbsp;sole form of the tests, you must take care to ensure that the code is self-documenting, including&#xD;
    specifications of what conditions you are testing and what setup or clean-up is required for the test to run properly.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Option: Manual Instructions&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In some cases, manual instructions can suffice. For example, when testing a user interface, a Developer could walk&#xD;
    through a script, explaining the component. In this case, it can still be valuable to create a test harness that goes&#xD;
    straight to the user interface. That way, the Developer can follow the script without having to walk through a&#xD;
    complicated set of instructions to get to a particular screen or page.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Option: Embedded Code&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    Certain technologies (such as Java&amp;trade; 5 Test Annotation) enable you to embed tests in the implementation. In those cases,&#xD;
    there will be a logical work product, but it will be assimilated into the code that you are testing. Here, too, take&#xD;
    into consideration that you must ensure that the code is self-documenting.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
          <Guideline>_eRutgC5QEduVhuZHT5jKZQ</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="implementation" briefDescription="This guideline describes the different types of elements in an implementation." id="_0Y0dsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Implementation" variabilityType="na">
          <Presentation name="implementation,_0Y0dsMlgEdmt3adZL5Dmdw" briefDescription="" id="_4wqaMMPaEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="Jim Ruehlin" changeDate="2006-12-02T01:13:39" changeDescription="" version="1.0">
            <MainDescription><![CDATA[<h5>
    Code Reuse&nbsp;
</h5>
<p>
    Code reuse and code generation tools produce more robust code and are preferable to writing code by hand. Existing code
    has often already been tested and even deployed, making it more stable and well understood than new code. Source code
    created from a code generation tool (such as a visual modeling tool) automates dreary coding tasks such as creating
    getters and setters.
</p>
<p>
    There are many places to harvest code for reuse:
</p>
<ul>
    <li>
        Internal (corporate) code libraries.
    </li>
    <li>
        3rd party libraries.
    </li>
    <li>
        Built-in language libraries.
    </li>
    <li>
        Code samples from tutuorials, examples, books, etc.
    </li>
    <li>
        Local code guru or knowledgable colleague
    </li>
    <li>
        Existing system code
    </li>
    <li>
        Open source products (be sure to follow any licensing agreements)&nbsp;
    </li>
</ul>
<h5>
    Transforming the Design into the&nbsp;Implementation
</h5>
<p>
    Transforming the design into code implements the system structure in the chosen source language. It also implements the
    system behavior defined in the functional requirements. Implementing the system behavior means writing the code that
    allows different parts of the application (classes or components) to collaborate in realizing the behavior of the
    system.
</p>
<p>
    There are various techniques for automatically transforming design to implementation. Here are some examples:
</p>
<ul>
    <li>
        Platform-specific visual models can be used to generate an initial code framework. This framework can be further
        elaborated with additional code not specified in the design.<br />
    </li>
    <li>
        Models can be detailed and used to generate an implementation. Both structure (class and package diagrams) and
        behavior diagrams (such as state and activity diagram) can be used to generate executable code. These prototypes
        can be further refined as needed.<br />
    </li>
    <li>
        The design may be platform independent to varying degrees. Platform specific design models or even code can be
        generated via transformations that apply various rules to map high level abstractions platform specific elements.
        This is the focus of the Object Management Group (OMG) Model Driven Architecture (MDA) <a href="http://www.omg.org/" target="_blank">(http://www.omg.org</a>) initiative.<br />
    </li>
    <li>
        Standard patterns can be applied to generate design and code elements from related design and implementation. For
        example, a standard transformation pattern can be applied to a data table to create java classes to access the data
        table. Another example is using an Eclipse Modeling Framework (<a href="http://www.eclipse.org/emf/" target="_blank">http://www.eclipse.org/emf/</a>) model to generate code for storing data that matches the model and
        to generate a user interface implementation for populating data. A pattern or transformation engine can be used to
        create the implementation, or the implementation can be done by hand. Pattern engines are easier and more reliable,
        but hand-written code implementing a defined pattern will have fewer errors than hand-written code implementing a
        novel or unique design.
    </li>
</ul>
<p>
    In all cases, however, some design abstraction (classes, components, etc)&nbsp;is detailed to become the
    implementation.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="test_first_design" briefDescription="This concept explains how to bring test design chronologically in-line with software design." id="_0Y6kUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test-first Design" variabilityType="na">
          <Presentation name="test_first_design,_0Y6kUMlgEdmt3adZL5Dmdw" briefDescription="" id="_Hg5UUMPbEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-16T02:49:28" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    With Test-First Design (TFD) you do detailed design in a just-in-time (JIT) manner&nbsp;via writing a single test
    before writing just enough production code to fulfill that test.&nbsp; When you have new functionality to add to your
    system, perform the following steps:
</p>
<ol>
    <li>
        <strong>Quickly add a test</strong>.&nbsp; You need just enough code to fail.&nbsp;
    </li>
    <li>
        <strong>Run your tests</strong>.&nbsp; You will&nbsp;typically run the complete test suite, although for sake of
        speed you may decide to run only a subset.&nbsp; The goal is&nbsp;to ensure that the new test does in fact
        fail.&nbsp;
    </li>
    <li>
        <strong>Update your production code</strong>.&nbsp;&nbsp;The goal is to add just enough functionality so that
        your&nbsp;code&nbsp;passes the new test.&nbsp;
    </li>
    <li>
        <strong>Run your test suite&nbsp;again</strong>.&nbsp; If they tests fail you need to update your functional code
        and retest.&nbsp; Once the tests pass, start over.&nbsp;
    </li>
</ol>
<br />
<p>
    <img height="600" alt="Test First Design Flow" src="openup_basic/guidances/concepts/resources/testFirstDesign.jpg" width="294" />&nbsp;
</p>
<h4>
    Why TFD?
</h4>
<p>
    A significant advantage of TFD is that it enables you to take small steps when writing software, which is not only
    safer it is also far more productive than writing code&nbsp;in large steps.<span     style="mso-spacerun: yes">&nbsp;</span> For example, assume you add some new functional code, compile, and test
    it.<span style="mso-spacerun: yes">&nbsp;</span> Chances are pretty good that your tests will be broken by defects that
    exist in the new code.<span style="mso-spacerun: yes">&nbsp;</span> It is much easier to find, and then fix, those
    defects if you've written five new lines of code than in fifty lines. The implication is that the faster your compiler
    and regression test suite, the more attractive it is to proceed in smaller and smaller steps.<span     style="mso-spacerun: yes">&nbsp;</span>
</p>
<p>
    There are three other common testing strategies (in order of effectiveness).
</p>
<ol>
    <li>
        <strong>Write&nbsp;several tests first</strong>.&nbsp; This is a variant of TFD where you write more than one test
        before writing just enough production code to fulfill those tests.&nbsp; The advantage is that you don't need to
        build your system as often,&nbsp;potentially saving time.&nbsp; It&nbsp;has the disadvantage that you will write
        more&nbsp;production code at once, increasing the difficulty of finding any new bugs that you do introduce.
    </li>
    <li>
        <strong>Test after the fact</strong>.&nbsp; With this approach you write some production code then you write enough
        testing code to validate it.&nbsp; This has the advantage that you're at least still validating the code but has
        the disadvantage that you lose the design benefit inherent in writing the testing code first.
    </li>
    <li>
        <strong>Don't test at all</strong>.&nbsp; This is a really bad idea.
    </li>
</ol>
<br />
<h3>
    Good Things to Know
</h3>
<p>
    1. An underlying assumption of TDD is that you have a unit-testing framework available to you.<span     style="mso-spacerun: yes">&nbsp;</span> Agile software developers often use the xUnit family of open source tools, such
    as <a  href="http://www.junit.org/" ><strong>JUnit</strong></a> or <a  href="http://www.vbunit.org/" ><strong>VBUnit</strong></a>, although commercial tools are
    also viable options.<span style="mso-spacerun: yes">&nbsp;&nbsp;</span><span style="mso-spacerun: yes">&nbsp;</span>
</p>
<p>
    2. Test-Driven Design (TDD) = TFD + <a class="elementLink" href="./../../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html" guid="_Poc7IPDzEdqYgerqi84oCA">Refactoring</a>
</p>
<p>
    3. TFD/TDD is commonly used with object-oriented business code, although you can also take this approach with
    procedural code, user-interface code, and your database code if you choose to.
</p>
<p>
    4. A more thorough discussion of TFD and TDD is presented at <a  href="http://www.agiledata.org/essays/tdd.html" target="_blank" >Introduction to Test Driven Development (TDD)</a>.
</p>
<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="implement_solution" briefDescription="Implement source code to provide new functionality or fix defects." id="_0hyzgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Implement the Solution" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="implement_solution,_0hyzgMlgEdmt3adZL5Dmdw" briefDescription="" id="_d2aMwKrMEdmqUqi7YGiSxw" orderingGuide="" suppressed="false" authors="Jim Ruehlin" changeDate="2006-09-28T03:31:00" changeDescription="" version="1.0">
            <MainDescription><![CDATA[<p>
    Usually, this task is focused on a specific element, such as a class or component, but it does not need to be.
</p>
<p>
    You implement a portion of the design during each iteration by performing this task. You can perform the task any
    number of times during an iteration.
</p>
<p>
    Modify the implementation incrementally. Make additions and changes to the implementation for an issue, run the unit
    and regression tests, and then complete the issue before moving on to other issues.
</p>
<p>
    See the associated guidelines for information on how to perform the steps described in this task.
</p>]]></MainDescription>
            <KeyConsiderations><![CDATA[<p>
    This task is complete once the build has successfully completed. The implementation should then be immediately tested.
</p>]]></KeyConsiderations>
            <Section name="Determine a strategy" briefDescription="" id="_2sxisE2iEduU655MA_3VXg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    You need to determine a strategy, based on the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>&amp;nbsp;of the work item being worked on, for how you're going to implement it.&#xD;
    Your fundamental options are:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Apply existing, reusable assets.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Model the design in detail and generate the source code (by model transformation).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Write the source code.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Any combination thereof.&#xD;
    &lt;/li>&#xD;
&lt;/ol></Description>
            </Section>
            <Section name="Identify opportunities for reuse" briefDescription="" id="_iMMWoKuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Complete the implementation by reusing code at every opportunity.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify existing code or other implementation elements that you can reuse in the portion of the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/implementation,_0YoQcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0YoQcMlgEdmt3adZL5Dmdw&quot;>Implementation&lt;/a>&amp;nbsp;that you are creating or changing. A comprehensive understanding&#xD;
    of the overall design is helpful, because it is best to leverage reuse opportunities when you have a thorough&#xD;
    understanding of the proposed solution.&lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Transform design into implementation" briefDescription="" id="_pjehkNb7Edq_LtLvi4w2yw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    If you are using sophisticated modeling tools, you should be able to generate a portion of the required source code&#xD;
    from the model.&amp;nbsp;Note that programming is often required to complete the implementation after the design&#xD;
    model&amp;nbsp;has been transformed into code.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Write source code" briefDescription="" id="_mFQ58KuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    You should strive to reuse and/or generate code wherever possible, but you will still need to do some&#xD;
    programming.&amp;nbsp;To do so, consider the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Examine the&amp;nbsp;requirements. Because some requirements information does not translate directly into your design&#xD;
        you should examine the requirement(s) (potentially including both the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use Case&lt;/a>(s) and &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot; guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting Requirements&lt;/a>) to ensure that they are fully realized in the&#xD;
        implementation.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Refactor your code to improve its design.&amp;nbsp;&lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html&quot; guid=&quot;_Poc7IPDzEdqYgerqi84oCA&quot;>Refactoring&lt;/a>&amp;nbsp;is a technique where you improve the quality of your code via&#xD;
        small changes.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Tuning the results of the existing implementation by improving performance, the user interface, security, and other&#xD;
        nonfunctional areas.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Adding missing details, such as completing the logic of operations or adding supporting classes and data structures&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Handling boundary conditions.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Dealing with unusual circumstances or error states.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Restricting behavior (preventing users from executing illegal flows, scenarios, or combinations of options).&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Adding critical sections for multi-threaded or re-entrant code.&lt;br />&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Create a build" briefDescription="" id="_-0yzwDH4EduMqpUNhaTSRA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Create a new &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0YuXEMlgEdmt3adZL5Dmdw&quot;>Build&lt;/a>. This might involve simply running an existing build script and/or updating an&#xD;
    existing build script.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Evaluate the implementation" briefDescription="" id="_ni25UKuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Verify that the implementation is fit for its purpose.&amp;nbsp;Examine the code for its suitability to perform its&#xD;
    intended function. This is a quality assurance step that you perform in addition to testing, and it is described in&#xD;
    other tasks. Consider these strategies:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Pair programming.&amp;nbsp;By pairing to implement the code in the first place, you effectively evaluate the code as&#xD;
        its being written.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Read through the code for common mistakes. Consider keeping a checklist of common mistakes that you make, as a&#xD;
        reminder reference.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use tools to check for implementation errors and inappropriate code. For example, use a static code rule checker or&#xD;
        set the compiler to the most detailed warning level.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use tools that can visualize the code. Code visualization, such as the&amp;nbsp;UML visualizations in the Eclipse IDE,&#xD;
        help developers identify issues such as excessive coupling or&amp;nbsp;circular dependencies.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Perform informal, targeted code inspections. Ask colleagues to review&amp;nbsp;small critical sections of code and code&#xD;
        with significant churn. Avoid reviewing large sections of code.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Use the Tester to assure the implementation is testable and understandable to testing resources.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Improve the implementation based on the results of these evaluations.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Communicate significant decisions" briefDescription="" id="_q5XiIKuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Communicate the impact of unexpected changes to the design and requirements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The issues and constraints that you uncover when you implement the system must be communicated to the team. The impact&#xD;
    of issues discovered during implementation must be incorporated into future decisions. If appropriate, update use cases&#xD;
    and supporting requirements to reflect ambiguities that you identified and resolved in the implementation so they can&#xD;
    be tested and you can manage the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Stakeholder&lt;/a>&amp;nbsp;expectations appropriately. Similarly, update the design to reflect&#xD;
    new constraints and issues uncovered during implementation to be sure that the new information is communicated to other&#xD;
    developers.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Usually, there is no need for a change request if the required change is small and the same person is designing and&#xD;
    implementing the class. That individual can make the design change directly. If the required change has a broad impact,&#xD;
    such as a change in a public operation, it may be necessary to communicate that change to the other team members&#xD;
    through a change request.&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    The purpose of this task is to produce an implementation for part of the solution (such as a class or component), or to
    fix one or more defects. The result is typically new or modified source code, which is generally referred to <em>the
    implementation</em>.<br />
</p>]]></Purpose>
          </Presentation>
          <Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
          <Concept>_Poc7IPDzEdqYgerqi84oCA</Concept>
          <Guideline>_0Y0dsMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_SM4YIL6dEdqti4GwqTkbsQ</Guideline>
          <PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0WuL8slgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0YoQcMlgEdmt3adZL5Dmdw</Output>
          <Output>_0YuXEMlgEdmt3adZL5Dmdw</Output>
          <Output>_BVh9cL-CEdqb7N6KIeDL8Q</Output>
          <Output>_0VGbUMlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0YoQcMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_BVh9cL-CEdqb7N6KIeDL8Q</OptionalInput>
          <OptionalInput>_0VGbUMlgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="impl_developer_tests" briefDescription="Implement one or more tests that enable the validation of the individual software components through execution." id="_0iL1EMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Implement Developer Tests" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="impl_developer_tests,_0iL1EMlgEdmt3adZL5Dmdw" briefDescription="" id="_dWPe8KrMEdmqUqi7YGiSxw" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-15T11:54:27" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Developer testing is different from other forms of testing in that it is based on the expected behavior of code units
    rather than being directly based on the system requirements.
</p>
<p>
    It is best to do this at a small scale, much smaller than the complete code base to be authored by a developer over the
    course of an iteration. This can be done for one operation, one field added to a user interface, one stored procedure,
    etc. As the code base is incrementally built, new tests will be authored and existing tests might be revisited to test
    additional behavior.
</p>]]></MainDescription>
            <KeyConsiderations><![CDATA[<ol>
    <li>
        Automate tests via a unit regression testing tool (for example, xUnit) so that tests may be run by developers
        whenever they make changes to the code.
    </li>
    <li>
        Test to the risk of the component. For example, the more critical a component is, the more important it is to test
        it thoroughly.
    </li>
    <li>
        Pair with the <a class="elementLink" href="./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html"
        guid="_0ZM4MclgEdmt3adZL5Dmdw">Tester</a> in all steps of this task to gain insight on testing and quality
        considerations.
    </li>
</ol>]]></KeyConsiderations>
            <Section name="Refine scope and identify the test(s)" briefDescription="" id="_2LYo8KuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Select the increment of work to be tested and identify developer test(s) to verify that the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/implementation,_0YoQcMlgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0YoQcMlgEdmt3adZL5Dmdw&quot;>Implementation&lt;/a> being developed behaves correctly. One source for the expected&#xD;
    behavior for a software component is the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In identifying the&amp;nbsp;tests or in any other part of this task, consider collaborating with a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0ZM4MclgEdmt3adZL5Dmdw&quot;>Tester&lt;/a> who&#xD;
    should be well-versed in the issues of testing.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Write the test setup" briefDescription="" id="_g8npoC5UEduVhuZHT5jKZQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>To successfully run a test the system must be in a known state so that the correct behavior can be defined. Implement the&#xD;
setup logic that must be performed as part of the &lt;a class=&quot;elementLink&quot;&#xD;
href=&quot;./../../openup_basic/workproducts/developer_test,_0YuXEclgEdmt3adZL5Dmdw.html&quot;&#xD;
guid=&quot;_0YuXEclgEdmt3adZL5Dmdw&quot;>Developer Test&lt;/a>.</Description>
            </Section>
            <Section name="Define the expected results" briefDescription="" id="_g1eDUC5VEduVhuZHT5jKZQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Define the expected results of each test so that it can be verified.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    After a test runs, you need to be able to compare the results of running the test against what was expected to happen.&#xD;
    The test is successful when the actual results match the expected results.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Write the test logic" briefDescription="" id="_5WtVcKuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Write the steps that perform the actual test(s).</Description>
            </Section>
            <Section name="Define the test response" briefDescription="" id="_j30aAC5VEduVhuZHT5jKZQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Define the information the test(s) must produce to successfully indicate success or failure. Consider if a response of True&#xD;
or False is sufficient, or if a detailed message should be logged as well.</Description>
            </Section>
            <Section name="Write clean-up code" briefDescription="" id="_ku06gC5VEduVhuZHT5jKZQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Identify, and then implement, the steps to be followed in order to restore the environment to the original state for each&#xD;
test. The goal is to ensure that there are no side effects from running the tests.</Description>
            </Section>
            <Section name="Test the test" briefDescription="" id="_6wZFMKuPEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Verify that each developer test works correctly. To do this:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Run the test(s), observe their behavior, and fix any defects in the tests.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure that the expected results are defined properly and that they're being checked correctly.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Check the clean-up logic for each test.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure that each developer test works within your test suite framework.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Alternatives><![CDATA[Rely on acceptance tests to validate your software. This will likely be time consuming, late, and not as effective as
developer testing in identifying bugs and finding their location in the code.]]></Alternatives>
            <Purpose><![CDATA[Prepare to validate a software component (e.g. an operation, a class, a stored procedure) through unit testing. The result
is one or more new developer tests.]]></Purpose>
          </Presentation>
          <Concept>_0Y6kUMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_aFeZgJquEdukqcRKZBQN9w</Concept>
          <PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0YoQcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0YuXEclgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0WuL8slgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="run_developer_tests" briefDescription="Run tests of the individual software components to  verify that their internal structures work as specified." id="_0iYCUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Run Developer Tests" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="run_developer_tests,_0iYCUMlgEdmt3adZL5Dmdw" briefDescription="" id="_W6rc0Lv7EdmmUvZAZjqE3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T06:31:32" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations><![CDATA[<p>
    It is common to require that code pass all Developer tests before it can be delivered in an integrated build (see <a class="elementLinkWithType" href="./../../openup_basic/guidances/guidelines/promoting_builds,_SM4YIL6dEdqti4GwqTkbsQ.html" guid="_SM4YIL6dEdqti4GwqTkbsQ">Guideline: Promoting Builds</a>).
</p>
<p>
    Pair with the Tester during all steps of this task to gain insight on testing and quality considerations.
</p>]]></KeyConsiderations>
            <Section name="Run Developer Tests" briefDescription="" id="_MSnQsMP4EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Run the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/developer_test,_0YuXEclgEdmt3adZL5Dmdw.html&quot;&#xD;
    guid=&quot;_0YuXEclgEdmt3adZL5Dmdw&quot;>Developer Test&lt;/a>s. The procedure will vary, depending on whether the test is manual or&#xD;
    automated and whether additional test components are necessary,&amp;nbsp;such as&amp;nbsp;drivers or stubs.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    To run the tests, you need to make sure that you have initialized the test environment with all necessary elements,&#xD;
    such as software, hardware, tools, data, and so on.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Automated tests will often update a &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/test_log,_0ZlSsMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0ZlSsMlgEdmt3adZL5Dmdw&quot;>Test&#xD;
    Log&lt;/a>&amp;nbsp;which you can evaluate to determine where your tests went wrong.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Evaluate test execution" briefDescription="" id="_NkRF0MP4EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Evaluate the test execution by analyzing the test run.&amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Testing will&amp;nbsp;complete either&amp;nbsp;normally or abnormally.&amp;nbsp; For correctly implemented tests, a normal&#xD;
    completion represents a passed test, though it could warrant additional examination of the test log to ensure&amp;nbsp;the&#xD;
    test&amp;nbsp;ran as expected.&amp;nbsp; Abnormal termination could be premature termination or just a test that does not&#xD;
    complete as intended.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Review the test log to understand any reported failures, warnings, or unexpected results. The cause of the problem(s)&#xD;
    might be that the implementation element being tested is faulty, a problem with the developer tests, or a problem with&#xD;
    the environment.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Respond to test results" briefDescription="" id="_SXPFkMP4EdmWKcx6ixEiwg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Determine the appropriate corrective action to recover from a &quot;failed&quot; developer test run. If the implementation&#xD;
    element under test is faulty, fix the problem if possible and rerun the tests. If the problem is serious and cannot be&#xD;
    immediately addressed, perform the task &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0mwzEclgEdmt3adZL5Dmdw&quot;>Request&#xD;
    Change&lt;/a> to report the defect. If the developer test is faulty fix the test and rerun the tests. If there was a&#xD;
    problem with the environment,resolve it and then rerun&amp;nbsp;the tests.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    When the developer tests pass, communicate the results. If the passing of these tests represent completion of a&#xD;
    requirement, this could involve updating the status of something on the &lt;a class=&quot;elementLink&quot;&#xD;
    href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot;&#xD;
    guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Work Items List&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[To verify that the implementation works as specified.]]></Purpose>
          </Presentation>
          <Concept>_aFeZgJquEdukqcRKZBQN9w</Concept>
          <Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
          <PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0YuXEclgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0YoQcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0ZlSsMlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="design" briefDescription="This artifact describes the realization of required system functionality in terms of components and serves as an abstraction of the source code." id="_0WuL8slgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Design" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="design,_0WuL8slgEdmt3adZL5Dmdw" briefDescription="" id="_zxB-QKYcEdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-03T01:48:41" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<p>
    This product can describe multiple static and dynamic views of the system for examination. Although various views may
    focus on divergent, seemingly independent issues of how the system will be put together and work, they should fit
    together without contradiction.
</p>
<p>
    It describes the elements that will make up the implemented system. It communicates abstractions of particular portions
    of the implementation and can describe an&nbsp;encapsulated subsystem, a high-level analysis of the system, a view of
    the system in only one context, or other perspectives that explain a solution to a specific problem that needs to be
    communicated.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving>&lt;p>&#xD;
    Implementation will proceed with fine-grained, inconsistent tactical decisions that lead to poor-quality software.&#xD;
&lt;/p></ImpactOfNotHaving>
            <Purpose><![CDATA[<p>
    Describe the&nbsp;elements of the system&nbsp;so&nbsp;they can be examined and understood in ways not&nbsp;possible by
    reading the source code.
</p>]]></Purpose>
            <ReasonsForNotNeeding>Some representation of the design will always be necessary. In circumstances where a project involves applying&#xD;
well-understood, existing strategies for architecture and design, it is possible that you will not need a &lt;em>new&lt;/em>&#xD;
design. In those cases, you can simply refer to some existing design.</ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;p>&#xD;
    It is important that the author of this work product be able to analyze key decisions about the structure and behavior&#xD;
    of the system and communicate them to other collaborators. It is also important that these decisions can be&#xD;
    communicated at various levels of abstraction and granularity. Some aspects of the design can be represented by source&#xD;
    code, possibly with some extra annotations. But more abstract representations of the design will be at a higher-level&#xD;
    than source code.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The more abstract representation could use various representation options. UML could be used either strictly or&#xD;
    informally; it is a preferred notation based on its rich semantics and broad usage in the industry. Other techniques&#xD;
    could be used to communicate the design. Or the design could use a mix of techniques as applicable.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Whether you record these representations on a white board or use a formal tool is not governed by this process. But any&#xD;
    representation, whether characterized as formal or informal, should unambiguously communicate the technical decisions&#xD;
    embodied by the design.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Checklist>_0XSzsMlgEdmt3adZL5Dmdw</Checklist>
          <Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="design_solution" briefDescription="Identify the elements and devise the interactions, behavior, relations, and data necessary to realize some functionality." id="_0fshwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Design the Solution" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="design_solution,_0fshwMlgEdmt3adZL5Dmdw" briefDescription="" id="_NrC20qeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-09T02:58:28" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    This task is about designing part of the system, not the whole system.&nbsp; It should be applied based upon some small
    subset of requirements.&nbsp; The requirements driving the design could be scenario-based functional requirements,
    non-functional requirements, or a combination.
</p>
<p>
    This task can be applied in some specific context such as the database access elements required for some
    scenario.&nbsp; In this case the task might be applied&nbsp;again later&nbsp;to deal with a different context on the
    same requirements.&nbsp; Keep in mind that to actually build some functionality of value&nbsp;to the users, all
    contexts will typically need to be designed and implemented. For example, to actually utilize some system capability it
    will have to have been designed and implemented all its context such as user interface, business rules, database
    access, etc.
</p>
<p>
    If this task is being performed on an architecturally significant element the results of this design should be
    referenced by the architecture.
</p>]]></MainDescription>
            <KeyConsiderations><![CDATA[<P>Each step in this task can cause all previous steps to be revisited in light of new information and decisions.&nbsp; For example, while determining how elements collaborate&nbsp;you might find a gap in the requirements that causes you to go back to the beginning after collaborating with the analyst, or when evaluating the design a reviewer could&nbsp;note that a reusable element being used doesn't work as expected and that could cause you to identify new elements to take its place.<?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p></o:p></P>
<P>Consider the architecture while performing this task.&nbsp; All design work must be done while regarding the architecture within which the design exists.&nbsp; Furthermore, certain design elements will be deemed architecturally significant; those elements will require updates to the architecture. </P>
<P>This task will be applied numerous times.&nbsp; Design is best performed in small chunks.</P>
<P>Even when starting the design for a particular project it&nbsp;is expected that there will be existing frameworks and reusable elements.&nbsp; Every step of this task must give attention to the existing design and existing implementation, utilizing existing elements when possible and emulating or improving existing elements as appropriate while designing this portion of the solution. </P>
<P>Apply patterns throughout this task.&nbsp; Patterns represent proven designs and their usage promotes quality and consistency across the design. </P>]]></KeyConsiderations>
            <Section name="Understand requirement details" briefDescription="" id="_4Z7WYKuKEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Examine the relevant &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0VGbUMlgEdmt3adZL5Dmdw&quot;>Use Case&lt;/a>(s) and &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html&quot; guid=&quot;_BVh9cL-CEdqb7N6KIeDL8Q&quot;>Supporting Requirements&lt;/a>&amp;nbsp;to understand the scope of the design task and the&#xD;
    expectations on the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/design,_0WuL8slgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WuL8slgEdmt3adZL5Dmdw&quot;>Design&lt;/a>. Work with the Stakeholder and Analyst to clarify ambiguous or missing&#xD;
    information.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If the requirements are not represented in some sort of scenario form (for example a non-functional requirement might&#xD;
    not have a scenario associated with it), a scenario will have to be identified that appropriately exercises the&#xD;
    requirements under consideration.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If the requirements are&amp;nbsp;determined to be&amp;nbsp;incomplete or incorrect, work with the analyst to get the&#xD;
    requirements improved and possibly submit a change request against the requirements.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Understand the architecture" briefDescription="" id="_Ci7aYFixEdusJoWkvSRO9Q" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Understand how the architecture applies to this part of the design, and how this design work fits with the rest of the&#xD;
    system. Incorporate any applicable interfaces, key abstractions, mechanisms and patterns into the design work. Discuss&#xD;
    possible refinements to the architecture and new areas of potential re-use with the architect.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify design elements" briefDescription="" id="_--6tYKuKEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Identify the elements that collaborate together to provide the required behavior.&amp;nbsp; This can start with the key&#xD;
    abstractions identified in the architecture, domain analysis, and classical analysis&amp;nbsp;of the requirements (noun&#xD;
    filtering) to derive the&amp;nbsp;elements that would be required to fulfill them.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify elements in all perspectives being considered when performing this task.&amp;nbsp; This could include identifying&#xD;
    user interface elements,&amp;nbsp;control elements, data elements,&amp;nbsp;and elements relating to interfacing to other&#xD;
    systems or devices.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Existing elements of the design should be examined to see if they should participate in the collaboration.&amp;nbsp; It is&#xD;
    a mistake to create all new elements in each&amp;nbsp;execution of this task.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This list of candidates must be expanded to include special-purpose participants that handle&amp;nbsp;particular roles in&#xD;
    providing the required behavior such as transaction processing or adherence to some security specification.&amp;nbsp; The&#xD;
    &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html&quot; guid=&quot;_uF-QYEAhEdq_UJTvM1DM2Q&quot;>Entity-Control-Boundary Pattern&lt;/a>&amp;nbsp;provides a good start for identifying elements.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Determine how elements collaborate to realize the scenario" briefDescription="" id="_A_LU8KuLEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Walk through the scenario distributing responsibilities to the participating elements. These responsibilities can be simple&#xD;
statements of behavior assigned to elements; they need not be detailed operation specifications with parameters, etc. This&#xD;
step is about ensuring that a quality model is being created that is robust enough to support the requirements.&amp;nbsp; &#xD;
&lt;p>&#xD;
    Identify the required relationships between the&amp;nbsp;elements based on the walkthrough of the scenario examining how&#xD;
    the elements initiate each other's behavior. An element that requests behavior from another element is represented as a&#xD;
    relationship between those elements. As with the responsibilities, these relationships can just be defined at this&#xD;
    step.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Look to the architecture and previous design work to create a consistent collaboration. Use the Architect to explain&#xD;
    the details and motivations of the architecture. Look to reuse existing behavior and relations or to apply similar&#xD;
    structure to simplify the design of the overall system.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Additional elements might be identified as behavior is found that cannot appropriately be assigned to any of the&#xD;
    existing elements.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Refine design decisions" briefDescription="" id="_ENwJwKuLEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Refine the design to an appropriate level of detail to drive implementation and to ensure that it fits into the&#xD;
    architecture.&amp;nbsp; In this step the design can take into consideration the actual implementation language and other&#xD;
    technical decisions.&amp;nbsp; Revisit the identification of the elements and the collaborations&amp;nbsp;that realize the&#xD;
    scenarios if necessary as this refinement takes into consideration details at a lower level of abstraction. Discuss&#xD;
    testability issues, such as&amp;nbsp;design elements that are difficult to test or critical performance areas,&amp;nbsp;with&#xD;
    the Tester and Architect.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    In particular make decisions in regard to the considerations below:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Specific details of relationships between the elements such as multiplicity and navigability&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Operation detail such as parameters and return values&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Existence and detail of data attributes necessary&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Usage of inheritance and interfaces to improve the design&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Incorporate &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html&quot; guid=&quot;_w2ACwA4LEduibvKwrGxWxA&quot;>Design Mechanism&lt;/a>s from the architecture. Apply consistent structure of the elements&#xD;
    and organization of the behavior as in other areas of the design and use patterns identified in the architecture.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Design internals (for large or complex elements)" briefDescription="" id="_KNZYAKuLEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Design large or complex elements or some complex internal behavior in more detail. &amp;nbsp;&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    This might just involve devising an algorithm that&amp;nbsp;could be performed to produce the desired behavior. Add&#xD;
    additional operations, attributes, and relationships to support the expectations of an element. Discuss testability&#xD;
    issues, such as&amp;nbsp;design elements that are difficult to test or critical performance areas,&amp;nbsp;with the Tester and&#xD;
    Architect.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The state of the&amp;nbsp;element managed over the course of its lifetime&amp;nbsp;can be designed to ensure proper behavior in&#xD;
    various usages.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Design the database schema" briefDescription="" id="_9LeFME42EdudDeUNeAxPCQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    If the system has persistent data, the design will need to address&amp;nbsp;the database (or file) schema.&amp;nbsp; For a&#xD;
    relational database schema, identify the following:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        The structure of tables and views&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Relationships between&amp;nbsp;tables&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Triggers which enforce referential integrity&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Constraints on columns&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Default values for columns&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Stored procedures and functions&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Evaluate the design" briefDescription="" id="_mUVt8BfnEduD353bkQ4frw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Evaluate the object design for coupling, cohesion, and other quality design measurements.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Evaluate the database/file design for performance, referential integrity, and normalization.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Consider the design from various angles to ensure that it is a high-quality, communicable design.&amp;nbsp; Work with other&#xD;
    technical team members; an independent party can provide a fresh perspective.&amp;nbsp;Use the Tester and Architect to&#xD;
    provide perspectives on&amp;nbsp;design quality and adherence to the architecture.&amp;nbsp;However, when identifying potential&#xD;
    reviewers keep in mind that if someone can add value by reviewing the design, then perhaps they could have added even&#xD;
    more value by actively participating in the design effort itself.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If design flaws are identified, improve the design.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Communicate the design" briefDescription="" id="_OGYbwKuLEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Communicate&amp;nbsp;the design to&amp;nbsp;those who need to understand it. Though this is described here toward the end of&#xD;
    the task, communication should be going on throughout the steps. Working collaboratively is always better than&#xD;
    reviewing the work after it is complete.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Here are some ways to communicate&amp;nbsp;the design:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Formal models&amp;nbsp;specified in UML .&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Informal diagrams that render static structure and capture&amp;nbsp;dynamic behavior.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Annotated code that communicates information about the static structure supplemented with textual descriptions of&#xD;
        dynamic behavior across code modules&amp;nbsp;.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Physical data models to describe the database schema.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Here are some examples of individuals&amp;nbsp;who will need to understand the design:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Developers&amp;nbsp;who will implement a solution based on the design.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        An&amp;nbsp;architect who can review the design to ensure that it conforms to the architecture or who might examine the&#xD;
        design for opportunities to improve the architecture.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other designers who can examine the design for applicability to other parts of the system.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Developers or other designers who will be working on other parts of the system that will&amp;nbsp;depend on the&#xD;
        elements designed in this task.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Other reviewers&amp;nbsp;who will review the design for quality and adherence to standards.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    The purpose of&nbsp;this&nbsp;task&nbsp;is to describe the&nbsp;elements of the system so that they support the
    required behavior, are of high quality, and fit within the architecture.
</p>]]></Purpose>
          </Presentation>
          <Concept>_uF-QYEAhEdq_UJTvM1DM2Q</Concept>
          <Concept>_mzxI0A4LEduibvKwrGxWxA</Concept>
          <Guideline>_0X3bcMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0cr7cACrEdu8m4dIntu6jA</Guideline>
          <PerformedBy>_0YDosMlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_BVh9cL-CEdqb7N6KIeDL8Q</MandatoryInput>
          <MandatoryInput>_0XAf0MlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0VGbUMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0WuL8slgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0WuL8slgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Checklist" name="design" briefDescription="This checklist provides questions to verify that the design is created in a consistent and complete manner." id="_0XSzsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Design" variabilityType="na">
          <Presentation name="design,_0XSzsMlgEdmt3adZL5Dmdw" briefDescription="" id="_YIYIYMM1EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-15T09:28:43" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    The items in this checklist represent good practices for creating and communicating a robust design. Try to address
    every item to the greatest extent possible to create the best design. It may not be possible to address every item, and
    some items may only be able to be addressed to a limited extent. In these cases, be sure that there are good reasons
    for only partially addressing an item, or not addressing an item at all.
</p>
<p>
    Design can be performed every day. Use this checklist regularly to assure the design is robust, consistent, and
    understandable. Make the design good enough for the specific goals being addressed by using this checklist to identify
    areas that have been skipped, ignored, or not sufficiently addressed.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="General" briefDescription="" id="_cKSvsD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Do separate design elements have low coupling? Does each design element have high internal cohesion?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the design reflect the architectural objectives of the system?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Can the system be implemented from the information in the design? Has sufficient detail been included?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design consistent? Does any part of the design contradict another part of it in such a way that puts the project&#xD;
    at risk?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design able to accommodate future changes?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design appropriate to the experience level of other team members and stakeholders, neither too simple nor too&#xD;
    advanced?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design written in such a way, and is it structured well enough, so it can be maintained easily?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the design constrain the implementation only as much as is necessary?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the design describe all the behavior of the system for the requirements that are currently being addressed?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Can all parts of the design be traced back to the requirements? Can the requirements (for the current iteration) be&#xD;
    traced to design elements?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is there an unambiguous place or places&amp;nbsp;in the design where each behavior exists?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the use case flows that are currently being addressed described in the design?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are&amp;nbsp;complex flows outside the Basic Flow&amp;nbsp;addressed, including exceptional cases?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Has the behavior described in the requirements that are currently being addressed&amp;nbsp;been distributed to the correct&#xD;
    design elements?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the design provide enough information for test design? For example, are the collaborations between design elements&#xD;
    clear enough to create integration tests?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Have redundant areas of the design been removed so the Implementation does not contain redundant code?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Organization and Clarity" briefDescription="" id="__4O2AD6WEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Does the design describe the system at the appropriate level of abstraction, given the objectives? This usually means&#xD;
    the system is described at a number of different levels of&amp;nbsp;abstraction and perspectives.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the design use common vocabulary and terms from the business and technical domains?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does the design describe the behavior of the elements unambiguously to the extent that developer tests can be created&#xD;
    toverify the implementation?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the design's constructs, vocabulary, and semantics appropriate to the problem being solved? This usually means the&#xD;
    customer's vocabulary is used, and elements of the design are referenced in a consistent manner.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design organized in a way that team members can easily find the information they're looking for?&#xD;
&lt;/p>&#xD;
Is the notation used to&amp;nbsp;describe the design&amp;nbsp;used consistently?&lt;br />&#xD;
&lt;p>&#xD;
    Is the design organized in a way that helps team members modify it without contending for the same part of the design?&#xD;
    That is, can mulitple people work on the design in parallel?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the names of elements within the design consistent and easy to interpret?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Does each design element represent a clearly defined abstraction?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design as simple as it can be while fulfilling the objectives of the design and giving sufficient direction to&#xD;
    implementers?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the design clear enough and contain enough detail so it can be implemented?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Architecture" briefDescription="" id="_dahBcD6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Is the architecture clearly called out in the design ? Can team members and stakeholders clearly identify the portion&#xD;
    of the design that is the architecture?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are architectural mechanisms (patterns) clearly defined in the design so they're reusable and understandable?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are architectural mechanisms used appropriately? Are they applied in all applicable circumstances?&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Subsystems" briefDescription="" id="_kWnQ4D6SEduAL-bCqar_dg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Do all elements within a subsystem have private visibility? In other words, is the subsystem interface the&amp;nbsp;only&#xD;
    way to access the behavior of elements inside the subsystem?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Is the interface for each subsystem clearly defined in the design?&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Are the subsystem dependencies documented?&amp;nbsp;&#xD;
&lt;/p></Description>
            </Section>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="design" briefDescription="This guideline gives additional information on how to design a portion of the system." id="_0X3bcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Design" variabilityType="na">
          <Presentation name="design,_0X3bcMlgEdmt3adZL5Dmdw" briefDescription="" id="_Qo7pYMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-09T03:28:07" changeDescription="" version="">
            <MainDescription><![CDATA[<p>
    The design represents the behavior and structure of the system at various levels of abstraction – most notably not
    solely at the code level of abstraction.&nbsp; This will help the designer reason&nbsp;about the quality, structure,
    and behavior&nbsp;of the design.
</p>
<h3>
    Multiple Passes
</h3>
<p>
    The design will be revisited many times throughout the iterative lifecycle and even within an iteration.&nbsp;
</p>
<p>
    Each time some design activity is being performed, it will be performed with some specific goal.&nbsp; The goal might
    be to identify a notional set of participants in a collaboration that can be exercised to realize the behavior required
    (an analysis pass).&nbsp; The goal might be in the identification of some coarse-grained elements that are required to
    act out some scenario (an architectural pass).&nbsp; Then a pass might be done within one of those components to
    identify the elements within that will collaborate together to perform the behavior required (a more detailed design
    pass).
</p>
<p>
    Design might be performed in a particular context such as database context, user-interface context, or perhaps the
    context of how some existing library will be applied.&nbsp; In these cases the design steps will be performed just to
    make and communicate decisions regarding that context.
</p>
<p>
    Avoid analysis paralysis.&nbsp; Avoid refining, extending, and improving the design beyond a minimal version that
    suffices to cover the needs of the requirements within the architecture.&nbsp; Design should be done in small chunks,
    proven via implementation, improved via refactoring, and integrated into the baseline to provide value to the
    stakeholders.
</p>
<h3>
    Identification of&nbsp;Elements
</h3>
<p>
    Identify the&nbsp;elements based on needs of the requirements.
</p>
<p>
    The identification of elements can stem from a static perspective of walking through the requirements and identifying
    elements clearly called out, a form of domain modeling.&nbsp; It can pull in other elements identified as being in the
    application domain or deemed necessary from examining the requirements for the portion of the system being
    designed.&nbsp; This can also pull from key abstractions identified while defining the architecture.
</p>
<p>
    The identification of&nbsp;elements&nbsp;should&nbsp;apply a dynamic perspective&nbsp;by&nbsp;walking through scenarios
    of usage of the system (or subsystem) identifying elements needed to support&nbsp;the behavior.&nbsp; That behavior
    might be a scenario of usage from an external user perspective or, while designing a subsystem, a responsibility
    assigned to the subsystem that has complex algorithmic behavior. Consider applying the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Entity-Control-Boundary Pattern</a>&nbsp;to identify the elements necessary to support
    the scenario or apply other patterns identified in the architecture that specify the elements that will be used to
    support specific aspects of the scenario.
</p>
<p>
    If the system being designed is a real-time system, include elements representing events and signals that allow us to
    describe the asynchronous triggers of behavior to which the system must respond.&nbsp; Events are specifications of
    interesting occurrences in time and space that usually (if they are noteworthy) require some response from the
    system.&nbsp; Signals represent asynchronous mechanisms used to communicate certain types of events within the system.
</p>
<p>
    If there are existing&nbsp;elements from previous passes over the design or from selected frameworks or other reusable
    elements, those should be reused whenever possible.
</p>
<p>
    Having identified the elements, each should be given a meaningful name.&nbsp; Each element should also have a
    description so that the team members that work together to refine the design and implement from&nbsp;the
    design&nbsp;will understand the role the&nbsp;element will play.
</p>
<p>
    Based on the above, this identification of&nbsp;elements&nbsp;could be applied a number of times in designing just one
    part of the system.&nbsp; While there is no&nbsp;one correct&nbsp;strategy for multiple passes, they could be done at a
    coarse-grained level and then a fine-grained level or at an analysis (abstract) level and then a design level.
</p>
<h3>
    Behavior&nbsp;of&nbsp;Elements
</h3>
<p>
    To&nbsp;identify the behavior&nbsp;of the elements, walk through scenarios assigning behavior to the appropriate
    collaborating participant.&nbsp; If a particular usage of the system or subsystem can have&nbsp;multiple possible
    outcomes or variant sequences, cover enough scenarios to ensure that the design is robust enough to support the
    necessary possibilities.
</p>
<p>
    When assigning behavior to elements, consider applying the <a class="elementLink" href="./../../../openup_basic/guidances/concepts/entity_control_boundary_pattern,_uF-QYEAhEdq_UJTvM1DM2Q.html" guid="_uF-QYEAhEdq_UJTvM1DM2Q">Entity-Control-Boundary Pattern</a>&nbsp;or other patterns identified in the
    architecture.
</p>
<p>
    Behavior can be&nbsp;represented as&nbsp;a simple statement of responsibility or it can be a detailed operation
    specification.&nbsp; Use the appropriate level of detail to communicate important design decisions while&nbsp;giving
    the freedom to make appropriate implementation decisions as those tasks ensue.
</p>
<p>
    Behavior must be understood as a responsibility on an element, and as an interaction between two&nbsp;elements in the
    context of some broader behavior of the system or subsystem.&nbsp; The latter part of this will lead the developer to
    identify relationships needed between the elements.
</p>
<p>
    Avoid too much&nbsp;identification of behavior solely from the perspective of domain modeling.&nbsp; Only include
    behavior that is really needed, behavior identified by walking through required scenarios of system usage.
</p>
<h3>
    Design&nbsp;Element Relationships
</h3>
<p>
    The relationships between the&nbsp;elements necessary for the behavior must be designed.&nbsp; This can simply be the
    identification of&nbsp;the ability&nbsp;to traverse from one&nbsp;element to another or a need to manage an association
    between the elements.
</p>
<p>
    More detailed design can be performed on the relationships as appropriate.&nbsp; This can include optionality,
    multiplicity, whether the relationship is a simple dependency or managed association, etc. These decisions that drive
    implementation details are best made at the design level when it is&nbsp;easier to see how all the pieces fit
    together.&nbsp;
</p>
<p>
    As with the behavior discussion above, avoid defining too many relationships based on relationships in the application
    domain.&nbsp; Only include the relationships that are really needed based on the requirements.&nbsp; On the other hand,
    a combination of requirements knowledge and domain knowledge can lead to some detailed decisions on the relationships
    such as optionality and multiplicity.
</p>
<h3>
    Refine Design
</h3>
<p>
    Having identified a design&nbsp;including a set of collaborating&nbsp;elements with the behavior and relationships
    robust enough to handle the requirements under consideration, the design can be improved and transformed into an
    implementable system through refinement.
</p>
<p>
    The visibility of each operation should be selected to be as&nbsp;restrictive as possible.&nbsp; Based on walking
    through the scenario it should be clear which operations must be&nbsp;available to other elements in the design and
    which can be considered private behavior inside the element that has the operation.&nbsp; Minimizing the number of
    public operations creates a more maintainable and understandable design.
</p>
<p>
    With respect to parameters, the return value, and&nbsp;a description of how it will go about performing the behavior,
    operations can be detailed at a lower level that drives the actual implementation or that detail might be left to
    be&nbsp;handled when writing the code.
</p>
<p>
    Data attributes can be identified based on information needed to support behavior or based on additional requirements
    such as information to be presented to the user or transmitted to another system.&nbsp; Avoid indiscriminate domain
    analysis; there might be a great deal of data in the domain that is not needed to support the requirements.&nbsp; Data
    attributes can simply be identified or they can be designed in detail with attribute types, initial values, and
    constraints. Decide on the visibility of the data attribute; operations to access and update the data can be added or
    deferred to implementation.
</p>
<p>
    Generalization&nbsp;and interfaces can be applied to simplify or otherwise improve the design.&nbsp; Ensure that the
    usage of these techniques actually improves the design rather than muddling it with complexity.&nbsp; For example,
    common behavior can be factored into a parent class via generalization or out to a helper class via delegation; the
    latter solution can be more understandable and maintainable as generalization is an inflexible relationship.
</p>
<p>
    The refinement of any portion of the design could include another pass through the design process.&nbsp; One might find
    that what was initially identified as a single behavior on an&nbsp;element&nbsp;warrants a detailed walkthrough of the
    collaborating&nbsp;elements to realize that behavior.
</p>
<p>
    When updating an existing design <span     style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA">
    –</span> especially one that has had portions already implemented <span     style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA">
    –</span> apply <a class="elementLink" href="./../../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html" guid="_Poc7IPDzEdqYgerqi84oCA">Refactoring</a> to ensure that the improved design continues to perform as expected.
</p>
<h4>
    Organization of&nbsp;Elements (package-level)
</h4>
<p>
    In a design of any notable size, the&nbsp;elements must be organized into packages.&nbsp; Assign the&nbsp;elements to
    existing or new packages and ensure that the visibility relationships between the packages support
    the&nbsp;navigability required between the elements.&nbsp; Decide whether each element should be visible to elements
    outside its package.
</p>
<p>
    When structuring the design into packages, consider <a class="elementLink" href="./../../../openup_basic/guidances/guidelines/layering,_0gpkAMlgEdmt3adZL5Dmdw.html" guid="_0gpkAMlgEdmt3adZL5Dmdw">Layering</a>&nbsp;and other patterns.&nbsp; Though all design work must conform to
    existing architectural decisions, the allocation of&nbsp;elements to packages and possible updates to package
    visibility is an area of&nbsp;significant architectural concern.&nbsp; The developer should collaborate with the
    architect to ensure that package-level decisions are in accordance with the rest of the architecture.
</p>
<p>
    This guideline first talks about the identification and design of the&nbsp;elements and then about organizing
    the&nbsp;elements into packages.&nbsp; This is not a strict order of events.&nbsp; There is nothing wrong with
    identifying a package structure for the system and then populating that structure with identified&nbsp;elements&nbsp;as
    long as the actual&nbsp;elements identified are allowed to influence the resulting package structure.
</p>
<h3>
    Reviewing the Design
</h3>
<p>
    Design is best done collaboratively as it is a problem-solving activity with a range parts and perspectives.&nbsp;
    There should be a constant level of review to ensure that the decisions make sense within the area being designed and
    in the design of the system overall.&nbsp; There also might be occasions where the review of some area of design is
    reviewed by a set of interested or knowledgeable parties such as the architect who will verify that the design conforms
    to some architectural decision or a developer&nbsp;who will be expected to implement the design.&nbsp;
</p>
<p>
    The design should be examined to ensure that it follows heuristics of quality design such as loose coupling and high
    cohesion.&nbsp; Responsibilities should be appropriately&nbsp;distributed to elements such that there are no elements
    with too much responsibility and no elements are left without any responsibilities.&nbsp; The design should be able to
    clearly&nbsp;communicate the design decisions while not delving into concerns best dealt with during implementation of
    code.
</p>
<p>
    Ensure the design follows any project-specific guidelines and conforms to the architecture.
</p>
<p>
    Modifications to the design to improve it based on issues identified in reviewing it should apply <a class="elementLink" href="./../../../openup_basic/guidances/concepts/refactoring,_Poc7IPDzEdqYgerqi84oCA.html" guid="_Poc7IPDzEdqYgerqi84oCA">Refactoring</a> to ensure that the design and any existing implementation of the design
    continues to fulfill its responsibilities.
</p>
<h3>
    Relationship of Design to Architecture
</h3>
<p>
    This guideline remarks on conforming to the architecture in various ways; it is written as though one is designing
    within a pre-existing architecture.&nbsp; Though projects will often have pre-existing architectures available, a
    particular architecture is the result of design activities.&nbsp; Therefore, in addition to discussing conformance to
    some existing architecture, one must also consider the creation of the architecture and updates and improvements to the
    architecture based on the work of design.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="continuous_integration" briefDescription="This guideline describes how to apply continuous integration to improve the integration of units into the code base." id="_i8bUEL6cEdqti4GwqTkbsQ" orderingGuide="" suppressed="false" presentationName="Continuous Integration" variabilityType="na">
          <Presentation name="continuous_integration,_i8bUEL6cEdqti4GwqTkbsQ" briefDescription="" id="-DlaqJu4sEqMPk84qhJ6IEA" orderingGuide="" suppressed="false" authors="" changeDate="2006-06-01T12:26:30" changeDescription="" version="">
            <MainDescription><![CDATA[<p>
    [ Don't forget to talk about running developer tests. ]
</p>
<p>
    [Content below taken from step “Accept Integrated Elements and Promote Build" in the Task “Integrate and Create
    Build"... this Main Description needs to be cleaned up ]
</p>
<p>
    Depending on the complexity and number of&nbsp;components to be integrated, it is often more efficient to produce the
    target build in a number of steps, adding more&nbsp;components with each step, and producing a series of intermediate
    'mini' builds - thus, each build planned for an iteration may, in turn, have its own sequence of transient intermediate
    builds. These are subjected to a minimal integration test&nbsp;to ensure that what is added is compatible with what
    already exists in the system integration workspace. It should be easier to isolate and diagnose problems using this
    approach.&nbsp;
</p>
<p>
    Delivered&nbsp;components are accepted&nbsp;incrementally into the system integration workspace,&nbsp;having any merge
    conflicts being resolved.&nbsp;It is recommended that this&nbsp;is done in a bottom-up approach with respect to the
    layered structure, making sure that the versions of the&nbsp;components are consistent, taking imports into
    consideration. The increment of&nbsp;components is compiled and linked into an intermediate build, which is then
    provided to the tester to execute a minimal system integration test.
</p>
<p>
    <font size="1"><img height="172" alt="" src="openup_basic/guidances/guidelines/resources/ac_intsy.gif" width="501" /></font>
</p>
<p>
    This diagram shows a build produced in three increments. Some&nbsp;components are only needed as stubs, to make it
    possible to compile and link the other components, and provide the essential minimal run-time behavior.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_B3xkEPD0EdqYgerqi84oCA</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="promoting_builds" briefDescription="This guideline describes how to migrate a build up through a set of tiers from a private development area to a release area." id="_SM4YIL6dEdqti4GwqTkbsQ" orderingGuide="" suppressed="false" presentationName="Promoting Builds" variabilityType="na">
          <Presentation name="promoting_builds,_SM4YIL6dEdqti4GwqTkbsQ" briefDescription="" id="-zCM2ucJJxc_bQr_LoHlSaQ" orderingGuide="" suppressed="false" authors="" changeDate="2007-02-26T07:49:04" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    During iterative software development the team will create numerous <a class="elementLink"
    href="./../../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html"
    guid="_0YuXEMlgEdmt3adZL5Dmdw">Build</a>s. A build is initiated by combining the work completed by one or more
    developers and resolving any conflicts that are encountered. Ideally a build is then subjected to a battery of tests to
    determine if it is of sufficient quality to move into production.
</p>
<p>
    As a build progresses from development towards production it is beneficial to know two characteristics:
</p>
<p>
    <strong>Build contents</strong> – identifying the elements and their versions
</p>
<ul>
    <li>
        What is in this build (completed work items)
    </li>
    <li>
        What is partially in this build (work items that are partially complete)
    </li>
    <li>
        What is not in this build (work items that are not reflected at all in this build)
    </li>
</ul>
<p>
    <strong>Verification Level</strong> – identifying what amount of testing that has been completed.&nbsp; For example,
</p>
<ul>
    <li>
        Unit Tested
    </li>
    <li>
        Integration Tested
    </li>
    <li>
        System Tested
    </li>
</ul>
<p>
    The promotion lifecycle coordinates and synchronizes the efforts of the development team. This lifecycle consists of
    the following steps:
</p>
<ul>
    <li>
        Changes are introduced into the system in the form of completed work items
    </li>
    <li>
        A build is generated clearly identifying the&nbsp;changes
    </li>
    <li>
        Testing is conducted
    </li>
    <li>
        When testing is successful the changes are delivered to the next&nbsp;verification level
    </li>
</ul>
<p>
    Ultimately all required testing is complete and the a new system version is ready.
</p>
<p>
    It can also be beneficial to isolate work being performed at the different stages using different <a
    class="elementLink" href="./../../../openup_basic/guidances/concepts/workspace,_0cEmAMlgEdmt3adZL5Dmdw.html"
    guid="_0cEmAMlgEdmt3adZL5Dmdw">Workspace</a>s. This ensures that the effort of testing a build is applied to the
    correct version and also allows developers to continue working on the next build while the previous build is being
    tested.
</p>
<p>
    A promotional lifecycle such as this offers three key benefits
</p>
<ol>
    <li>
        Reduces effort because there is no reason to execute the tests in the next stages until the build passes the
        previous stage. For example you would not commit the resources to&nbsp;System Testing&nbsp;a build until it passes
        integration tests.
    </li>
    <li>
        Helps to ensure that a build which is moved into production has been subjected to the appropriate level of testing
        first.
    </li>
    <li>
        Simplifies debugging since developers can base their work on a proven build (Integration Tested build, for example)
        in relative isolation from destabilizing changes from other developers
    </li>
</ol>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_0cEmAMlgEdmt3adZL5Dmdw</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="entity_control_boundary_pattern" briefDescription="This concept introduces a pattern that provides a starting point for the distribution of responsibilities to a set of interacting design elements based on three key perspectives in a collaboration." id="_uF-QYEAhEdq_UJTvM1DM2Q" orderingGuide="" suppressed="false" presentationName="Entity-Control-Boundary Pattern" variabilityType="na">
          <Presentation name="finding_analysis_classes,_uF-QYEAhEdq_UJTvM1DM2Q" briefDescription="" id="-awaQ_2dwhGyKRoVKQ-esPQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-28T07:02:50" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    When identifying the elements for some scenario of system behavior, you can align each participating element with one
    of three key perspectives: Entity, Control, or Boundary.
</p>
<p>
    This pattern is similar to the Model View Controller pattern (described here [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html#BUS96" guid="_9ToeIB83Edqsvps02rpOOg">BUS96</a>] and here [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html#WIKP-MVC" guid="_9ToeIB83Edqsvps02rpOOg">WIKP-MVC</a>] among other places), but the Entity Control Boundary pattern is not solely
    appropriate for dealing with user interfaces and it gives the controller a slightly different role to play.
</p>
<h5>
    ECB&nbsp;Pattern Example
</h5>
<p>
    &nbsp;<img height="233" alt="" src="openup_basic/guidances/concepts/resources/EBCDiagram.JPG" width="493" />
</p>
<h3>
    Entity Elements
</h3>
<p>
    An entity is a long-lived, passive element that is responsible for some meaningful chunk of information. This is not to
    say that entities are "data" while other&nbsp;design elements&nbsp;are "function". Entities perform behavior organized
    around some cohesive amount of data.
</p>
<p>
    An example entity for a customer service application would be a Customer entity that manages all information about a
    customer.&nbsp; A design element for&nbsp;this entity would include data on the customer, behavior to manage the data,
    behavior to validate customer information&nbsp;and perform other business calculations such as "is this customer
    allowed to purchase product X?"
</p>
<p>
    The identification of the entities as part of this pattern can be done many times at different levels of abstraction
    from the code, at different levels of granularity in size, and from the perspectives of different contexts.&nbsp; For
    example you could do an analysis pass on a scenario of creating a marketing campaign and identify the customer element
    with various customer data elements such as name and address plus various required behaviors such as the management of
    the name and address data and the ability to&nbsp;rate the customer based on some algorithm&nbsp;(such an application
    of this pattern would be abstract from code, coarse-grained, and have no specific context).&nbsp; Later you could do a
    pass on the same scenario applying an architectural mechanism for database access that breaks the address out into its
    own element, moves the responsibility for storing and retrieving customers to a new control element, and identifies
    some specific database decisions&nbsp;such as&nbsp;the usage of primary keys in the entities (such an application of
    this pattern would be closer to the code, finer-grained, and aligned with a database&nbsp;context).
</p>
<h3>
    Control Elements
</h3>
<p>
    A control element manages the flow of interaction of the scenario. A control element could manage the end-to-end
    behavior of a scenario or it could manage the interactions between a subset of the elements.&nbsp; Behavior and
    business rules relating to the information relevant to the scenario should be assigned to the entities; the control
    elements are just responsible for the flow of the scenario.
</p>
<p>
    An example&nbsp;control element&nbsp;for a customer service application would be CreateMarketingCapmpaign.&nbsp; This
    design element would&nbsp;be responsive to certain front-end boundary elements and would collaborate with other
    entities, control&nbsp;elements, and back-end boundary elements to support the creation of a marketing campaign.
</p>
<p>
    As with the entity example above, there might be many passes over the identification of control elements.&nbsp; A first
    pass might be an analysis pass that identifies one control element for a&nbsp;scenario with behavior to make sure the
    design can support the flow of events, a&nbsp;subsequent pass might find controllers to manage reusable collaborations
    of low level elements that will map to a specific code&nbsp;unit to be written.
</p>
<h3>
    Boundary Elements
</h3>
<p>
    A boundary element lies on the periphery of a system or subsystem, but within it. For any scenario being considered
    either across the whole system or within some subsystem, some boundary elements will be "front-end" elements that
    accept input from outside the area under design and other elements will be "back-end" managing communication to
    supporting elements outside the system or subsystem.
</p>
<p>
    Two example boundary elements for a customer service application might be a front-end MarketingCampaignForm and a
    back-end BugdetSystem element.&nbsp; The MarketingCampaignForm would manage the exchange of information between a user
    and the system and the BugdetSystem would manage the exchange of information between the system and an external system
    that manages budgets.
</p>
<p>
    An analysis pass could identify one boundary element for each external relevant to a scenario; subsequently these could
    be broken down into multiple boundary elements or&nbsp;small communities made up of collaborating&nbsp;elements&nbsp;of
    all three stereotypes.
</p>
<h3>
    Walking the Scenario
</h3>
<p>
    One can walk through a scenario initiated by something outside the bounds of the system or subsystem being designed and
    distribute the responsibility to perform behavior supporting the scenario to the elements identified of each
    type.&nbsp; The appropriate design element responsible for each action in the scenario will be as described in the
    definition of each of the element types described above.
</p>
<p>
    In addition to identifying the behavior necessary to perform the scenario, the initiation of this behavior from design
    element to design element&nbsp;identifies the necessary relationships.&nbsp; There are certain
    appropriate&nbsp;relations between the participating elements.&nbsp;&nbsp;An element can communicate to other elements
    of the same kind.&nbsp; Control&nbsp;elements can communicate with each of the other two kinds, but entities and
    boundary elements should not directly communicate.&nbsp;
</p>
<p>
    The table below shows appropriate links between design elements.
</p>
<table cellspacing="2" cellpadding="2" width="400" summary="Appropriate Links" border="1">
    <tbody>
        <tr>
            <th scope="col">
            </th>
            <th scope="col">
                <center>
                    Entity
                </center>
            </th>
            <th scope="col">
                <center>
                    Boundary
                </center>
            </th>
            <th scope="col">
                <center>
                    Control
                </center>
            </th>
        </tr>
        <tr>
            <th scope="row">
                Entity
            </th>
            <td>
                <center>
                    X
                </center>
            </td>
            <td>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
        </tr>
        <tr>
            <th scope="row">
                Boundary
            </th>
            <td>
            </td>
            <td>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
        </tr>
        <tr>
            <th scope="row">
                Control
            </th>
            <td>
                <center>
                    X
                </center>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
            <td>
                <center>
                    X
                </center>
            </td>
        </tr>
    </tbody>
</table>
<p>
    By&nbsp;applying this pattern, a robust design can be put together that identifies the elements, behavior, and
    relationships&nbsp;necessary to support&nbsp;a scenario.&nbsp;
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="refactoring" briefDescription="This concept explains ways of improving the design of existing code in a way that does not alter its external behavior." id="_Poc7IPDzEdqYgerqi84oCA" orderingGuide="" suppressed="false" presentationName="Refactoring" variabilityType="na">
          <Presentation name="refactoring,_Poc7IPDzEdqYgerqi84oCA" briefDescription="" id="-fj_9xjbrpaYNSETyCz5yJg" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-21T11:03:50" changeDescription="" version="">
            <MainDescription><![CDATA[<p>
    Refactoring is a disciplined way to restructure code&nbsp;when small changes are made to&nbsp;the code to improve its
    design.&nbsp; An important aspect of a refactoring is that it improves the design while not changing the semantics
    of&nbsp;the design; a refactoring neither adds nor removes functionality.
</p>
<p>
    Refactoring enables you to evolve&nbsp;the code slowly over time, to take an iterative and incremental approach to
    implementation.
</p>
<p>
    These are the types of refactoring:
</p>
<ol>
    <li>
        Code refactoring.&nbsp; Often referred to simply as refactoring, this is the refactoring of programming source
        code.&nbsp; Examples of code refactorings include Rename Method, Encapsulate Field, Extract Class, Introduce
        Assertion, and Pushdown Method.
    </li>
    <li>
        Database refactoring.&nbsp; A database refactoring is a simple change to a database schema that improves its design
        while retaining both its behavioral and informational semantics.&nbsp; Examples of database refactorings include
        Rename Column, Split Table, Move Method to Database, Replace LOB with Table, Introduce Column Constraint, and Use
        Official Data Source.
    </li>
    <li>
        User interface (UI) refactoring.&nbsp; A UI refactoring is a simple change to the UI which retains its
        semantics.&nbsp; Examples of UI refactorings include Align Entry Fields, Apply Common Button Size, Apply Common
        Font, Indicate Format, Reword in Active Voice, and Increase Color Contrast.
    </li>
</ol>
<p>
    These are suggested resources:
</p>
<ul>
    <li>
        <a  href="http://www.refactoring.com" target="_blank" >http://www.refactoring.com</a>
    </li>
    <li>
        <a  href="http://www.agiledata.org/essays/databaseRefactoring.html" >http://www.agiledata.org/essays/databaseRefactoring.html</a>
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="continuous_integration" briefDescription="This concept introduces the idea of creating regular (at least daily) integrations in order to reduce integration risks, find bugs earlier, and drive a collaborative work environment." id="_B3xkEPD0EdqYgerqi84oCA" orderingGuide="" suppressed="false" presentationName="Continuous Integration" variabilityType="replaces">
          <Presentation name="continuous_integration,_NApSVdtxEdq7ovUqqSoGBQ" briefDescription="" id="-dhAMzNZNWufBnW0fPYQtBA" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-21T08:39:56" changeDescription="" version="">
            <MainDescription><![CDATA[<p>
    Continuous integration is an implementation practice where team members compile and test (integrate) their work
    frequently (at least daily). Integration errors should be detected as quickly as possible, either from compiler errors
    or errors reported by&nbsp;the test suite. Ideally the integration is done automatically when an updated version of
    source code is checked into&nbsp;the configuration management system.
</p>
<p>
    Benefits:
</p>
<ol>
    <li>
        Improved error detection.&nbsp; Continuous integration enables you to detect and address errors early, often
        minutes after they’ve been injected into the product.&nbsp; Note that you still need a good test suite.
    </li>
    <li>
        Improved system integration.&nbsp; By integrating continuously throughout your project you know that you can
        actually build it, thereby mitigating integration surprises at the end of the lifecycle.
    </li>
    <li>
        Reduced technical risk.&nbsp; You always have an up-to-date system against which to test.
    </li>
    <li>
        Reduced management risk.&nbsp; By continuously integrating your system you know exactly how much functionality that
        you’ve built to date, improving your ability to predict when and if you’re actually going to be able to deliver the
        necessary functionality.
    </li>
    <li>
        Improved collaboration.&nbsp; Continuous integration enables team members to work together safely.&nbsp; They know
        that they can make a change to their code, integrate the system, and determine very quickly whether or not their
        change worked.<br />
    </li>
</ol>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="types_of_developer_tests" briefDescription="This guideline describes various types of developer tests." id="_eRutgC5QEduVhuZHT5jKZQ" orderingGuide="" suppressed="false" presentationName="Types of Developer Tests" variabilityType="na">
          <Presentation name=",_eRutgC5QEduVhuZHT5jKZQ" briefDescription="" id="-VGT8iHGtQSiOUGitq1qmow" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-28T07:50:35" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    This guideline describes a number of types of tests. To perform these types of testing you need to define, and then
    run, a series of tests against&nbsp;the source code. A developer test is a single test that needs to be performed.
</p>
<p>
    It is valuable&nbsp;to augment automated tests with human readable test scripts in order to implement developer test
    cases, scripts that include the information discussed below. A test script is the actual steps, sometimes either
    written procedures to follow or the source code of a test. Developer test scripts are run against testing targets:
    either one unit of source code, a more complex portion of your system (such as a component), or the entire system
    itself to test&nbsp;some developer issue such as integration.
</p>
<h3>
    Regression Testing
</h3>
<p>
    Regression testing is the act of ensuring that changes to&nbsp;the code have not adversely affected existing
    functionality. It is important to recognize that incremental development makes regression testing critical. Whenever
    you release an application, you must ensure its previous functionality still works, and because you release
    applications more often when taking the incremental approach, this means regression testing becomes that much more
    important. Regression testing is the first thing you should be thinking about when testing for the following reasons:
</p>
<ol>
    <li>
        You want to be able to modify code and know that you can rerun your tests to see if you broke anything.
    </li>
    <li>
        Existing users get very angry when things that previously worked don’t work anymore.
    </li>
</ol>
<p>
    Regression testing is fairly straightforward conceptually – you just need to run all of&nbsp;the previous test cases
    against the new version of&nbsp;the code. Regression testing tools help immensely because they are designed with
    regression testing in mind. However, there are potential challenges to regression testing:
</p>
<ul>
    <li>
        When you change your production, either to enhance it or to refactor it, you will need to rework existing test
        cases coupled to that code.
    </li>
    <li>
        If your updates affect only a component of the system, then potentially you only need to run the test cases that
        affect this single component. Although this approach is a little risky because your changes may have had a greater
        impact than you suspect, it does help to reduce both the time and cost of regression testing.
    </li>
    <li>
        The more non-code artifacts that you decide to keep, the greater the effort to regression test your work and
        therefore the greater the risk to your project because you are more likely to skimp on your testing efforts.
    </li>
</ul>
<p>
    Regression testing is critical to success as an agile developer. Many software developers use the xUnit family of open
    source tools, such as <a href="http://www.junit.org/" target="_blank">JUnit</a> and <a href="http://www.vbunit.org/"
    target="_blank">VBUnit</a>, to test their code. The advantage of these tools is that they implement a testing framework
    with which you can regression test all of your source code. Commercial testing tools are also viable options.
</p>
<h3>
    Traditional Code Testing Techniques
</h3>
<p>
    Although object and procedural technologies are different, several important testing concepts from the procedural world
    are valid regardless of the underlying technology. These traditional testing techniques are:
</p>
<ul>
    <li>
        Black-box testing
    </li>
    <li>
        Clear-box testing
    </li>
    <li>
        Boundary-value testing
    </li>
    <li>
        Coverage/Path testing
    </li>
</ul>
<h4>
    Black-Box Testing
</h4>
<p>
    Black-box testing, also called interface testing, is a technique in which you create test cases based only on the
    expected functionality of a method, class, or application without any knowledge of its internal workings. One way to
    define black-box testing is that given input A you should obtain expected results B.
</p>
<p>
    The goal of black-box testing is to ensure the system can do what it should be able to do, but not how it does it. For
    example, if you invoke differenceInDays(June 30 2006, July 3 2006) the expected result should be three. The creation of
    black-box tests is often driven by the requirements for&nbsp;the system. The basic idea is&nbsp;to look at the user
    requirement and ask what needs to be done to show that the user requirement is met.
</p>
<p>
    The primary advantage of black-box testing is that it enables you to prove that your application fulfills the
    requirements defined for it.&nbsp;&nbsp; The primary disadvantage is that it does not show that the internals
    of&nbsp;the system work (hence the need for clear-box testing).
</p>
<h4>
    Clear-Box Testing
</h4>
<p>
    Clear-box testing, also called white-box testing, is based on the idea that&nbsp;the program code can drive the
    development of test cases. The basic concept is you look at&nbsp;the code, and then create test cases that exercise it.
    For example, assume you have access to the source code for differenceInDays(). When you look at it, you see an IF
    statement determines whether the two dates are in the same year. If&nbsp;they are in the same year then&nbsp;a simple
    strategy based on Julian dates is used; if not then a more complex&nbsp;strategy is used. This indicates that you need
    at least one test that uses dates from the same year and one from different years. By looking at the code, you are able
    to determine new test cases to exercise the different logic paths within it.
</p>
<p>
    The primary advantage of this concept is that it motivates you to create tests that exercise specific lines of
    code.&nbsp; The disadvantages are that it does not ensure that your code fulfils the actual requirements (hence the
    need for black-box testing) and that your testing code becomes highly coupled to your application code.
</p>
<h4>
    Boundary-Value Testing
</h4>
<p>
    This is based on the knowledge that you need to test your code to ensure it can handle unusual and extreme situations.
    For example, boundary-value test cases differenceInDays() would include passing it the same date, two wildly different
    dates, one date on the last day of the year and the second on the first day of the following year, and one date on
    February 29th of a leap year. The basic idea is you want to look for limits defined either by your business rules or by
    common sense, and then create test cases to test attribute values in and around those values.
</p>
<p>
    The primary advantage of boundary value testing is that it motivates you to confirm that your program code is able to
    handle “unusual” or “extreme” cases.
</p>
<h4>
    Coverage and Path Testing
</h4>
<p>
    Two critical “traditional” concepts are coverage and path testing. Coverage testing is a technique in which you create
    a series of test cases designed to test all the code paths in your code. In many ways, coverage testing is simply a
    collection of clear-box test cases that together exercise every line of code in your application at least once. Path
    testing is a superset of coverage testing that ensures not only have all lines of code been tested, but all paths of
    logic have also been tested. The main difference occurs when you have a method with more than one set of case
    statements or nested IF statements: to determine the number of test cases with coverage testing you would count the
    maximum number of paths between the sets of case/nested IF statements and, with path testing, you would multiply the
    number of logic paths.
</p>
<h4>
    Unit and Integration Testing
</h4>
<p>
    Unit testing is the testing of an item, such as an operation, in isolation. For example, the tests defined so far for
    differenceInDays() are all unit tests. Integration testing, on the other hand, is the testing of a collection of items
    to validate that they work together. In the case of the data library/class, do the various functions work together?
    Perhaps the differenceInDays() function has a side effect that causes the dayOfWeek() function to fail if
    differenceInDays() is called first. Integration testing looks for problems like this.
</p>
<h3>
    Object-Oriented Testing Techniques
</h3>
<p>
    When testing systems built using object technology it is important to understand that your source code is composed of
    several constructs, including methods (operations), classes, and inheritance. Therefore you need testing techniques
    that reflect the fact that you have these constructs. These techniques are:
</p>
<ul>
    <li>
        Method testing
    </li>
    <li>
        Class testing
    </li>
    <li>
        Class-integration testing
    </li>
    <li>
        Inheritance-regression testing
    </li>
</ul>
<h4>
    Method Testing
</h4>
<p>
    Method testing is the act of ensuring that your methods (operations) perform as defined. In procedural testing this
    would have been called function/procedure testing. Issues to address via method testing include:
</p>
<ul>
    <li>
        Ensure that your getter/setter methods work as intended
    </li>
    <li>
        Ensure that each method returns the proper values, including error messages and exceptions
    </li>
    <li>
        Validate the parameters being passed to a method
    </li>
    <li>
        Ensure that a method does what it should
    </li>
</ul>
<p>
    The advantage of method testing is that it ensures that methods work well in isolation but it does not help to find
    unintended side effects.
</p>
<h4>
    Class Testing
</h4>
<p>
    The main purpose of class testing is to test classes in isolation, and it is effectively the combination of traditional
    unit testing and integration testing. It is unit testing because you are testing the class and its instances as single
    units in isolation, but it is also integration testing because you need to verify the methods and attributes of the
    class work together. The one assumption you need to make while writing “class tests” is that all other classes in the
    system work. Issues to address via class testing include:
</p>
<ul>
    <li>
        Validate that the attributes of an object are initialized properly
    </li>
    <li>
        Validate the invariants of the class
    </li>
</ul>
<p>
    The primary advantages of class testing are that it validates that the operations and properties of a class work
    together and that the class works in isolation. However, it does not guarantee that a class works well with the rest of
    your system.
</p>
<h4>
    Class-integration Testing
</h4>
<p>
    Also known as component testing, this technique addresses the issue of whether the classes in your system, or a
    component of your system, work together properly. The relationships between classes can be used to drive the
    development of class integration test cases. Issues to address via class-integration testing include:
</p>
<ul>
    <li>
        Validate that objects do what other objects expect of them
    </li>
    <li>
        Validate that return values are acted appropriately
    </li>
    <li>
        Validate that exceptions/errors are processed appropriately
    </li>
</ul>
<p>
    The technique helps to validate that the various classes within a component, or a system, work together. However, it
    can be difficult to define and develop the test cases to fully perform this level of testing.
</p>
<h4>
    Inheritance-regression&nbsp;Testing
</h4>
This is the act of running of test cases defined for the superclasses on the instances of a subclass because errors have
not been introduced by that new subclass. New methods are added and existing methods may be redefined by subclasses,
methods which access and potentially change the value of the attributes defined in the superclass. It is possible that a
subclass may change the value of the attributes in a way that was never intended in the superclass, or at least was never
expected. The point is that you need to invoke the test suite of the superclass(es) when testing a subclass. <br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Role" name="developer_sln" briefDescription="" id="_BCtiMDR9EduwLdLujGQAIQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0YDosMlgEdmt3adZL5Dmdw" variabilityType="contributes">
          <ResponsibleFor>_0YuXEMlgEdmt3adZL5Dmdw</ResponsibleFor>
          <ResponsibleFor>_0WuL8slgEdmt3adZL5Dmdw</ResponsibleFor>
          <ResponsibleFor>_0YuXEclgEdmt3adZL5Dmdw</ResponsibleFor>
          <ResponsibleFor>_0YoQcMlgEdmt3adZL5Dmdw</ResponsibleFor>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="developer_testing" briefDescription="Developers regression test their code on a continuous basis to ensure that it works as expected." id="_aFeZgJquEdukqcRKZBQN9w" orderingGuide="" suppressed="false" presentationName="Developer Testing" variabilityType="na">
          <Presentation name="new_concept,_aFeZgJquEdukqcRKZBQN9w" briefDescription="" id="-Ff1JwbrGt1laexkOB6ZM1Q" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-03T11:00:23" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Developer testing is the act of regression testing source code by developers.&nbsp; This is sometimes called "unit
    regression testing" but many developer tests go beyond unit testing to address integration testing instead.
</p>
<h3>
    Testing Philosophies
</h3>
<p>
    Here are some important philosophies with regard to developer&nbsp;testing:
</p>
<ol>
    <li>
        The goal is to find defects. Successful tests find bugs, but correcting the bugs&nbsp;falls into other areas.
    </li>
    <li>
        Test&nbsp;early and often. The cost of change rises exponentially the longer it takes to find and then remove a
        defect. The implication is that you want to test as early as possible (the earliest you could possibly test is
        first, see <a class="elementLinkWithType"
        href="./../../../openup_basic/guidances/concepts/test_first_design,_0Y6kUMlgEdmt3adZL5Dmdw.html"
        guid="_0Y6kUMlgEdmt3adZL5Dmdw">Concept: Test-first Design</a>).
    </li>
    <li>
        Testing builds confidence. Many people fear making a change to their code because they are afraid that they will
        break it, but with a full test suite in place if you do break something you know you will detect it and then fix
        it.
    </li>
    <li>
        One test is worth a thousand opinions. You can&nbsp;say that your application works, but until you show the test
        results&nbsp;you might&nbsp;not be believed.
    </li>
    <li>
        Test to the risk. The riskier something is, the more it needs to be reviewed and tested. In other words you should
        invest significant effort testing in the algorithm for estimating radiation doses but nowhere near as much effort
        testing the "change font size" function of the same application.
    </li>
    <li>
        You can validate all artifacts. You can test all your artifacts, not just your source code, although the focus of
        this guidance is testing code.
    </li>
</ol>
<h3>
    Qualities of a Good Developer Test
</h3>
These are the qualities of&nbsp;a good developer test: 
<ul class="noindent">
    <li>
        It runs fast.&nbsp;It has&nbsp;short setup, run time, and clean-up.
    </li>
    <li>
        It runs in isolation. You should be able to reorder your tests.
    </li>
    <li>
        It is understandable. Good tests have consistent and informative names and use data that makes them easy to read
        and to understand.
    </li>
    <li>
        It uses real data. E.g. Use copies of production data when appropriate, but remember that you'll also have to
        create some specific "artificial" test data as well.
    </li>
    <li>
        It is minimally cohesive. The test represents one step toward your overall goal. The test should address one and
        one only issue.
    </li>
</ul>
<h3>
    Approaches for Test Setup
</h3>
<p>
    To successfully run a test, the system must be in a known state.&nbsp; To do this you will need objects or components
    in memory, rows in your database, etc.&nbsp;that you will test against.&nbsp; The easiest approach is to hardcode the
    required data and the setup code within the test itself.&nbsp; The primary advantage&nbsp;is that all the information
    that you need about the test is in one place and that the test is potentially self-sufficient.
</p>
<p>
    Another approach is to define an external data set which&nbsp;is loaded into memory or into&nbsp;the database at the
    beginning of&nbsp;the test run.&nbsp; There are several advantages to this approach:
</p>
<ul>
    <li>
        It decouples the test data from the test.&nbsp;
    </li>
    <li>
        More than one test&nbsp;can use the same data set.&nbsp;
    </li>
    <li>
        It is easy to modify and/or multiply the test data.&nbsp;
    </li>
</ul>
<p>
    There are some disadvantages to this approach:
</p>
<ul>
    <li>
        Increased complexity for maintaining the external data
    </li>
    <li>
        Potential coupling between test cases.&nbsp; When&nbsp;they share a common test data bed it becomes very easy to
        write tests&nbsp;that depend on other tests running first, thereby coupling them together.<br />
    </li>
</ul>
<h3>
    Coding for Testability
</h3>
<p>
    Add&nbsp;<a class="elementLink"
    href="./../../../openup_basic/guidances/termdefinitions/code_instrumentation,_JiqnEJt1EdutoZjlV3a4Lg.html"
    guid="_JiqnEJt1EdutoZjlV3a4Lg">Code Instrumentation</a> for testing and debugging.&nbsp; Pay special attention to the
    implementation of the observation/control points, such as critical functions or&nbsp;objects,&nbsp;as these aspects
    might need special support that has to be implemented in the component under test.
</p>
<h3>
    Reviewing Tests
</h3>
<p>
    If a test will be long-lived, ask a person with less inside knowledge of the component to run it and check if there is
    enough support information. Review it with other people within the development team and other interested parties as
    needed.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:TermDefinition" name="code_instrumentation" briefDescription="" id="_JiqnEJt1EdutoZjlV3a4Lg" orderingGuide="" suppressed="false" presentationName="Code Instrumentation" variabilityType="na">
          <Presentation name="new_term_definition,_JiqnEJt1EdutoZjlV3a4Lg" briefDescription="" id="-RlYzPnl6Pig2H851hHebBA" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-03T10:56:04" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    "Extra" statements added to source code for the purposes of testing, debugging, tuning,&nbsp;or tracing.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="coding_standard" briefDescription="A standard describing various coding conventions used for consistent, quality, understandable implementation." id="_0lnRMMqOEduwrYVlQ9zp3w" orderingGuide="" suppressed="false" presentationName="Coding Standard" variabilityType="na">
          <Presentation name="new_concept,_0lnRMMqOEduwrYVlQ9zp3w" briefDescription="" id="-vlYpfwIYlF_ZCk5s4Dsqdg" orderingGuide="" suppressed="false" authors="" changeDate="2007-03-04T09:29:08" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Using a coding standard is a software development practice that has been widely accepted in the industry. The need for
    this practice takes on added importance in&nbsp;a highly collaborative environment. The team should have a standard way
    of naming and formatting things so they can understand the code quickly and know where to look at all times.
</p>
<p>
    Ideally, the coding standard should be the result of team consensus. In some cases, decisions will be arbitrary (like
    how much to indent). Each item in the standard should support one or more goals, improved communication being one of
    the most critical goals. Once the team agrees on a standard, all members of the teams are expected to follow it. With
    time, the team will use and modify the standard to develop a style that is well adapted to their environment.
</p>
<p>
    Benefits
</p>
<ul>
    <li>
        Improved communication: increases the ability to read each other's code.
    </li>
    <li>
        Refactoring support: provides consistently shaped code.
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ContentPackage" name="test" briefDescription="" id="_0ZM4MMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
        <ContentElement xsi:type="uma:Artifact" name="test_script" briefDescription="This artifact contains the step-by-step instructions that realize a test, enabling its execution. These may take the form of either documented textual instructions that are executed manually or computer readable instructions that enable automated test execution." id="_0ZfMEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Script" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="test_script,_0ZfMEMlgEdmt3adZL5Dmdw" briefDescription="" id="_NqYIcqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-20T01:12:17" changeDescription="" version="" externalId="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions></RepresentationOptions>
          </Presentation>
          <Checklist>_0Z9tMMlgEdmt3adZL5Dmdw</Checklist>
          <Guideline>_0aDz0MlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
        </ContentElement>
        <ContentElement xsi:type="uma:Checklist" name="test_script" briefDescription="This checklist provides questions to verify that tests are created in a consistent and complete manner." id="_0Z9tMMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Script" variabilityType="na">
          <Presentation name="test_script,_0Z9tMMlgEdmt3adZL5Dmdw" briefDescription="" id="_4LuPMMPcEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2005-07-26T10:21:21" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Does the test script conform to the related test case" briefDescription="" id="_DiPTsE_cEduqM_QlWBlZ_g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Ensure that the test script conforms to the specification established in the test case if one is associated with the test&#xD;
script.&amp;nbsp; The test case captures the intent of the test; the test script must conform to this intent.</Description>
            </Section>
            <Section name="Is the test script testable" briefDescription="" id="_KS930Bg9EduxCP6DVVLxsA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description></Description>
            </Section>
            <Section name="Is the test script reusable" briefDescription="" id="_H-q58Bg9EduxCP6DVVLxsA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Ensure that your test scripts can be reused by designing your test scripts to maximize reuse.&amp;nbsp; Promoting reuse takes&#xD;
different forms depending on whether you are generating, programming, or recording test scripts.</Description>
            </Section>
            <Section name="Is the test script prescriptive and unambiguous" briefDescription="" id="_5_92wE_cEduqM_QlWBlZ_g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Ensure that the test script represents clear instructions on how the test must be run and how the results should be&#xD;
analyzed.&amp;nbsp; While non-automated tests can be written in such a way that the tester can have leeway in how the test is&#xD;
precisely run, there is no room for creativity in how the test results are to be analyzed for success or failure.</Description>
            </Section>
            <Section name="Is the test script named consistently with your other test work products" briefDescription="" id="_La5wQBg9EduxCP6DVVLxsA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Ensure that the naming of your test scripts is consistent with other test-related work products.&amp;nbsp; For example, if you&#xD;
are creating test classes for each of your test cases, ensure that the naming represents this relationship.&amp;nbsp;&#xD;
Alternatively, if you are building test scripts inside of a library, use a consistent naming convention to reflect the&#xD;
library or libraries.</Description>
            </Section>
            <Section name="Does your test script provide test coverage" briefDescription="" id="_Ng5zcBg9EduxCP6DVVLxsA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Ensure that your test scripts provide test coverage consistent with the system under test.</Description>
            </Section>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="test_suite" briefDescription="This guideline discusses how to maintain automated test suites." id="_0aDz0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Suite" variabilityType="na">
          <Presentation name="test_suite,_0aDz0MlgEdmt3adZL5Dmdw" briefDescription="" id="_s60KoMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T06:48:57" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The test suite provides a means of managing the complexity of the test implementation. Many system test efforts fail
    because the team gets lost in the minutia of all of the detailed tests, and subsequently loses control of the test
    effort. Similar to UML packages, test suites provide a hierarchy of encapsulating containers to help manage the test
    implementation. They provide a means of managing the strategic aspects of the test effort by collecting tests together
    in related groups that can be planned, managed, and assessed in a meaningful way.
</p>
<p>
    The test suite represents a container for organizing arbitrary collections of related test scripts. This may be
    realized (implemented) as one or more automated regression test suites, but the test suite can also be a work plan for
    the implementation of a group of related manual test scripts. Note also that test suites can be nested hierarchically,
    therefore one test suite may be enclosed within another.
</p>
<p>
    Sometimes these groups of tests will relate directly to a subsystem or other system design element, but other times
    they'll relate directly to things such as quality dimensions, core "mission critical" functions, requirements
    compliance, standards adherence, and many others concerns that are organized based on requirements and therefore cut
    across the internal system elements.
</p>
<p>
    Consider creating test suites that arrange the available test scripts, in addition to other test suites, in many
    different combinations: the more variations you have, the more you'll increase coverage and the potential for finding
    errors. Give thought to a variety of test suites that will cover the breadth and depth of the target test items.
    Remember the corresponding implication that a single test script (or test suite) may appear in many different test
    suites.
</p>
<p>
    Some test automation tools provide the ability to automatically generate or assemble test suites. There are also
    implementation techniques that enable automated test suites to dynamically select all or part of their component test
    scripts for each test cycle run.
</p>
<p>
    Test suites can help you maintain your test assets and impose a level of organization that facilitates the entire
    testing effort.&nbsp; Like physical objects, tests can break. It's not that they wear down, it's that something changed
    in their environment. Perhaps they've been ported to a new operating system. Or, more likely, the code they exercise
    has changed in a way that correctly causes the test to fail. Suppose you're working on version 2.0 of an e-banking
    application. In version 1.0, this method was used to log in:
</p>
<p class="codeSample">
    public boolean login (String username);
</p>
<p>
    In version 2.0, the marketing department has realized that password protection might be a good idea. So the method is
    changed to this:
</p>
<p class="codeSample">
    public boolean login (String username, String password);
</p>
<p>
    Any test that uses the first form of the login will fail. It won't even compile. In this example you could find that,
    not many useful tests can be written that don't use login. You might be faced with hundreds or thousands of failing
    tests.
</p>
<p>
    These tests can be fixed by using a global search-and-replace tool that finds every instance of login(something) and
    replaces it with login(something, "dummy password"). Then arrange for all the testing accounts to use that password,
    and you're on your way.
</p>
<p>
    Then, when marketing decides that passwords should not be allowed to contain spaces, you get to do it all over again.
</p>
<p>
    This kind of thing is a wasteful burden, especially when, as is often the case, the test changes aren't so easily made.
    There is a better way.
</p>
<p>
    Suppose that the test scripts originally did not call the product's login method. Rather, they called a library method
    that does whatever it takes to get the test logged in and ready to proceed. Initially, that method might look like
    this:
</p>
<p class="codeSample">
    public boolean testLogin (String username) {<br />
    &nbsp; return product.login(username);<br />
    }
</p>
<p>
    When the version 2.0 change happens, the utility library is changed to match:
</p>
<p class="codeSample">
    public Boolean testLogin (String username) {<br />
    &nbsp; return product.login(username, "dummy password");<br />
    }
</p>
<p>
    Instead of a changing a thousand tests, you change one method.
</p>
<p>
    Ideally, all the needed library methods would be available at the beginning of the testing effort. In practice, they
    can't all be anticipated-you might not realize you need a testLogin utility method until the first time the product
    login changes. So test utility methods are often "factored out" of existing tests as needed. It is very important that
    you perform this ongoing test repair, even under schedule pressure. If you do not, you will waste much time dealing
    with an ugly and un-maintainable test suite. You might well find yourself throwing it away, or being unable to write
    the needed numbers of new tests because all your available testing time is spent maintaining old ones.
</p>
<p>
    Note: the tests of the product's login method will still call it directly. If its behavior changes, some or all of
    those tests will need to be updated. (If none of the login tests fail when its behavior changes, they're probably not
    very good at detecting defects.)
</p>
<h3>
    Abstraction helps manage complexity
</h3>
<p>
    The previous example showed how tests can abstract away from the concrete application. Most likely you can do
    considerably more abstraction. You might find that a number of tests begin with a common sequence of method calls: they
    log in, set up some state, and navigate to the part of the application you're testing. Only then does each test do
    something different. All this setup could-and should-be contained in a single method with an evocative name such as
    readyAccountForWireTransfer. By doing that, you're saving considerable time when new tests of a particular type are
    written, and you're also making the intent of each test much more understandable.
</p>
<p>
    Understandable tests are important. A common problem with old test suites is that no one knows what the tests are doing
    or why. When they break, the tendency is to fix them in the simplest possible way. That often results in tests that are
    weaker at finding defects. They no longer test what they were originally intended to test.
</p>
<h3>
    Throwing away tests
</h3>
<p>
    Even with utility libraries, a test might periodically be broken by behavior changes that have nothing to do with what
    it checks. Fixing the test doesn't stand much of a chance of finding a defect due to the change; it's something you do
    to preserve the chance of the test finding some other defect someday. But the cost of such a series of fixes might
    exceed the value of the tests hypothetically finding a defect. It might be better to simply throw the test away and
    devote the effort to creating new tests with greater value.
</p>
<p>
    Most people resist the notion of throwing away a test, at least until they're so overwhelmed by the maintenance burden
    that they throw all the tests away. It is better to make the decision carefully and continuously, test by test, asking:
</p>
<ul>
    <li>
        How much work will it be to fix this test well, perhaps adding to the utility library?
    </li>
    <li>
        How else might the time be used?
    </li>
    <li>
        How likely is it that the test will find serious defects in the future? What's been the track record of it and
        related tests?
    </li>
    <li>
        How long will it be before the test breaks again?
    </li>
</ul>
<p>
    The answers to these questions will be rough estimates or even guesses. But asking them will yield better results than
    simply having a policy of fixing all tests.
</p>
<p>
    Another reason to throw away tests is that they are now redundant. For example, early in development, there might be a
    multitude of simple tests of basic parse-tree construction methods (the LessOp constructor and the like). Later, during
    the writing of the parser, there will be a number of parser tests. Since the parser uses the construction methods, the
    parser tests will also indirectly test them. As code changes break the construction tests, it's reasonable to discard
    some of them as being redundant. Of course, any new or changed construction behavior will need new tests. They might be
    implemented directly (if they're hard to test thoroughly through the parser) or indirectly (if tests through the parser
    are adequate and more maintainable).
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="implement_tests" briefDescription="Implement one or more test artifacts to enable the validation of the software  product through actually running the system.  Combine  tests to facilitate appropriate breadth and depth of test coverage." id="_0jO98MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Implement Tests" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="implement_tests,_0jO98MlgEdmt3adZL5Dmdw" briefDescription="" id="_NrbRUKeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-21T01:51:14" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Select appropriate implementation technique" briefDescription="" id="_S8JzsKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Select one or several of the following test implementation&amp;nbsp;techniques:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        manual test scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        programmed test scripts&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        recorded test scripts&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Implement the test" briefDescription="" id="_VN5M0KuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Using your test-ideas list and test cases as inputs, set up your specifications, spreadsheet, or&amp;nbsp;automated&#xD;
    tool&amp;nbsp;to record scripts needed to conduct the test.&amp;nbsp;If you are recording explicit steps for your test,&#xD;
    navigate through the system under test identifying steps, groups of related steps, verification points, and control&#xD;
    points.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Establish external data sets" briefDescription="" id="_WvBoYKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Create containers for your test data sets. Separate the production data from generated data. Associate your data sets with&#xD;
a given build of the system under test.&amp;nbsp;If data sets are associated with a particular part of the system under test,&#xD;
mark them accordingly.</Description>
            </Section>
            <Section name="Verify Test implementation" briefDescription="" id="_X0dmcKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Run the test script to verify that it implements the tests correctly. For manual testing,&amp;nbsp;conduct a walkthrough of&#xD;
    the test script. For automated tests, verify that&amp;nbsp;the test implementation will involve some degree of the&#xD;
    configuration of the testing tool.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Organize tests into test suites" briefDescription="" id="_Y-ABYKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Collect tests into related groups. The grouping you use depends on your test environment. For example, you can organize&#xD;
    test cases, test scripts, and test data hierarchically to facilitate navigation within a test, as well as within the&#xD;
    suite. Another form of test suite organization is based on system functionality and uses the quality attributes of&#xD;
    usability, reliability, and performance as categories for groups.&amp;nbsp;You may choose to follow an iteration-based test&#xD;
    suite organization, instead.&amp;nbsp;Since the system under test is undergoing its own evolution, create your test suites&#xD;
    to facilitate regression testing, as well as system configuration identification.&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    To implement one or more tests that can be executed to validate a system.
</p>]]></Purpose>
          </Presentation>
          <Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0jzlsMlgEdmt3adZL5Dmdw</Guideline>
          <PerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0ZS-0MlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0ZfMEMlgEdmt3adZL5Dmdw</Output>
          <OptionalInput>_0ZfMEMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_0YuXEMlgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="run_tests" briefDescription="Run the appropriate collections of tests required to evaluate product quality. Capture test results that facilitate ongoing assessment of the product." id="_0jVEkMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Run Tests" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="run_tests,_0jVEkMlgEdmt3adZL5Dmdw" briefDescription="" id="_NrbRUqeqEdmKDbQuyzCoqQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-07T10:24:24" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[Run the system test, which addresses functional and system integration tests and, potentially, user acceptance tests.]]></MainDescription>
            <KeyConsiderations><![CDATA[<ul>
    <li>
        Run the test regularly. Ideally, that means whenever the code changes but, minimally, once a day.
    </li>
    <li>
        It should be possible for anyone on the test team to run the test at any time.
    </li>
</ul>]]></KeyConsiderations>
            <Section name="Schedule test execution" briefDescription="" id="_fR4aQKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Run&amp;nbsp;the system tests as often as possible. Ideally, run&amp;nbsp;the tests whenever new code is checked into&amp;nbsp;the&#xD;
    version control tool.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    For larger systems, this will be too expensive.&amp;nbsp;The tests may take several hours to run; therefore, you'll need to&#xD;
    schedule tests less frequently. If possible, however, run the tests several times a day. As a minimum,&#xD;
    run&amp;nbsp;automated tests each night.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Run the test" briefDescription="" id="_gV408KuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Run the test at the scheduled time based on the instructions in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/test_script,_0ZfMEMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0ZfMEMlgEdmt3adZL5Dmdw&quot;>Test Script&lt;/a>. It is best that the script&amp;nbsp;be automated.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Good practices:&#xD;
&lt;/p>&#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Run the test in a separate test environment.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Ensure that you run the test against the latest clean build.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        The first step of the test should be to set up the test environment (ensure that the network is available, that the&#xD;
        test database is available and reset to a known state, and so on).&#xD;
    &lt;/li>&#xD;
&lt;/ol></Description>
            </Section>
            <Section name="Close test run" briefDescription="" id="_hfVJQKuSEdmhFZtkg1nakg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Close the actual run as the last step of running the test.&amp;nbsp;To do this: &#xD;
&lt;ol>&#xD;
    &lt;li>&#xD;
        Close the test logs. The&amp;nbsp;test log files should be closed and placed in the appropriate folder or directory.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Announce results. Send a notice to everyone involved in the project informing them of the result of the test run&#xD;
        and where they can find the test logs.&#xD;
    &lt;/li>&#xD;
&lt;/ol></Description>
            </Section>
            <Section name="Examine the test log" briefDescription="" id="_sQaC4DO2EduqsLmIADMQ9g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Collect and compile information from test execution logs so you can:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Capture the high-impact and risk issues discovered in running the tests.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Identify errors in test creation, data inputs, or integrating applications and any architectural anomalies.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Isolate the target of the test to determine failure points.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Diagnose failure symptoms and characteristics.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Assess and identify possible solutions.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    After completing these steps, verify that you have enough details to determine the impact of the results. In addition,&#xD;
    make sure that enough information exists to assist individuals who are performing dependent tasks.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify failures and propose solutions" briefDescription="" id="_0XzAwDO2EduqsLmIADMQ9g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Identify whether or not the test has failed and propose a solution based on the type of test and category of&#xD;
    failure.&amp;nbsp; The approach to testing will determine the identified failures and candidates for solutions.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Tests that are programmer supporting are used to help prepare and ensure confidence in the code.&amp;nbsp;When identifying&#xD;
    failures and proposing solutions for programmer supporting tests:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Failures will be identified at an object or element level.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Solutions will be to help clarify the problem.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    Test that are business supporting are used to uncover prior mistakes and omissions.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Failures will identify omissions in requirements.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Solutions will help to clarify expectations of the system.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    After you have this information and the steps proposed to resolve the failures, you can effectively categorize the type&#xD;
    of failure and the appropriate type of solution.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    See &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html&quot; guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[MAR03]&lt;/a> for more information.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Communicate test results" briefDescription="" id="_3t6oADO2EduqsLmIADMQ9g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Communicate the test results to the team. For failed tests this might involve adding bugs to the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Work Items List&lt;/a>.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Communicating test results can affect the perception of the effectiveness of the tests. When communicating test&#xD;
    results, it is important that you:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Know the audience, so that appropriate information is communicated appropriately&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Run tests or scenarios that are likely to uncover the high-impact and risk issues or represent actual use of the&#xD;
        system&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p>&#xD;
    When preparing test result reports, answer the following questions:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        How many test cases exist, and what are their states (pass, fail, blocked, and so on)?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        How many bug reports have been filed, and what are their states (open, assigned, ready for testing, closed,&#xD;
        deferred)?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        What trends and patterns do you see in test case and bug report states, especially opened and closed bug reports&#xD;
        and passed and failed test cases?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For test cases that were blocked or skipped, why are they in this state?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Considering all test cases not yet run (and perhaps not even created yet), what key risks and areas of&#xD;
        functionality remain untested?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For failed test cases, what are the associated bug reports?&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        For bug reports ready for confirmation testing, when can your team perform the test?&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[To execute tests and evaluate the test results.]]></Purpose>
          </Presentation>
          <Guideline>_0kF5kMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_0j5sUMlgEdmt3adZL5Dmdw</Guideline>
          <PerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0YuXEMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0ZfMEMlgEdmt3adZL5Dmdw</MandatoryInput>
          <Output>_0ZlSsMlgEdmt3adZL5Dmdw</Output>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="failure_analysis_rpt_creation" briefDescription="This concept addresses how to conduct failure analysis based on the execution of tests. The result of this analysis can take the form of a failure analysis report." id="_0jhR0MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Failure Analysis and Report Creation" variabilityType="na">
          <Presentation name="failure_analysis_rpt_creation,_0jhR0MlgEdmt3adZL5Dmdw" briefDescription="" id="-9gUpkUYqONF3x8UWwAO_zw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T10:52:52" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    During testing, you will encounter failures related to the execution of your tests in different forms, such as code
    defects, user errors, program malfunctions, and general problems. This&nbsp;concept discusses some ways to conduct
    failure analysis and then to report your findings.
</p>
<h3>
    Failure Analysis
</h3>
<p>
    After you have run your tests, it is good practice to identify inputs for review of the results of the testing effort.
    Some likely sources are defects that occurred during the execution of test scripts, change request metrics, and test
    log details.
</p>
<p>
    Running test scripts results in errors of different kinds such as uncovered defects, unexpected behavior, or general
    failure of the test script to run properly. When you run test scripts, one of the most important things to do is to
    identify causes and effects of failure. It is important to differentiate failures in the system under test&nbsp;from
    those related to the tests themselves.
</p>
<p>
    Change request metrics are useful in analyzing and correcting failures in the testing. Select metrics that will
    facilitate creation of incident reports from a collection of change requests.
</p>
<p>
    Change request metrics that you may find useful in your failure analysis include:
</p>
<ul>
    <li>
        test coverage
    </li>
    <li>
        priority
    </li>
    <li>
        impact
    </li>
    <li>
        defect trends
    </li>
    <li>
        density
    </li>
</ul>
<p>
    Finally, one of the most critical sources of your failure analysis is the test log. Start by gathering the test log's
    output during the implementation and execution of the tests. Relevant logs might come from many sources; they might be
    captured by the tools you use (both test execution and diagnostic tools), generated by custom-written routines your
    team has developed, output from the target test items themselves, and recorded manually be the tester. Gather all of
    the available test log sources and examine their content. Check that all the scheduled testing executed to completion,
    and that all the needed tests&nbsp;have been scheduled.
</p>
<h3>
    Self-Documenting Tests
</h3>
<p>
    For automated tests it is a best practice for the test itself to examine the results and clearly report itself as
    passing or failing. This provides the most efficient way to run tests such that whole suites of tests can be run with
    each test in turn determining whether it has passed or failed without the need for human intervention. When authoring
    self-documenting tests, take extra care to ensure that the analysis of the results considers all possibilities.
</p>
<h3>
    Recording Your Findings
</h3>
<p>
    Once you have conducted your failure analysis, you may decide to formalize the results of this analysis by recording
    your findings in a report. There are several factors that go into deciding whether to record your failure analysis in a
    report. Some of the key factors include: level of testing formality, complexity of the testing effort, and the need to
    communicate the testing results to the entire development team. In less formal environments, it may be sufficient to
    record your failure analysis in&nbsp;a test evaluation summary.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="maintaining_automated_test_suite" briefDescription="This guideline explains ways to maintain automated test suites - collection of tests performed together for breadth and depth coverage." id="_0kF5kMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Maintaining Automated Test Suite" variabilityType="na">
          <Presentation name="maintaining_automated_test_suite,_0kF5kMlgEdmt3adZL5Dmdw" briefDescription="" id="_8ngBgMPdEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-26T08:31:15" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    At some point in your test effort, you may find it necessary to manage your test effort by creating test suites for
    your test assets.&nbsp;Maintaining test suites can take many different forms. To facilitate your testing, you may want
    to introduce some&nbsp;level of&nbsp;automation of your test suites.&nbsp;The fact that you've automated your test
    suites does not necessarily make your testing easier however. It may actually increase the maintenance burden of your
    suites.
</p>
<p>
    This guideline introduces you to useful heuristics on how to facilitate the maintenance of your automated test suites.
</p>
<h4>
    Plan your test&nbsp;suites
</h4>
<p>
    Automating your testing without planning increases&nbsp;the chances that testing will be ineffective
    and&nbsp;inefficient.&nbsp;Some level of planning should take place whether implicit or explicit.&nbsp;An essential
    part of any test plan is the definition of a strategy for test automation.&nbsp;Use your plan to articulate to the
    development team how you plan to maintain your test assets.&nbsp;In many cases, this is never done.&nbsp;The rest of
    the development team may be unaware of how you intend to maintain your tests.&nbsp;It is also a good practice to get
    the rest of the development team to understand that this maintenance can be a substantial part of the overall
    development effort.&nbsp;Use your test tooling to capture this information and treat this plan just like you would
    treat any other test asset in your test repository.
</p>
<h4>
    Centrally locate your test assets
</h4>
<p>
    To facilitate the maintenance of your automated test suites, locate your test assets in a repository that can be
    accessed by the development team.&nbsp;Many test automation environments provide test management tools that make it
    easier to organize and access your test assets by maintaining the test assets (test cases, test scripts, and test
    suites) in a common repository.
</p>
<p>
    In addition, some form of access control is enforced by the automation test tool.&nbsp;This eases the maintenance
    burden by ensuring the integrity of your test suites.&nbsp;You may choose to grant stakeholders and managers read-only
    access, whereas developers and testers at the practitioner level may have read/write access.
</p>
<h4>
    Treat your test assets like any other software
</h4>
<p>
    Software must be maintained.&nbsp;This also applies to the software in your test suites.&nbsp;Test cases and their
    associated test scripts, whether recorded or programmed, should be maintained.&nbsp;And just as software has different
    kinds of maintenance (e.g., corrective, preventative, or adaptive) so too do the assets in your automated test suites.
    As you lifecycle your test suites, identify, if only informally,&nbsp;how&nbsp;you plan to disposition the test suite
    corrective maintenance (e.g., syntactical errors in your scripts),&nbsp;preventative maintenance (e.g., where possible
    to write generalized test scripts), and adaptive maintenance (e.g., how you&nbsp;can use your test tooling to re-assign
    test&nbsp;assets within one suite to&nbsp;another suite or suites).&nbsp;This can be captured, as described in the
    section <strong>Plan Your Test Suites</strong> above, in your test plan.
</p>
<h4>
    Improve the testability of your test suites through collaboration with developers
</h4>
<p>
    It's one thing to say that your test suites will need to be maintained due to changes in the application, changes in
    the testing target, etc.&nbsp;It's quite another thing to actually determine whether a test suite needs to be
    revamped&nbsp;and, if it does, what test assets within it need to be addressed.
</p>
<p>
    One way to facilitate this is to use test suites as a way to communicate test decision to the developers.&nbsp;One way
    to perform continuous perfective maintenance of test suites is to think of your test suites as assets that belong to
    the development team rather than just the testers.&nbsp; You can perform a kind of perfective maintenance on test in
    the following ways:
</p>
<ul>
    <li>
        use test suites to raise the level of abstraction
    </li>
    <li>
        use test suites to provide focus for the developer
    </li>
    <li>
        use test suites to articulate areas that the developers would like testers to focus on
    </li>
    <li>
        make the construction and maintenance&nbsp;of test suites more efficient&nbsp;by understanding what area(s)
        developers want to focus on
    </li>
    <li>
        use test suites to clarify test targets with developers
    </li>
</ul>
<h4>
    Don't be afraid to clean up your suites
</h4>
<p>
    Your test assets will evolve just as the application under test will.&nbsp;As requirements to the system change, the
    application will change as well.&nbsp;To maintain your test suites, you should continually&nbsp;check whether test
    assets are valid.&nbsp;If possible, validity checks should be performed after each new release of the software,
    preferably more frequently.&nbsp;Keeping your test suites relevant is a full-time job.&nbsp;Assume that changes in the
    software will lead to some degree of invalid tests within your test suites.&nbsp;Once these test assets have been
    identified as invalid, get rid of them.&nbsp;This will make the maintenance burden much more tolerable.&nbsp;Some
    automated test tooling environments make this task easier by providing ways to package outdated or invalid
    tests.&nbsp;In some cases, you may not be absolutely sure whether you want to completely get rid of tests within your
    test suite or even of getting rid of test suites altogether.&nbsp; To alleviate this burden, you can create packages
    for obsolete tests or test suites and dispose of tests or test suites by putting them in packages labeled for this
    purpose.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="programming_automated_tests" briefDescription="This guideline discusses ways of structuring, recording, entering data, executing and handling errors in automated tests." id="_0j5sUMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Programming Automated Tests" variabilityType="na">
          <Presentation name="programming_automated_tests,_0j5sUMlgEdmt3adZL5Dmdw" briefDescription="" id="_vuwC4MPcEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2006-12-07T10:06:38" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Although the programming of automated tests should contribute to the overall test effort, it usually does not make up
    the entire test effort. In fact, test environments that are based on a complete automation approach end up spending
    more time on test automation than on testing. Before you begin developing automated test scripts, consider first
    whether it is more efficient to perform manual testing. Some aspects of an application are more efficiently tested
    manually (for example, GUI testing versus data-drive testing). If you decide to program automated test scripts, examine
    what aspects of your test scripting can be automated and begin designing your scripts.
</p>
<h3>
    Design your automated tests
</h3>
<p>
    Without some level of design of your automated tests, introducing automation into your testing effort can lead to more
    problems than it solves. You should consider developing your automated tests according to a lifecycle with automation
    test requirements, design, testing of the automation tests, and implementation of the automation tests. This approach
    can be informal or formal depending on your project needs. By designing the programming of your automated tests, you
    can avoid spending time programming the wrong tests, re-working programmed tests, deciphering different coding styles
    in the programming of the tests, etc.
</p>
<h3>
    Recorded versus programmed scripts
</h3>
<p>
    Although there are clear benefits to recorded scripts (for example, ease of creation or ability for novice testers to
    learn a scripting language), recorded scripts also present their own problems. The disadvantages of playback scripts
    are well known. They are deceptively easy to create but very difficult to update. Problems with script reliability,
    hard-coded data values, or changes to the application under test and the need to re-record are well-documented. On the
    other hand, programming scripts can present difficulties of their own: they are difficult for the novice tester to
    create, they can require substantial time and effort to develop, and they can be difficult to debug. Most test tooling
    makes these issues less problematic by providing the tester script support functions, such as ways to establish target
    of test lists, systematic ways to program verification point, point to datapools, build commands into the script (for
    example, sleeper commands), comment the script, and document the script. Another major advantage, which is often
    overlooked, of using testing tooling to mitigate these risks is the ability to add to an existing script in the form of
    making corrections to an existing script, testing new features of a test target or application under test, or resuming
    a recording after an interruption.
</p>
<h3>
    Functional and performance test scripts
</h3>
<p>
    When discussing automating test scripts, it is important to distinguish between functional and performance tests. Most
    discussions of programming automated test scripts focus on testing the functionality of an application. This is not
    inappropriate, since a lot of automated testing focuses on functional testing. Performance test scripting, however, has
    its unique characteristics. Performance test automation provides you with the ability to programmatically set workloads
    by adding user groups to test loads under group usage, setting think time behavior, running tests randomly or at set
    rates, or setting the duration of a run. Performance test automation also allows you to create and maintain schedules
    for your tests.
</p>
<h3>
    Testing test scripts
</h3>
<p>
    When testing your test scripts, keep in mind whether you are testing recorded or programmed test scripts. For recorded
    scripts, much of the debugging of the script consists of errors that are introduced due to changes in the test target
    or test environment. When you run a recorded test script, consider the test target of the script. Some test automation
    tools capture this information as a part of the test script. Debugging a recorded script consists largely of
    determining whether changes in the target have created error conditions in the script. In general, there are two main
    categories to examine here: changes in the UI and test session sensitive data (for example, date stamped data). In most
    cases, discrepancies between recording and playback cause errors in your recorded test scripts.
</p>
<p>
    Testing programmed test scripts involves many of the same debugging techniques you would apply to debugging an
    application. Consider both the flow control logic and the data aspects of your script. Automated testing tools provide
    you with test script debugging IDEs as well as datapool management features that facilitate this type of testing.
    During execution of test scripts, a test that uses a datapool can replace values in the programmed test with variable
    test data that is stored in the datapool.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="test_ideas" briefDescription="This guideline identifies common faults and mistakes done when developing software. It shows how to create test ideas from method calls, and from boolean and relational expressions." id="_0jzlsMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test Ideas" variabilityType="na">
          <Presentation name="test_ideas,_0jzlsMlgEdmt3adZL5Dmdw" briefDescription="" id="_y3rxsMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T06:37:59" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Test ideas are used to generate tests.&nbsp;Test ideas can come from many different sources.&nbsp;In general, they can
    be derived in different ways depending on the given development domain, the kind of application being developed, and
    the sophistication of the testers.&nbsp;Although test ideas are derived in many different ways, there are some useful
    categories for generating them.&nbsp;This guideline will describe some of these categories as well as some general
    heuristics for creating good test ideas.
</p>
<h4>
    Test Ideas and Functions
</h4>
<p>
    Below are some test ideas to calculate the square root:
</p>
<ol>
    <li>
        A number that's barely less than zero as input
    </li>
    <li>
        Zero as the input
    </li>
    <li>
        Number that's a perfect square, like 4 or 16 (is the result exactly 2 or 4?)
    </li>
    <li>
        Print to a LaserJet IIIp
    </li>
    <li>
        Test with database full
    </li>
</ol>
<p>
    The first&nbsp;3 test ideas validate input while the last 2 address environmental issues.&nbsp; Even though these
    statements are very incomplete they ensure that an idea is not forgotten.
</p>
<h4>
    Test Ideas and Boundaries
</h4>
<p>
    Test ideas are often based on fault models.&nbsp; Consider boundaries. It's safe to assume the square root function can
    be implemented something like this:<br />
    double sqrt(double x) {<br />
    &nbsp;&nbsp;&nbsp; if (x &lt; 0)<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; // signal error<br />
    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ...<br />
    It's also plausible that the &lt; will be incorrectly typed as &lt;=. People often make that kind of mistake, so it's
    worth checking. The fault cannot be detected with X having the value 2, because both the incorrect expression (x&lt;=0)
    and the correct expression (x&lt;0) will take the same branch of the if statement. Similarly, giving X the value -5
    cannot find the fault. The only way to find it is to give X the value 0, which justifies the second test idea.
</p>
<h4>
    Test Idea and Methods
</h4>
<p>
    Let's suppose you're designing tests for a method that searches for a string in a sequential collection. It can either
    obey case or ignore case in its search, and it returns the index of the first match found or -1 if no match is
    found.<br />
    int Collection.find(String string, Boolean ignoreCase);
</p>
<p>
    Here are some test ideas for this method, each of which could be implemented as a test.&nbsp;
</p>
<ol>
    <li>
        Match found in the first position
    </li>
    <li>
        Match found in the last position
    </li>
    <li>
        No match found
    </li>
    <li>
        Two or more matches found in the collection
    </li>
    <li>
        Case is ignored; match found, but it wouldn't match if case was obeyed
    </li>
    <li>
        Case is obeyed; an exact match is found
    </li>
    <li>
        Case is obeyed; a string that would have matched if case were ignored is skipped
    </li>
</ol>
<p>
    However, different test ideas can be combined into a single test; for example, the following test satisfies test ideas
    2, 6, and 7:
</p>
<p>
    <strong>Setup:</strong> Collection initialized to ["dawn", "Dawn"]<br />
    <strong>Invocation:</strong> Collection.find("Dawn", false)<br />
    <strong>Expected result:</strong> Return value is 1 (it would be 0 if "dawn" were not skipped)
</p>
<h4>
    Test Idea Simplicity and Complexity
</h4>
<p>
    Making test ideas nonspecific makes them easier to combine.<br />
    Creating many several small tests that satisfy a few test ideas makes it simpler to:
</p>
<ul>
    <li>
        "Copy and Tweak" the tests to meet other test idea
    </li>
    <li>
        Easy of debugging - if you have test that covers 2 test ideas then you know the fault is one or two area, but if
        the test covers 7 test ideas you will spend more time debugging the issue.&nbsp;
    </li>
</ul>
<p>
    If the test ideas list were complete, with a test idea for every fault in the program, it wouldn't matter how you wrote
    the tests. But the list is always missing some test ideas that could find bugs. Smaller more complex tests increase the
    chance the test will satisfy a test idea that you didn't know you needed.
</p>
<h4>
    Complex Tests
</h4>
<p>
    Sometimes when you're creating more complex tests, new test ideas come to mind. However, there are reasons for not
    creating complex tests.
</p>
<ul>
    <li>
        Complex test are more difficult to debug because they usually cover multiple test ideas
    </li>
    <li>
        Complex tests are more difficult to understand and maintain. The intent of the test is less obvious.
    </li>
    <li>
        Complex tests are more difficult to create.
    </li>
</ul>
<p>
    Constructing a test that satisfies five test ideas often takes more time than constructing five tests that each
    satisfies one. Moreover, it's easier to make mistakes - to think you're satisfying all five when you're only satisfying
    four.<br />
    In practice, find a reasonable balance between complexity and simplicity.<br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Role" name="tester_tst" briefDescription="" id="_yDyI8DR1EdutE_HNDTJk5Q" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0ZM4MclgEdmt3adZL5Dmdw" variabilityType="contributes">
          <ResponsibleFor>_0ZfMEMlgEdmt3adZL5Dmdw</ResponsibleFor>
        </ContentElement>
      </MethodPackage>
      <ContentElement xsi:type="uma:TermDefinition" name="architect" briefDescription="" id="_wI3R4EvCEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="architect" variabilityType="na">
        <Presentation name="architect,_wI3R4EvCEdunZcj9T5hrMQ" briefDescription="" id="-2QB1bosN011CudkwZ0cn-g" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Role representing someone responsible for designing the software architecture, which includes making the key technical
decisions that constrain the overall design and implementation of the project]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="architectural_mechanism" briefDescription="" id="_VHFGkEvCEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="architectural mechanisms" variabilityType="na">
        <Presentation name="architectural_mechanism,_VHFGkEvCEdunZcj9T5hrMQ" briefDescription="" id="-Vvwb6EupIB9kfSQ_mhjURA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T02:46:41" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Architectural mechanisms represent common concrete solutions to frequently encountered problems. They may be patterns of
structure, patterns of behavior, or both.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="architectural_view" briefDescription="" id="_n7GmQEvCEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="architectural view" variabilityType="na">
        <Presentation name="new_term_definition,_n7GmQEvCEdunZcj9T5hrMQ" briefDescription="" id="-0vih7gB84YYDheaH7jeYFQ" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A view of the&nbsp; architecture from a given perspective.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="architecture" briefDescription="" id="_siyjEEvCEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="architecture" variabilityType="na">
        <Presentation name=",_siyjEEvCEdunZcj9T5hrMQ" briefDescription="" id="-YMvJ5LwexkcVWWqLdm5-nQ" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Describes the blueprint for software development, frequently represented using a number of architectural views. It also
contains the rationale, assumptions, explanations and implications of the decisions that where made in forming the
architecture as well as the global mapping between views]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="build" briefDescription="" id="_Z-AukEvpEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="build" variabilityType="na">
        <Presentation name=",_Z-AukEvpEdunZcj9T5hrMQ" briefDescription="" id="-Wh-byAGHoy_gGry0Jq6VaA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[An operational version of a system or part of a system that demonstrates a subset of the capabilities to be provided in the
final product]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="component" briefDescription="" id="_d82_AEvDEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="component" variabilityType="na">
        <Presentation name=",_d82_AEvDEdunZcj9T5hrMQ" briefDescription="" id="-BWZsh3vKrqSOzfkBJmDTLA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A nearly independent, and replaceable part of a system that fulfills a clear function in the context of a well-defined
architecture. A component conforms to and provides the realization of a set of interfaces]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="developer" briefDescription="" id="_-61a8EvOEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="developer" variabilityType="na">
        <Presentation name=",_-61a8EvOEdunZcj9T5hrMQ" briefDescription="" id="-802sCZ4lJcejyRbhLmkxkw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T04:17:35" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Role representing someone&nbsp; responsible for developing a part of the system, including designing it to fit into the
architecture, and then implementing, unit-testing, and integrating the components that are part of the solution.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="pattern" briefDescription="" id="_ctrEgEvCEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="pattern" variabilityType="na">
        <Presentation name=",_ctrEgEvCEdunZcj9T5hrMQ" briefDescription="" id="-VJBtRm2brEKpRlnLWNF8_g" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Generalized solutions that can be implemented and applied in a problem situation (a context)]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="test_case" briefDescription="" id="_U4RYEEvOEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="test case" variabilityType="na">
        <Presentation name="test_case,_U4RYEEvOEdunZcj9T5hrMQ" briefDescription="" id="-6oW2YOnoWq_xPpmoil91KA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    The specification of a set of test inputs, execution conditions, and expected results, which need to be validated to
    enable an assessment of some particular aspects of the system under test.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="tester" briefDescription="" id="_WB6rQEvPEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="tester" variabilityType="na">
        <Presentation name=",_WB6rQEvPEdunZcj9T5hrMQ" briefDescription="" id="-prQBbamJ4CLPywfEbyaPaA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T04:20:01" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Role representing someone&nbsp; responsible for the core activities of the test effort.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ContentPackage" name="management" briefDescription="Management sub-process." id="_5la48DR2EdutE_HNDTJk5Q" orderingGuide="" suppressed="false" global="false">
      <MethodPackage xsi:type="uma:ContentPackage" name="project_management" briefDescription="" id="_0aQBEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false">
        <ContentElement xsi:type="uma:Artifact" name="project_plan" briefDescription="This artifact gathers all information required to manage the project. Its main part consists of a coarse-grained plan, containing project phases and milestones." id="_0a6vcMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Project Plan" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="project_plan,_0a6vcMlgEdmt3adZL5Dmdw" briefDescription="" id="_IbVp8KX4EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T12:33:37" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<P><SPAN style="FONT-SIZE: 10pt; mso-bidi-font-family: Arial"><?xml:namespace prefix = o ns = "urn:schemas-microsoft-com:office:office" /><o:p>This artifact&nbsp;defines the parameters for project progress tracking and specifies the high-level objectives of the iterations and their milestones. Additionally,&nbsp;it describes how the project is organized and which roles are assigned to whom.</o:p></SPAN></P>
<P><SPAN style="FONT-SIZE: 10pt; mso-bidi-font-family: Arial"><o:p>The project manager is responsible for developing the project plan, working very closely with the rest of the team. The project plan allows stakeholders and other team members to understand the big picture and, roughly, when to expect what level of functionality.</o:p></SPAN><SPAN style="FONT-SIZE: 10pt; mso-bidi-font-family: Arial"><o:p><BR></P></o:p></SPAN>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose><![CDATA[<p>
    The purpose of this artifact is&nbsp;to provide a central document where any project team member can find the
    information on how the project will be managed.&nbsp;
</p>]]></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions></RepresentationOptions>
          </Presentation>
          <Example>_Nzv5kDoAEdusGsHODb-STA</Example>
          <Report>_ePrt8Dj3EduxovfWMDsntw</Report>
          <Template>_0c7hoMlgEdmt3adZL5Dmdw</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="status_assessment" briefDescription="Capture and communicate results and actions from assessments. This is typically done at the end of each iteration." id="_0bA2EMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Status Assessment" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="status_assessment,_0bA2EMlgEdmt3adZL5Dmdw" briefDescription="" id="_K-e8IKX4EdmvhNXG0Oc2uA" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-02T12:32:14" changeDescription="" version="1.0.0" externalId="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving>The team may not understand whether they are on track or not, and whether established iteration objectives and evaluation&#xD;
criteria are met. The team may not be able to improve the way they develop software.</ImpactOfNotHaving>
            <Purpose><![CDATA[<p>
    Capture and communicate whether the project is on track, requires corrective actions, and whether there are
    opportunities for improvement.
</p>]]></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;p>&#xD;
    The format of the status assessment varies from one&amp;nbsp;project to another. It can be the minutes of an assessment&#xD;
    meeting, an update to a web site, or just an email. The important thing&amp;nbsp;is to effectively communicate&amp;nbsp;to all&#xD;
    involved parties whether iteration objectives and evaluation criteria were addressed, and what improvements are&#xD;
    needed&amp;nbsp;to the way the team is working.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Template>_1awLIEp2Edup0IY9DKDPkg</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="plan_the_project" briefDescription="Define a coarse-grained plan for the project." id="_0lC70MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Plan Project" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="plan_the_project,_0lC70MlgEdmt3adZL5Dmdw" briefDescription="" id="_fPbdIKe2Edmzde8VFK5bxg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-27T10:20:13" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Evaluate risks" briefDescription="" id="_lrYj0MBAEdqSgKaj2SZBmg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    The project manager evaluates project risks with the team and updates the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/risk_list,_Ckay8Cc_EduIsqH1Q6ZuqA.html&quot; guid=&quot;_Ckay8Cc_EduIsqH1Q6ZuqA&quot;>Risk List&lt;/a>. The risk list will aid the team in prioritization of what to do in which iteration. Higher-ranked risks are&#xD;
    addressed in the earlier iterations.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Determine project size and scope" briefDescription="" id="_k1bY4MMsEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Analyze the size and the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0WVxcMlgEdmt3adZL5Dmdw&quot;>Vision&lt;/a>&amp;nbsp;of the project, and whether it is realistic to deliver what is asked for&#xD;
    within the constraints of the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If the project is feature-driven, meaning that release criteria is defined as a set of features captured in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Work Items List&lt;/a>, the team assesses the size of these work items, see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html&quot; guid=&quot;_CGHskBEdEdqY7JB6N6CW2w&quot;>Guideline: Agile Estimation&lt;/a>. They then look at how many people they would need to&#xD;
    complete these work items, which gives them a ballpark understanding of project duration, staffing profile, and scope.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    If the project instead is date-driven, the team assesses how much work can roughly be done in the time-frame given and&#xD;
    using the available team, captured as a candidate list of work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The end result of the two approaches is the same; a rough understanding of the size of the capabilities to be&#xD;
    delivered, the size of the team, and expected time of completion.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Define length, number, and objectives of iterations" briefDescription="" id="_OfFTEABjEdqHlpDr8LcRqg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Determine iteration length, see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html&quot; guid=&quot;_lam4ADkBEduxovfWMDsntw&quot;>Concept: Iteration&lt;/a>, or use 4 weeks as default iteration length. Use iteration length&#xD;
    to assess target velocity, see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html&quot; guid=&quot;_CGHskBEdEdqY7JB6N6CW2w&quot;>Guideline: Agile Estimation&lt;/a>. Based on the target velocity and overall size of the&#xD;
    project, calculate the number of iterations required.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Determine 1-3 high-level objectives for each iteration. The goal is to create a high-level plan outlining how you can&#xD;
    build the resulting application in the given set of iterations. The plan will change as you learn more, so time-box&#xD;
    this analysis to a few hours or less. Use the Work Items List to outline what features to implement in what iteration,&#xD;
    putting top priority work items first. This can be done rapidly by leveraging expected velocity and size estimate of&#xD;
    work items.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Produce a brief summary of your analysis in your plan by documenting 1-3 objectives for each iteration. Do not commit&#xD;
    individual work items to the plan, since this will force too much re-planning. For some projects, you may have to wait&#xD;
    until after the first iteration until you can provide a meaningful plan at this level of detail.&lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Define phase milestones and refine iteration objectives" briefDescription="" id="_qcOtIE5dEdu3aqt7VHtzgw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Phases provide a focus for a team on meeting key management objectives, see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html&quot; guid=&quot;_lam4ADkBEduxovfWMDsntw&quot;>Concept: Iteration&lt;/a>. For example the Elaboration phase should answer the question “Do&#xD;
    we agree on the overall solution, and do we understand risks, costs and schedule parameters reasonably well?”&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    With this in mind, the project manager determines the start and end dates of the phases and aligns the content of the&#xD;
    iterations with the perspective of the phase. Therefore the objectives of the iterations assigned to a phase, need to&#xD;
    map to the goals of its phase. The milestones, which guard the transition from one phase to another, will provide&#xD;
    checkpoints if these goals are satisfied.&amp;nbsp; Revisit the plan to see if you should change the focus of iterations to&#xD;
    allow more rapid completion of&amp;nbsp;certain phases.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Map roles to team members" briefDescription="" id="_F2dQYABjEdqHlpDr8LcRqg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    The project manager assigns project members (people) to roles according to a table like this:&lt;br />&#xD;
    &lt;br />&#xD;
&lt;/p>&#xD;
&lt;table style=&quot;WIDTH: 227px; HEIGHT: 116px&quot; cellspacing=&quot;2&quot; cellpadding=&quot;2&quot; width=&quot;227&quot; border=&quot;2&quot;>&#xD;
    &lt;tbody>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                &lt;strong>Team Member&amp;nbsp;&lt;/strong> &#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;strong>Analyst&lt;/strong> &#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &lt;strong>Developer&lt;/strong>&amp;nbsp;&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                John&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Judy&amp;nbsp;&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
        &lt;tr>&#xD;
            &lt;td>&#xD;
                Jim&amp;nbsp;&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X&#xD;
            &lt;/td>&#xD;
            &lt;td>&#xD;
                &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; X&#xD;
            &lt;/td>&#xD;
        &lt;/tr>&#xD;
    &lt;/tbody>&#xD;
&lt;/table>&#xD;
&lt;br />&#xD;
&lt;p>&#xD;
    The project manager needs to make sure that the roles are staffed according to skills and interests and that every role&#xD;
    is covered.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Tune and get concurrence on the plan" briefDescription="" id="_toVK0E5fEdu3aqt7VHtzgw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Gain agreement with stakeholders and the rest of the project team regarding the order of objectives and the duration of the&#xD;
project and make adjustments as necessary.</Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[To describe a roadmap that provides direction to the team and continually adapt it based on feedback and changes in the
environment.]]></Purpose>
          </Presentation>
          <Concept>_HNxbwMBJEdqSgKaj2SZBmg</Concept>
          <Concept>_VNxL4ACsEdu8m4dIntu6jA</Concept>
          <Concept>_lam4ADkBEduxovfWMDsntw</Concept>
          <Guideline>_CGHskBEdEdqY7JB6N6CW2w</Guideline>
          <Guideline>_Jq64EJjsEduad8I_c-ogIA</Guideline>
          <Guideline>_rmBEkJjsEduad8I_c-ogIA</Guideline>
          <PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0WVxcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_rGNWsCbSEdqh1LYUOGRh2A</MandatoryInput>
          <Output>_0a6vcMlgEdmt3adZL5Dmdw</Output>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <Output>_Ckay8Cc_EduIsqH1Q6ZuqA</Output>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0a6vcMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_Ckay8Cc_EduIsqH1Q6ZuqA</OptionalInput>
          <OptionalInput>_0bA2EMlgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="assess_results" briefDescription="Determine success or failure of the iteration. Apply the lessons learned to modify the project or improve the process." id="_0l53cMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Assess Results" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="assess_results,_0l53cMlgEdmt3adZL5Dmdw" briefDescription="" id="_a3uz4LBYEdm7Eph_l9Cn9w" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-22T09:12:39" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Gather stakeholder feedback" briefDescription="" id="_PABe4MQIEdmaiYJe8-Eaqg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    The team should demonstrate the product to customer, end-users, and other &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role: Stakeholder&lt;/a>s&amp;nbsp;to collect their feedback, or better yet, have end users to use the product themselves. This&#xD;
    should be done throughout the iteration, or at least in a separate session towards the end of the iteration. Record&#xD;
    requested changes to the product in the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>&amp;nbsp;for later prioritization. Factor&amp;nbsp;the feedback&#xD;
    into the&amp;nbsp;overall iteration assessment.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Assess results" briefDescription="" id="_o28GgMMsEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Towards the end of the iteration, the team should jointly assess whether the objectives and evaluation criteria&#xD;
    established in the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/iteration_plan,_0aQBEslgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0aQBEslgEdmt3adZL5Dmdw&quot;>Artifact: Iteration Plan&lt;/a>&amp;nbsp;were met, and whether the team adhered to the&#xD;
    iteration plan and completed all the planned work items. Below&amp;nbsp;are some sample questions that the team can ask&#xD;
    themselves as a part of the assessment:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
            Were the defined goals and objectives met? Did the release meet its functionality and quality goals? Did the&#xD;
            release meet performance and capacity goals?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px; LIST-STYLE-TYPE: none&quot;>&#xD;
            Were risks reduced or eliminated? Can we identify new risks?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px; LIST-STYLE-TYPE: none&quot;>&#xD;
            Were all planned work items addressed? What was the teams velocity relative to plan?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px; LIST-STYLE-TYPE: none&quot;>&#xD;
            Did the end users provide favorable feedback on what we built in this iteration?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px; LIST-STYLE-TYPE: none&quot;>&#xD;
            Are changes to the project plan required?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
            What portion of the current release will be baselined? What portion will need to be reworked?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;div style=&quot;MARGIN-LEFT: 2em; MARGIN-RIGHT: 0px&quot;>&#xD;
            Have there been external changes such as changes in the marketplace, in the user community, or in the&#xD;
            requirements?&#xD;
        &lt;/div>&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;p dir=&quot;ltr&quot;>&#xD;
    The assessments should be based on objective measures to the greatest extent possible. For example, to assess that a&#xD;
    given requirement is developed, the team should ensure that the corresponding test cases were successfully run against&#xD;
    it, rather than considering it done when the implementation is done.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Perform a retrospective" briefDescription="" id="_iL7cQEpqEdup0IY9DKDPkg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Review the approach taken to development and team collaboration, the effectiveness of the development environment, the&#xD;
    suitability of the working environment, and other factors and discuss what things went well, what could have gone&#xD;
    better, and how things could be changed to deliver better results. Capture actions to be taken to improve the&#xD;
    development approach for next iteration in the &lt;a class=&quot;elementLink&quot; href=&quot;./../../openup_basic/workproducts/status_assessment,_0bA2EMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0bA2EMlgEdmt3adZL5Dmdw&quot;>Status Assessment&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Refine project scope and duration" briefDescription="" id="_YdoAAM1DEdmLoKw_mVTvhQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Depending on the results of the&amp;nbsp;assessment and the stakeholders' feedback, the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Role: Project Manager&lt;/a>&amp;nbsp;could need to revise the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Artifact: Project Plan&lt;/a>&amp;nbsp;to adapt to those changes. If a change affects defined&#xD;
    project milestones, the project manager should consult with the stakeholders before committing to the changes.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Necessary changes can also encompass the need to acquire new resources, to absorb an unplanned effort increase, or to&#xD;
    implement a specific change request.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Close-out phase" briefDescription="" id="_wp2CIMMsEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    This step is optional and must be performed only when the assessment period coincide with the end of a phase.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The end of&amp;nbsp;a phase represents a point of synchronization of technical and management expectations and closure for&#xD;
    a project. In iterative development, it coincides&amp;nbsp;with the end of an iteration. However, phase ends mark a point&#xD;
    when it is possible to consider re-scoping and even re-contracting a project. For example, the inception phase is&#xD;
    exploratory and may be appropriately performed under a time-and-materials contract or a cost-plus type of contract. The&#xD;
    elaboration phase could be done as a fixed-price contract or a cost-plus contract, depending on the extent to which the&#xD;
    development is unusual. By the construction and transition phases, enough is known about the system that fixed-price&#xD;
    contracts are more appealing to the acquirer and vendor.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    The phase end is marked by a major milestone and a corresponding milestone review. The degree of formality of&#xD;
    these&amp;nbsp;reviews depends on the project. The important thing is to take advantage&amp;nbsp;of this milestone review to&#xD;
    achieve agreement among all stakeholders on the current state of the project. For more information, refer to &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html&quot; guid=&quot;_HNxbwMBJEdqSgKaj2SZBmg&quot;>Concept: Milestones&lt;/a>.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Close-out project" briefDescription="" id="_1YHH8DLqEdueZPye-FaNgA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    This step is optional and must be performed only when the assessment period coincide with the end of the project.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Involve the team and stakeholders in&amp;nbsp;a final assessment for project acceptance which, if successful, marks the&#xD;
    point when the customer accepts ownership of the software product. Gather and record the lessons learned to be used in&#xD;
    future projects. Complete the close-out of the project by disposing of the remaining assets and reassigning the&#xD;
    remaining staff.&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[Capture and communicate whether the project is on track, requires corrective actions, and whether there are opportunities
for improvement.<br />]]></Purpose>
          </Presentation>
          <Concept>_HNxbwMBJEdqSgKaj2SZBmg</Concept>
          <PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0aQBEslgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0a6vcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_rGNWsCbSEdqh1LYUOGRh2A</MandatoryInput>
          <Output>_0bA2EMlgEdmt3adZL5Dmdw</Output>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <Output>_0a6vcMlgEdmt3adZL5Dmdw</Output>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0dsWoMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <OptionalInput>_0bA2EMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_0WVxcMlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_0ZlSsMlgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="metrics" briefDescription="A metric is the interpretation of a measurable attribute(s) of an entity." id="_0mYYkMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Metrics" variabilityType="na">
          <Presentation name="metrics,_0mYYkMlgEdmt3adZL5Dmdw" briefDescription="" id="_7ygXoMM3EdmSIPI87WLu3g" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-30T02:19:12" changeDescription="" version="">
            <MainDescription><![CDATA[<h3>
    What is a Metric?
</h3>
<p>
    We distinguish between measure and metric.&nbsp; To clarify, let’s start by defining what is meant by measure and by
    metric.
</p>
<ul>
    <li>
        <strong>Measure</strong>:&nbsp;a raw data item that is directly measured and that will be used to calculate a
        metric.&nbsp;
    </li>
    <li>
        <strong>Metric</strong>:&nbsp;an interpretation of a measure or a set of measures that you use to guide your
        project.
    </li>
</ul>
<p>
    For example, recording how many test cases have passed and how many have failed are <strong>measures</strong>.
    Interpreting what level of quality this indicates and how it reflects the team's progress within the current iteration
    is a <strong>metric</strong>.
</p>
<h3>
    Why Measure?
</h3>
<p>
    Measurements will mainly help you to:
</p>
<ul>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Communicate effectively</strong>. Measurement supports effective communication among team members and
            project stakeholders.&nbsp;
        </div>
    </li>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Identify and correct problems early</strong>. Measurement enables you to identify and manage potential
            problems early in the development lifecycle.&nbsp;
        </div>
    </li>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Make informed trade-offs</strong>. Measurement helps assess objectively the impact of decisions,
            helping managers to make trade-off decisions to best meet project goals.&nbsp;&nbsp;
        </div>
    </li>
    <li>
        <div style="MARGIN-LEFT: 2em" align="left">
            <strong>Tune estimations</strong>. Recording schedule, progress, and expenditures for projects will help team
            members to make more reliable estimations in the future.
        </div>
    </li>
</ul>
<h3 align="left">
    Potential Challenges
</h3>
<p align="left">
    There are several dangers when it comes to metrics:
</p>
<div style="margin-left: 2em">
    <ul>
        <li>
            <div align="left">
                They can be too costly.&nbsp;The benefit provided by the metric must exceed the cost of collecting
                it.&nbsp;Keep your measurements simple and easy to collect.
            </div>
        </li>
        <li>
            <div align="left">
                They’re a poor substitute for communication.&nbsp;The best way to determine the current status of a project
                is to ask the people involved, not to look at a report summarizing key metrics.
            </div>
        </li>
        <li>
            <div align="left">
                They can be misleading.&nbsp; No metric or collection of metrics is perfect.&nbsp;Furthermore, the
                measurements upon which they are based can be manipulated by the people capturing them.&nbsp;Don’t rely
                simply upon metrics to manage a project.<br />
            </div>
        </li>
    </ul>
</div>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="agile_estimation" briefDescription="This guideline explains three key concepts, and their interrelationships, for doing agile estimation; estimation of size, velocity, and estimation of effort." id="_CGHskBEdEdqY7JB6N6CW2w" orderingGuide="" suppressed="false" presentationName="Agile Estimation" variabilityType="na">
          <Presentation name="agile_estimation,_CGHskBEdEdqY7JB6N6CW2w" briefDescription="" id="_CYRMgBEdEdqY7JB6N6CW2w" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T11:31:48" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Agile Estimation
</h3>
<p>
    There are three main concepts you need to understand to do agile estimation:
</p>
<ul>
    <li>
        <strong>Estimation of Size</strong> gives you a high-level estimate for the work item, typically measured using a
        neutral unit such as points
    </li>
    <li>
        <strong>Velocity</strong> tells us how many points this project team can deliver within an iteration;
    </li>
    <li>
        <strong>Estimation of Effort</strong> translates the size (measured in points) to a detailed estimate of effort
        typically using the units of Actual Days or Actual Hours. The estimation of effort indicates how long it will take
        the team member(s) assigned to the work item to do the work.
    </li>
</ul>
<h4>
    Estimation of Size
</h4>
<p>
    Agile estimation of size is typically done using a relative measure called <strong>points</strong>.&nbsp; You decide
    how big a point is, and based on that size, you determine how many points each work item is. To make estimation go
    fast, you want to use only full points, 1, 2, 3, 5, 8, and so on, rather than fractions of a point, such 0.25, or 1.65
    points. To get started, look at 10 or so representative work items, give the smallest the size of one point, and then
    go through all other work items and give them a relative point estimate based on that point. Note that points are used
    for high-level estimates, so do not spend too much time on any one item. This is especially true for work items of
    lower priority, since you would then waste effort on things that are unlikely to be addressed within the current
    iteration.
</p>
<p>
    A key benefit of points is that they are neutral and relative. Let’s say that Ann is 3 times more productive than Jack.
    If Ann and Jack agree that work item A is worth 1 point, and they both think work item B is roughly 5 times as big,
    they can rapidly agree that work item B is worth 5 points. Ann may however think work item B can be done in 12 hours,
    while Jack thinks it can be done in 36 hours. That is fine, they may disagree about the actual effort required to do
    it, but we do not care at this point in time, we only want the team to agree on the relative size. We will later use
    Velocity to determine how much ‘size’, or how many points, the team can take on within an iteration.
</p>
<p>
    One project team may say that a work item of a certain size is worth 1 point. Another project team would estimate the
    same sized work item to be worth 5 points. That is fine, as long as you are consistent within the same project.
    You&nbsp;want to make sure that the entire team is involved in assessing size, or at least that the same people are
    involved in all your size estimates, to ensure consistency within your project. We will see how the concept of velocity
    will fix also this discrepancy in a point meaning different things to different project teams.
</p>
<p>
    You can also use other measures of size, where the most common alternative is Ideal Days. See for example [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">COH05</a>] for more information.
</p>
<h4>
    Velocity
</h4>
<p>
    Velocity is a key metric used for iteration planning. It indicates how many points are delivered upon within an
    iteration for a certain team and project. As an example, a team may plan for taking on 20 points in the first
    iteration. At the end of the iteration, they noticed that they only delivered upon 14 points, their velocity was hence
    14. For the next iteration, they may plan for fewer points, let’s say 18 points, since they think they can do a little
    better than in previous iteration. In this iteration, they delivered 17 points, giving them a velocity of 17.
</p>
<p>
    You should expect the velocity to change from iteration to iteration. Some iterations go smoother than others, and
    points are not always identical in terms of effort. Some team members are more effective than others, and some problems
    end up being harder than others. Also, changes to the team structure, learning new skills, changes to the tool
    environment, better teaming, or more overhead with meetings or tasks external to the project will all impact velocity.
    In general, velocity typically increases during tha project as the team builds skills and becomes more cohesive.
</p>
<p>
    Velocity compensates for differences between teams in terms of how big a point is. Let’s assume that project team Alpha
    and project team Beta are equally efficient in developing software, and they run the same project in parallel. Team
    Alpha, however, assesses all work items as being worth 3 times as many points. Team Alpha assesses work item A, B, C,
    and D to correspond to 30 points, and team Beta estimates the same work items to correspond to 10 points. Both teams
    deliver upon those 4 work items in the next iteration, giving team Alpha a velocity of 30, and team Beta a velocity of
    10. It may sound as if team Alpha is more effective, but let’s look at what happens when they plan the next iteration.
    They both want to take on work item E-H, which team Alpha has estimated to be 30 points, and team Beta as normal has
    estimated to be 1/3 as many points, or 10 points. Since a team can typically take on as many points as indicated by
    their velocity, they can both take on all of E-H. The end result is that it does not matter how big a point is, as long
    as you are consistent within your team.
</p>
<p>
    Velocity also averages out the efficiency of different team members. Let’s look at an example; Let’s assume that Ann
    always works 3 times as fast as Jack and Jane. Ann will perhaps deliver 9 points per iteration, and Jack and Jane 3
    points each per iteration. The velocity of that 3-person team will be 15 points. As mentioned above, Ann and Jack may
    not agree on how much effort is associated with a work item, but they can agree on how many points it is worth. Since
    the team velocity is 15, the velocity will automatically translate the point estimate to how much work can be taken on.
    As you switch team members, or as team members become more or less efficient, your velocity will change, and you can
    hence take on more or less points. This does however not require you to change the estimate of the size. The size is
    still the same, and the velocity will help you to calculate how much size you can deliver upon with the team at hand
    for that iteration.
</p>
<h4>
    Estimation of Effort
</h4>
<p>
    As you plan an iteration, you will take on a work item, such as detail, design, implement and test a scenario, which
    may be sized to 5 points. Typically you at this time break down this still reasonably big work item into a number of
    smaller work items, such as 4 separate work items for Detailing, Designing, Implementing and Testing Server portion,
    and Implementing and Testing Client portion of the scenario. You would now do a detailed estimate of the actual effort,
    measured in hours or days, associated with each of those 4 tasks. This estimate should be done by the person assigned
    to do the task. In this case you may assign the following actual estimates (with person responsible within
    parenthesis):
</p>
<ul>
    <li>
        Detailing scenario (Ann): 4 hours
    </li>
    <li>
        Designing scenario (Ann and Jack):&nbsp; 6 hours
    </li>
    <li>
        Implementing and Testing Server portion of scenario (Jack): 22 hours&nbsp;
    </li>
    <li>
        Implementing and Testing Client portion of scenario (Ann): 12 hours
    </li>
    <li>
        <strong>Total Effort Estimate for Scenario:</strong> 44 hours
    </li>
</ul>
<p>
    If other people would be assigned to the tasks, the estimated actual hours could be quite different. There is hence no
    point doing detailed estimates until you know who will do the work, and what actual problems you will run into. Often,
    you have to do some level of analysis and design of the work item before you can come up with a reasonable estimate.
    Remember that estimates are still estimates, and a person assigned to a task should feel free (and be encouraged) to
    re-estimate the effort required to complete the task, so we have a realistic view of progress within an
    iteration.<br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="manage_iteration" briefDescription="Assess project status and identify any blocking issues and/or opportunities. Identify and manage exceptions, problems and risks. Communicate project status." id="_8S2aICbYEdqh1LYUOGRh2A" orderingGuide="" suppressed="false" presentationName="Manage Iteration" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="manage_iteration,_8S2aICbYEdqh1LYUOGRh2A" briefDescription="" id="-PbfqVxB_j9KN-Jx39_pEUA" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-31T03:45:37" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Capture status" briefDescription="" id="_OE65ICuxEdqTIKp3l5PtzQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    The project manager needs to continuously monitor the project to ensure its appropriate progress, and to enable the&#xD;
    team to react as soon as possible to any change. Many alternative means may be used to track the status:&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        Quick, daily meetings with the entire project team, also called &quot;scrum meetings” are useful to understand what team&#xD;
        members have accomplished since the&amp;nbsp;last meeting, and what they plan to accomplish before the next meeting. It&#xD;
        also allows the team to identify any blocking issues. See &lt;a class=&quot;elementLinkWithUserText&quot; href=&quot;./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html&quot; guid=&quot;_9ToeIB83Edqsvps02rpOOg&quot;>[SCH04]&lt;/a>&amp;nbsp;for guidance on scrum meetings.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        Basic metrics, ideally automatically generated from the tools at hand, or manually assembled. The &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Artifact: Project Plan&lt;/a>&amp;nbsp;should outline which metrics the project should use.&#xD;
        Examples of such metrics include &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/reports/iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA.html&quot; guid=&quot;_uAzgkDg3Edu4E8ZdmlYjtA&quot;>Report: Iteration Burndown&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/reports/project_burndown,_ePrt8Dj3EduxovfWMDsntw.html&quot; guid=&quot;_ePrt8Dj3EduxovfWMDsntw&quot;>Report: Project Burndown&lt;/a>&amp;nbsp;charts, which are reports on the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a>. See also &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/metrics,_0mYYkMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0mYYkMlgEdmt3adZL5Dmdw&quot;>Concept: Metrics&lt;/a>&amp;nbsp;for more information.&#xD;
    &lt;/li>&#xD;
&lt;/ul>&#xD;
&lt;br /></Description>
            </Section>
            <Section name="Communicate status" briefDescription="" id="_ztF0UCuxEdqTIKp3l5PtzQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Communicating project status is as important as gathering it. Communication is usually done at two levels: the task&#xD;
    level and project level.&#xD;
&lt;/p>&#xD;
&lt;ul>&#xD;
    &lt;li>&#xD;
        &lt;strong>Task Level – Communicated within the project team:&lt;/strong> status can be communicated through quick, daily&#xD;
        meetings. This allows you to combine the status capturing with the status communications.&#xD;
    &lt;/li>&#xD;
    &lt;li>&#xD;
        &lt;strong>Project Level – Communicated to the stakeholders and the project team:&lt;/strong> status is usually&#xD;
        communicated through core metrics rather than detailed information. This can be done through meetings, e-mail, or&#xD;
        Web publishing.&#xD;
    &lt;/li>&#xD;
&lt;/ul></Description>
            </Section>
            <Section name="Handle exceptions and problems" briefDescription="" id="_oIZdkCbZEdqh1LYUOGRh2A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    One of the project manager's key responsibilities is to know about the project team's problems and issues. The manager&#xD;
    needs to focus on problems that are blocking progress. A quick, daily meeting is usually a good way to monitor those&#xD;
    problems and issues.&#xD;
&lt;/p>&#xD;
&lt;p>&#xD;
    Identify the cause and impact of problems and exceptions as they arise. Identify possible solutions for problems that&#xD;
    have an immediate impact on the short-term goals and objectives and identify who needs to be involved in implementing&#xD;
    the solution. Then, define the corrective actions and implement them.&amp;nbsp;&lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Identify and manage risks" briefDescription="" id="_xiFJwCbZEdqh1LYUOGRh2A" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Identify risks as soon as the project starts and continue identifying and managing risks throughout the project. The&#xD;
    risk list should be revisited weekly, or as a minimum once per iteration, see &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;and &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/risk_list,_Ckay8Cc_EduIsqH1Q6ZuqA.html&quot; guid=&quot;_Ckay8Cc_EduIsqH1Q6ZuqA&quot;>Artifact: Risk List&lt;/a>&amp;nbsp;for more details. The entire team should be involved in&#xD;
    identifying and mitigating risk.&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Reprioritize work as needed" briefDescription="" id="_Br6VECuxEdqTIKp3l5PtzQ" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>When a team is falling significantly behind, or critical problems occur, it may be necessary to reprioritize tasks to&#xD;
ensure that the team delivers a useful product increment by the end of the iteration, while maximizing stakeholder value.&#xD;
In these rare cases, the project manager should work with the team and stakeholders on revising the iteration plan and, as&#xD;
necessary, reduce the emphasis on less critical tasks.</Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p>
    Identify blocking issues and/or opportunities early to take action and keep the project on track.
</p>]]></Purpose>
          </Presentation>
          <Concept>_0bsLgMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_VNxL4ACsEdu8m4dIntu6jA</Concept>
          <Concept>_0mYYkMlgEdmt3adZL5Dmdw</Concept>
          <Guideline>__yQQ4L6REdqti4GwqTkbsQ</Guideline>
          <Guideline>_rmBEkJjsEduad8I_c-ogIA</Guideline>
          <PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0aQBEslgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_0a6vcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_rGNWsCbSEdqh1LYUOGRh2A</MandatoryInput>
          <MandatoryInput>_Ckay8Cc_EduIsqH1Q6ZuqA</MandatoryInput>
          <Output>_0aQBEslgEdmt3adZL5Dmdw</Output>
          <Output>_0a6vcMlgEdmt3adZL5Dmdw</Output>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <Output>_Ckay8Cc_EduIsqH1Q6ZuqA</Output>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0dsWoMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
        </ContentElement>
        <ContentElement xsi:type="uma:Task" name="plan_iteration" briefDescription="Plan the scope and responsibilities for a single iteration." id="_0keUEMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Plan Iteration" variabilityType="na">
          <Presentation xsi:type="uma:TaskDescription" name="plan_iteration,_0keUEMlgEdmt3adZL5Dmdw" briefDescription="" id="_Wk7noKe1EdmGSrcKGOYDGg" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-08T01:29:53" changeDescription="" version="1.0.0">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Define the iteration objectives" briefDescription="" id="_CtKCMMBHEdqSgKaj2SZBmg" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    At the beginning of an iteration, the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Role: Project Manager&lt;/a>&amp;nbsp;works with the team to define 1-5 objectives. These objectives should be a refinement of the&#xD;
    iteration objectives found in the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a6vcMlgEdmt3adZL5Dmdw&quot;>Artifact: Project Plan&lt;/a>, and should provide high-level direction to what should be&#xD;
    targeted for the iteration. The objectives should be driven based on &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html&quot; guid=&quot;_dTa6gMAYEdqX-s4mWhkyqQ&quot;>Role: Stakeholder&lt;/a>&amp;nbsp;priorities, and&amp;nbsp;will be revised as the iteration plan is finalized. The objectives are&#xD;
    usually defined as high-level capabilities or scenarios that need to be implemented and tested during the&#xD;
    iteration.&lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Produce detailed plan" briefDescription="" id="_307v0MMsEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>The &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0a0o0MlgEdmt3adZL5Dmdw&quot;>Role: Project Manager&lt;/a> works with the rest of the team, and especially the project&#xD;
stakeholders,&amp;nbsp;to identify the high-priority work items from the &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html&quot; guid=&quot;_rGNWsCbSEdqh1LYUOGRh2A&quot;>Artifact: Work Items List&lt;/a> to be addressed within the iteration. The high-level&#xD;
objectives provide guidance on what work items should be considered. The team should break down work items so they fit&#xD;
within the iteration as necessary. Actual effort to complete each Work Item should be estimated. When a team has decided to&#xD;
take on a Work Item, it will assign the work to one or several team members. Ideally, this is done by team members signing&#xD;
up to do the work, since this makes people motivated and committed to doing the job, but based on culture, you may instead&#xD;
have the project manager assign the work.</Description>
            </Section>
            <Section name="Define evaluation criteria" briefDescription="" id="_7Hqr4MMsEdmdo9HxCRR_Gw" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Each iteration should include testing as a part of the evaluation, and the test objectives and test cases needs to be&#xD;
    detailed. Other evaluation criteria may include successful demonstrations to key stakeholders, or favorable usage by a&#xD;
    small group of target users.&lt;br />&#xD;
&lt;/p></Description>
            </Section>
            <Alternatives></Alternatives>
            <Purpose><![CDATA[<p class="MsoNormal" style="MARGIN: 0in 0in 0pt">
    Develop a fine-grained plan for a single iteration, identifying the goals and evaluation criteria of an iteration
    (usually the next one).
</p>]]></Purpose>
          </Presentation>
          <Concept>_lam4ADkBEduxovfWMDsntw</Concept>
          <Guideline>_0auiMMlgEdmt3adZL5Dmdw</Guideline>
          <Guideline>_CGHskBEdEdqY7JB6N6CW2w</Guideline>
          <Guideline>__yQQ4L6REdqti4GwqTkbsQ</Guideline>
          <Guideline>_7vEXEMA4EdqSgKaj2SZBmg</Guideline>
          <Guideline>_rmBEkJjsEduad8I_c-ogIA</Guideline>
          <PerformedBy>_0a0o0MlgEdmt3adZL5Dmdw</PerformedBy>
          <MandatoryInput>_0a6vcMlgEdmt3adZL5Dmdw</MandatoryInput>
          <MandatoryInput>_rGNWsCbSEdqh1LYUOGRh2A</MandatoryInput>
          <Output>_0aQBEslgEdmt3adZL5Dmdw</Output>
          <Output>_rGNWsCbSEdqh1LYUOGRh2A</Output>
          <AdditionallyPerformedBy>_0X9iEMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0VxJsMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0ZM4MclgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_0YDosMlgEdmt3adZL5Dmdw</AdditionallyPerformedBy>
          <AdditionallyPerformedBy>_dTa6gMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
          <OptionalInput>_0XAf0MlgEdmt3adZL5Dmdw</OptionalInput>
          <OptionalInput>_0WVxcMlgEdmt3adZL5Dmdw</OptionalInput>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="iteration_planning" briefDescription="The goal with iteration planning is to establish a few high-level objectives for what to accomplish during the iteration and produce a sufficiently detailed plan outlining who needs to do what." id="_0auiMMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Iteration Planning" variabilityType="na">
          <Presentation name="iteration_plan,_0auiMMlgEdmt3adZL5Dmdw" briefDescription="" id="_71hDkMPgEdmbOvqy4O0adg" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-01T08:17:34" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The goal with iteration planning is to establish a few high-level objectives for what to accomplish during the
    iteration, produce a sufficiently detailed plan outlining who needs to do what to accomplish those objectives, and
    define how to assess that you accomplished what you set out to accomplish.
</p>
<p>
    Iteration planning is ideally done with the entire team in a meeting, typically lasting a few hours, at the beginning
    of an iteration. This ensures that the entire team understands what needs to be done, and they become committed to the
    success of the team. In some cases, it is preferred to have a smaller subset of people, such as the Project Manager, an
    Architect and an Analyst to meet in advance to prep the meeting with a draft iteration plan.
</p>
<h3>
    Define High-Level Objectives
</h3>
<p>
    A key aspect of an iteration is to focus the team on a short term deliverable of measurable value. Document 1-5
    high-level objectives to make sure that you don't lose focus on what to accomplish during the iteration. Typically, the
    project plan should outline one or several objectives for each iteration, and those objectives are used as a starting
    point. If you need to further detail or clarify the objectives as you plan your iteration, do so.
</p>
<p>
    The objectives are usually based on the following factors:
</p>
<ul>
    <li>
        <strong>Critical risks not yet mitigated:</strong> Iteration goals often include driving down the most critical
        risks.
    </li>
    <li>
        <strong>The time allocated to the iteration:</strong> Iterations are usually timeboxed, so the Project Manager must
        ensure that the goals for the iteration are realistic relative to the time and the resources allocated to the
        iteration.
    </li>
    <li>
        <strong>The highest priority features:</strong> requirements are prioritized to ensure that the critical features
        of the application will be developed and tested early on.
    </li>
</ul>
<h3>
    Produce an Iteration Plan
</h3>
<p>
    There is an Iteration Plan per iteration that should outline who will implement which Work Item in how long a time.
    Since iterations are time-boxed, we need to understand how big our ‘box” is by assessing how many hours of actual work
    can be taken on. Let’s assume that you have 6 team members, and you have 15 working days in your iteration, and you on
    average can do 5 actual hours of work per person and day. This will give you 6x15x5h = 450 hours of actual work. Note
    that the average team member only performs 4-6 hours of actual project work per day, with the rest being consumed by
    e-mails, meetings, and other overhead activities not directly related to the project.
</p>
<p>
    The team should then revisit and update priorities for all the high-priority items in the Work Items List, to make sure
    that an important Work Item is not missed that would otherwise fall just below the list of what can be taken on in this
    iteration.
</p>
<p>
    Pick the top-priority Work Item and see if it matches the objectives of the iteration. If it does, assess whether the
    Work Item is too big to take on within an iteration. If it is too big, break it down into smaller Work Items. Once the
    Work Item has been decomposed, the team determines whether to take on one or several child Work Items.
</p>
<p>
    <em>Example: The team would like to take on Work Item “Develop Use Case A”, but it would take roughly 300 hours to
    develop, so they feel that it is only necessary to do a subset of the use case to achieve their iteration objectives,
    allowing them to take on other high-priority Work Items. They divide the Work Item into 5 smaller work items
    representing different scenarios of use case A. The team decides to take on one out of the 5 identified scenarios in
    this iteration.</em>
</p>
<p>
    When a team has decided to take on a Work Item, it will assign the work to one or several team members. Ideally, this
    is done by team members signing up to do the work, since this makes people motivated and committed to doing the job,
    but based on culture, you may instead have the project manager assign the work.
</p>
<p>
    The next step is for team member(s) to assess how many actual hours or days it will take to do the work. Ideally, you
    want to have each work assignment to be no more than 2 days of work. If the Work Item is too big, consider breaking it
    down into smaller Work Items.
</p>
<p>
    The team sums up the actual estimate for each Work Item they have committed to, and checks if they can commit to any
    more work.
</p>
<p>
    <em>Example: Jack signed up to develop the chosen scenario for use case A. He thinks that it would take 50 hours, so he
    decided to develop the work into a set of tasks, and he asks other team members to help out with various subtasks:</em>
</p>
<ul>
    <li>
        <em>Detail the requirements (Jack) —5 hours</em>
    </li>
    <li>
        <em>Design the scenario (Jack, Ann, and David) —5 hours</em>
    </li>
    <li>
        <em>Implement and test the dB changes (Ann)—12 hours</em>
    </li>
    <li>
        <em>Implement and test the server portion (David)—16 hours</em>
    </li>
    <li>
        <em>Implement and test the client portion (Jack)—12 hours</em>
    </li>
    <li>
        <em>Total—50 hours</em>
    </li>
</ul>
<p>
    As Work Items are decomposed into smaller tasks, estimates can typically be improved. You also better come to
    understand what is involved, and whether other team member may be better suited to take on a subset of the task
</p>
<p>
    The team now determines whether they are willing to take on another Work Item by comparing actual hours signed up for
    to the actual hours available. In this case, the team has only signed up for 50 hours so far, and hence have another
    400 hours available
</p>
<h3>
    Define Evaluation Criteria
</h3>
<p>
    It is critical that it is clear to all team members and other stakeholders how you will measure success at the end of
    the iteration. Obvious success criteria should be that you can test the functionality implemented, and that no or few
    defects are detected. Having too many defects makes it impossible to use the functionality, and it will prevent
    meaningful feedback. Test objectives and test cases need to be clearly outlined.
</p>
<p>
    There may be other success criteria, such as that you demo the capabilities to a certain set of stakeholders with
    favorable review comments, or that you can successfully demonstrate or make available a tech preview at a conference.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="milestones" briefDescription="The point at which an iteration or phase formally ends, thus providing a check-point for whether the project is ready to move to the next iteration or phase." id="_HNxbwMBJEdqSgKaj2SZBmg" orderingGuide="" suppressed="false" presentationName="Milestones" variabilityType="na">
          <Presentation name="milestones,_HNxbwMBJEdqSgKaj2SZBmg" briefDescription="" id="-DG8mYMnTGosWIxjPQFUoTA" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T09:53:11" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Milestones are&nbsp;the point at which an iteration or phase formally ends.
</p>
<p>
    From a&nbsp;development perspective, each iteration provides an increment of functionality to the product. Thus, the
    end of each iteration corresponds to a checkpoint where the project team demonstrates to stakeholders that the
    objectives for that iteration have been met.
</p>
<p>
    However, there are four major milestones that provide evaluation criteria at the end of each phase. From a management
    perspective, the software lifecycle&nbsp;is decomposed over time into four sequential phases, each concluded by a major
    milestone [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">BOE95</a>].
</p>
<p class="banner" align="center">
    <img height="156" alt="Click on text for more information about phases and milestones" src="openup_basic/guidances/concepts/resources/co_phas1.gif"     width="406" border="0" />
</p>
<p class="picturetext" align="center">
    The phases and milestones of a project
</p>
<p>
    Each phase is essentially a span of time between two major milestones. At each phase-end an assessment is performed to
    determine whether the objectives of the phase have been met. A satisfactory assessment allows the project to move to
    the next phase.
</p>
<p>
    At the end of the <strong>Inception</strong> phase is the first major project milestone or <strong>Lifecycle Objectives
    Milestone</strong>. At this point, you examine the cost versus benefits of the project, and decide either to proceed
    with the project or to cancel it.
</p>
<p>
    At the end of the <strong>Elaboration</strong> phase is the second important project milestone, the <strong>Lifecycle
    Architecture Milestone</strong>. At this point, a baseline of requirements is agreed to, you examine the detailed
    system objectives and scope, the choice of architecture, and the resolution of the major risks.
</p>
<p>
    At the end of the <strong>Construction</strong> phase is the third important project milestone, the <strong>Initial
    Operational Capability Milestone</strong>. At this point, the product is ready to be handed over to the transition
    team. All functionality has been developed and all alpha testing (if any) has been completed. In addition to the
    software, a user manual has been developed, and there is a description of the current release. The product is ready for
    beta testing.
</p>
<p>
    At the end of the <strong>Transition</strong> phase is the fourth important project milestone, the <strong>Product
    Release Milestone</strong>. At this point, you decide if the objectives were met, and if you should start another
    development cycle. The Product Release Milestone is the result of the customer reviewing and accepting the project
    deliverables.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Guideline" name="assign_changes_to_iteration" briefDescription="This guideline promotes the best practice of isolating team members from disruptive changes during the current iteration. Change requests are reviewed and prioritized during the current iteration, but are not acted upon until assigned to a future iteration." id="__yQQ4L6REdqti4GwqTkbsQ" orderingGuide="" suppressed="false" presentationName="Assign Changes to an Iteration" variabilityType="na">
          <Presentation name="changes_at_iter_bound,__yQQ4L6REdqti4GwqTkbsQ" briefDescription="" id="-bUmvEAAtFf6B0aUCux8k9Q" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-22T07:37:52" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Most iterative software development processes recommend that changes not be introduced during an iteration. The main
    idea is that the iterations should be short and with clearly defined scope so that they can be time-boxed.
</p>
<p>
    To limit scope within an iteration, change requests are reviewed and prioritized as soon as possible, but are not
    assigned for implementation until a future iteration via the <a class="elementLinkWithType" href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Artifact: Work Items List</a>.
</p>
<p>
    Since iterations are relatively short this should not cause undue delay in dealing with urgent and important change
    requests.
</p>
<p>
    Consider the following when choosing the future iteration where the change request will be addressed:
</p>
<ul>
    <li>
        Group similar change requests in the same iteration. For example multiple change requests focused on the same
        functionality or that are dependent on each other.
    </li>
    <li>
        Assign change requests that mitigate high risks to the earliest iteration possible.
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Concept" name="risk_management" briefDescription="This is a fundamental practice that project managers should consider in their projects. Identifying and minimizing risks early in the project lifecycle is key factor for project success." id="_VNxL4ACsEdu8m4dIntu6jA" orderingGuide="" suppressed="false" presentationName="Risk Management" variabilityType="na">
          <Presentation name="new_concept,_VNxL4ACsEdu8m4dIntu6jA" briefDescription="" id="-HhGIkAPjHSIxnPzI3cyDnQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T08:44:13" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Every project contains some measure of uncertainty. The role of <strong>Risk Management</strong> is to deal with this
    uncertainty to try to understand its&nbsp;potential influence on the project. Project risks may be seen as threats or
    opportunities. The former means the risk should be mitigated (see risk management strategies below) where the latter
    means that&nbsp;taking a&nbsp;calculated risk may bring, for example, competitive advantage for a product or
    organization [<a class="elementLinkWithUserText" href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">SEI99</a>].
</p>
<p>
    Identify risks as soon as the project starts and continue identifying and managing risks throughout the project. A
    common mistake is to identify risks only at the beginning of the project and then only track the status of these
    initial risks. The risk list should be revisited weekly, or as a minimum once per iteration, to add any newly
    discovered risk.
</p>
<h3>
    Risks Prioritization
</h3>
<p>
    A good approach for prioritizing risks is to have an attribute called risk magnitude, a combination of the risk
    probability and the risk impact. Each iteration provides a chance&nbsp;for better understanding of stakeholder needs,
    the team capabilities, the technology at hand, and so on. Capture, quantify&nbsp;and prioritize risks as they arise.
    High magnitude risks are&nbsp;attacked first, thus&nbsp;improving the chances of project success and minimizing
    uncertainty. See <a class="elementLinkWithType" href="./../../../openup_basic/guidances/templates/risk_list,_MIUO0C8FEduzydamRseoUw.html" guid="_MIUO0C8FEduzydamRseoUw">Template: Risk List</a>&nbsp;for more information.
</p>
<h3>
    Risk Management Strategies
</h3>
<p>
    Once you have chosen a set of risks to focus on, choose a mitigation strategy, as described below. Then, identify and
    assign tasks to apply the strategy to the given risk. Follow up regularly on risk-mitigation actions. Try another
    strategy if your chosen strategy does not reduce the magnitude of a risk.
</p>
<p>
    Common mitigation strategies are:
</p>
<ul>
    <li>
        Risk avoidance: reorganize the project so that it cannot be affected by that risk. 
        <ul>
            <li>
                For example: you need to use a new framework. A risk avoidance strategy could be to drop this new framework
                and using another one that is already understood by the team.<br />
            </li>
        </ul>
    </li>
    <li>
        Risk transfer: reorganize the project so that someone or something else bears the risk. 
        <ul>
            <li>
                For example: the application you are developing needs to communicate with a legacy system. A risk transfer
                strategy&nbsp;would make the legacy support team responsible of providing the APIs to access the legacy
                system.<br />
            </li>
        </ul>
    </li>
    <li>
        Risk mitigation: define a mitigation plan to&nbsp;reduce the probability or the impact of the risk. 
        <ul>
            <li>
                For example: you need to use a new middleware. A risk mitigation strategy could be to build a prototype
                using this new middleware to validate that&nbsp;it will provide the features you need for your
                application.<br />
            </li>
        </ul>
    </li>
    <li>
        Risk acceptance: decide to live with the risk, and define a contingency plan.
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            <li>
                For example: your integrator is the only one who knows how to integrate the different components of your
                application. A contingency plan could be to identify a resource on another project that you could bring on
                if your integrator is sick, leaves the company, etc.
            </li>
        </ul>
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <Concept>_GXiogMvoEdqukPpotm3DYg</Concept>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="risk_list" briefDescription="This artifact is a sorted list of known and open risks to the project, sorted in order of importance and associated with specific mitigation or contingency actions." id="_Ckay8Cc_EduIsqH1Q6ZuqA" orderingGuide="" suppressed="false" presentationName="Risk List" variabilityType="na">
          <Presentation xsi:type="uma:ArtifactDescription" name="risk_list,_Ckay8Cc_EduIsqH1Q6ZuqA" briefDescription="" id="-4VJ_0upihz-bR7VRlm63Vw" orderingGuide="" suppressed="false" authors="" changeDate="2006-10-31T01:42:53" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[This list identifies, in decreasing order of priority, the events that could lead to a significant negative outcome. It
serves as a focal point for project activities and is the basis around which iterations are organized. <!--EndFragment-->]]></MainDescription>
            <KeyConsiderations><![CDATA[<p>
    This list should capture the critical and serious risks. If you find this list extending beyond 20, carefully consider
    whether they are really serious risks. Tracking more than 20 risks is an onerous task.
</p>]]></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose><![CDATA[To&nbsp;capture the perceived risks to the success of the project.]]></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions>&lt;h4>&#xD;
    Option: list of risks captured in the project plan&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In this approach you put the overall risk list in the project plan. The iteration plan will contain only the tasks you&#xD;
    will be doing during the iteration to mitigate the risks. This will ensure that the iteration plan contains only&#xD;
    iteration information. The project plan has to be revisited constantly as you update risks.&#xD;
&lt;/p>&#xD;
&lt;h4>&#xD;
    Option: list of risks captured in&amp;nbsp;the iteration plan&#xD;
&lt;/h4>&#xD;
&lt;p>&#xD;
    In this approach you enter the overall risk list in the current iteration plan. This approach ensures that you look at&#xD;
    the risk list at each iteration, as it is part of your iteration plan. The only drawback is that your iteration plan&#xD;
    will contain information that is not relevant to the current iteration. All the risks you have not&amp;nbsp;mitigated&#xD;
    during the iteration&amp;nbsp;have to be&amp;nbsp;transferred to the next iteration plan.&#xD;
&lt;/p></RepresentationOptions>
          </Presentation>
          <Concept>_0bsLgMlgEdmt3adZL5Dmdw</Concept>
          <Concept>_VNxL4ACsEdu8m4dIntu6jA</Concept>
          <Checklist>_7BZa0DIdEduDTv4Y1akVTA</Checklist>
          <Template>_MIUO0C8FEduzydamRseoUw</Template>
        </ContentElement>
        <ContentElement xsi:type="uma:Checklist" name="risk_list" briefDescription="This checklist provides guidance on assessing that all possible risks have been considered in a project." id="_7BZa0DIdEduDTv4Y1akVTA" orderingGuide="" suppressed="false" presentationName="Risk List" variabilityType="na">
          <Presentation name="new_checklist,_7BZa0DIdEduDTv4Y1akVTA" briefDescription="" id="-gqNN4DnROmJpgKtrdguhpg" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-22T10:38:14" changeDescription="" version="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Section name="Have all potential risks to the project been identified" briefDescription="" id="_qO41ADIfEduDTv4Y1akVTA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Have you identified anything that can be on the path to the project success? List all potential risks, giving a description&#xD;
and type (direct or indirect). See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more information.</Description>
            </Section>
            <Section name="Are risks described without ambiguity" briefDescription="" id="_5RiSkDe2EduD7J48kKN20g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Make sure you capture and describe risks in a clear, concise and unambiguous way. Also follow these rules when describing&#xD;
mitigation strategies for risks. This will avoid unnecessary work and - more importantly -&amp;nbsp;that a risks are&#xD;
effectively identified and managed.</Description>
            </Section>
            <Section name="What is the probability of happening and impact of each risk" briefDescription="" id="_2rpQoDIfEduDTv4Y1akVTA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>Determine&amp;nbsp;the probability of the risk happening and its impact on the project. This gives you the order of magnitude&#xD;
of risks (probability x impact), allowing you to address the high magnitude risks early in the project. See &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html&quot; guid=&quot;_0bsLgMlgEdmt3adZL5Dmdw&quot;>Concept: Risk&lt;/a>&amp;nbsp;for more information.</Description>
            </Section>
            <Section name="Have the risks been properly prioritized and sorted" briefDescription="" id="_x-gbwDe0EduD7J48kKN20g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>The risk list is a prioritized list with the highest risk at the top and the rest in descending order.&amp;nbsp; They should be&#xD;
sorted according to their magnitude of risk.</Description>
            </Section>
            <Section name="Are there interdependencies between risks" briefDescription="" id="_hSFaYDe3EduD7J48kKN20g" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p class=&quot;MsoNormal&quot; style=&quot;MARGIN: 0in 0in 0pt&quot;>&#xD;
    &lt;span style=&quot;FONT-SIZE: 10pt; FONT-FAMILY: Arial&quot;>Make sure you establish interdependencies between risks as&#xD;
    appropriate. For example, the consequence of a risk happening may raise the probability of another risk happening, or&#xD;
    raise the impact that other risk brings to the project. If risks depend on each other, you may need to&#xD;
    mitigate&amp;nbsp;all interdependent risks&amp;nbsp;at the same time, or revisit the risk list to update the magnitude of&#xD;
    dependent risks.&lt;/span>&#xD;
&lt;/p></Description>
            </Section>
            <Section name="Is there a mitigation strategy for each risk" briefDescription="" id="_LATHgDIeEduDTv4Y1akVTA" orderingGuide="" suppressed="false" sectionName="" variabilityType="na">
              <Description>&lt;p>&#xD;
    Propose a mitigation strategy for each identified risk. You can either transfer the risk, avoid it, accept it or&#xD;
    mitigate it (by minimizing the probability&amp;nbsp;of happening or impact&amp;nbsp;that the risk brings to the project). See&#xD;
    &lt;a class=&quot;elementLinkWithType&quot; href=&quot;./../../../openup_basic/guidances/concepts/risk_management,_VNxL4ACsEdu8m4dIntu6jA.html&quot; guid=&quot;_VNxL4ACsEdu8m4dIntu6jA&quot;>Concept: Risk Management&lt;/a> for more information.&#xD;
&lt;/p></Description>
            </Section>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Role" name="project_manager_pm" briefDescription="" id="_dkAtkDR_EdursMWmT1aZyw" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0a0o0MlgEdmt3adZL5Dmdw" variabilityType="contributes">
          <ResponsibleFor>_0a6vcMlgEdmt3adZL5Dmdw</ResponsibleFor>
          <ResponsibleFor>_Ckay8Cc_EduIsqH1Q6ZuqA</ResponsibleFor>
          <ResponsibleFor>_0bA2EMlgEdmt3adZL5Dmdw</ResponsibleFor>
        </ContentElement>
        <ContentElement xsi:type="uma:Example" name="work_items_list" briefDescription="This is an example of a partial Work Items List for a small team who just started to work on iteration 3." id="_nHomIDgzEdu4E8ZdmlYjtA" orderingGuide="" suppressed="false" presentationName="Work Items List" variabilityType="na">
          <Presentation name="work_items_list,_nHomIDgzEdu4E8ZdmlYjtA" briefDescription="" id="-qunTPN3vqTIGpELwajXpLA" orderingGuide="" suppressed="false" authors="" changeDate="2006-08-31T04:50:15" changeDescription="" version="">
            <MainDescription><![CDATA[<a href="openup_basic/guidances/examples/resources/ex_work_items_list.xls" target="_blank">ex_work_items_list.xls</a>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Report" name="iteration_burndown" briefDescription="The iteration burndown shows the trend for how much work is left to do within that iteration." id="_uAzgkDg3Edu4E8ZdmlYjtA" orderingGuide="" suppressed="false" presentationName="Iteration Burndown" variabilityType="na">
          <Presentation name="iteration_burndown,_uAzgkDg3Edu4E8ZdmlYjtA" briefDescription="" id="-Aw8p59vJ9rWsOV82rljQiQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-11-03T04:59:14" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    The iteration burndown is&nbsp;the primary tool for understanding the status of the current iteration. It shows the
    trend for how much work is left to do within the iteration. This is accomplished by adding up the estimated effort left
    for each of the work items to be addressed within the iteration, and showing how the estimated effort is changing over
    the duration of the iteration. The iteration backlog should be updated frequently, preferably on a daily basis.
</p>
<p>
    Factors that impact the team’s assessment of how much work remains include:
</p>
<ul>
    <li>
        Work that has been completed, which means there is less work remaining.
    </li>
    <li>
        The developer responsible for a work item changes the assessment of effort required to complete the work item. This
        should be expected, since we typically understand what it really takes to complete a task after we have done a
        subset of the task.&nbsp;It's common for estimates of the work remaining to increase in the beginning of the
        iteration, especially for inexperienced teams, since they often underestimate efforts. Expect estimates to continue
        changing as teams become more experienced, but the modifications are as frequently upward as downward.
    </li>
    <li>
        Estimated effort left can increase during the iteration as a result of the team learning more about what needs to
        be done.
    </li>
</ul>
<p>
    Daily or frequent updates to the iteration burndown allows the team to react to changes. For example, cutting scope by
    removing work items from the iteration, reducing the ambition level associated with a work item, or finding better ways
    of approaching work items such as having an expert team member help out with difficult work items.
</p>
<p>
    See <a href="openup_basic/guidances/reports/resources/ex_iteration_burndown.xls" target="_blank">ex_iteration_burndown.xls</a> for an example
    iteration burndown report.<br />
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Report" name="project_burndown" briefDescription="An effective way of communicating project progress." id="_ePrt8Dj3EduxovfWMDsntw" orderingGuide="" suppressed="false" presentationName="Project Burndown" variabilityType="na">
          <Presentation name="project_burndown,_ePrt8Dj3EduxovfWMDsntw" briefDescription="" id="-hrDndmFd0zexB0HNYX3gww" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-26T02:07:38" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    Project burndown is usually communicated in graphical form.&nbsp;Project burndown is very useful to quickly communicate
    the overall project progress based on actual data and to diagnose a trend for the remainder of the project.&nbsp;
</p>
<p>
    The project burndown chart consists of two perspectives, the horizontal axis showing the iterations and the vertical
    axis indicating the remaining points from the work items list. Additionally the average burndown from previous
    iterations is calculated and a trend for the remainder of the project diagnosed and forecasted.
</p>
<p>
    Project burndown management is a enabling technique that allows direct linkage of iteration goals to work items. The
    project manager will use the project burndown information for communicating progress and trend to senior management.
</p>
See <a href="openup_basic/guidances/reports/resources/ex_project_burndown.xls" target="_blank">ex_project_burndown.xls</a>&nbsp;for an example of
project burndown.<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="work_items_list_pm" briefDescription="" id="_sNoQ0Dn6Edu_y4hBImiwwQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_rGNWsCbSEdqh1LYUOGRh2A" variabilityType="contributes">
          <Presentation xsi:type="uma:ArtifactDescription" name=",_sNoQ0Dn6Edu_y4hBImiwwQ" briefDescription="" id="-fDVhZTkf1TqDyExbI9DM-w" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-07T11:41:14" changeDescription="" version="1.0.0" externalId="">
            <MainDescription><![CDATA[<p>
    Work Items should contain estimates, see <a class="elementLinkWithType" href="./../../openup_basic/guidances/guidelines/work_items_list,_7vEXEMA4EdqSgKaj2SZBmg.html" guid="_7vEXEMA4EdqSgKaj2SZBmg">Guideline: Work Items List</a>&nbsp;and <a class="elementLinkWithType" href="./../../openup_basic/guidances/guidelines/agile_estimation,_CGHskBEdEdqY7JB6N6CW2w.html" guid="_CGHskBEdEdqY7JB6N6CW2w">Guideline: Agile Estimation</a>.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions></RepresentationOptions>
          </Presentation>
          <Guideline>_CGHskBEdEdqY7JB6N6CW2w</Guideline>
          <Example>_nHomIDgzEdu4E8ZdmlYjtA</Example>
          <Report>_ePrt8Dj3EduxovfWMDsntw</Report>
          <Report>_uAzgkDg3Edu4E8ZdmlYjtA</Report>
        </ContentElement>
        <ContentElement xsi:type="uma:Artifact" name="iteration_plan_pm" briefDescription="" id="_xWdL0Dn6Edu_y4hBImiwwQ" orderingGuide="" suppressed="false" presentationName="" variabilityBasedOnElement="_0aQBEslgEdmt3adZL5Dmdw" variabilityType="contributes">
          <Presentation xsi:type="uma:ArtifactDescription" name="pm_iteration_plan,_xWdL0Dn6Edu_y4hBImiwwQ" briefDescription="" id="-b9hejTMj8E7U4g2v80xDjA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-01T11:06:34" changeDescription="" version="" externalId="">
            <MainDescription></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <ImpactOfNotHaving></ImpactOfNotHaving>
            <Purpose></Purpose>
            <ReasonsForNotNeeding></ReasonsForNotNeeding>
            <BriefOutline></BriefOutline>
            <RepresentationOptions></RepresentationOptions>
          </Presentation>
          <Guideline>_0auiMMlgEdmt3adZL5Dmdw</Guideline>
          <Example>_TuNhIEE4EdulKujnGUuxbg</Example>
          <Report>_uAzgkDg3Edu4E8ZdmlYjtA</Report>
        </ContentElement>
        <ContentElement xsi:type="uma:Example" name="project_plan" briefDescription="This is an example of a project plan." id="_Nzv5kDoAEdusGsHODb-STA" orderingGuide="" suppressed="false" presentationName="Project Plan" variabilityType="na">
          <Presentation name="new_example,_Nzv5kDoAEdusGsHODb-STA" briefDescription="" id="-IdlCQXdDNYGrGJU4TBwvCA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-27T11:07:10" changeDescription="" version="1.0.0">
            <MainDescription><![CDATA[<p>
    This example is the actual project plan used for the development of OpenUP/Basic.
</p>
<p>
    <a href="openup_basic/guidances/examples/resources/project_plan.doc" target="_blank">project_plan.doc</a>
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
        <ContentElement xsi:type="uma:Example" name="iteration_plan" briefDescription="This is an example of an iteration plan for iteration 5 for a small team. In this example, the team has chosen not to list work items in the iteration plan. Instead, the team will search the work items list for work items assigned to iteration 5. This is the preferred solution when work items are managed in a tool that provides basic search capabilities." id="_TuNhIEE4EdulKujnGUuxbg" orderingGuide="" suppressed="false" presentationName="Iteration Plan" variabilityType="na">
          <Presentation name=",_TuNhIEE4EdulKujnGUuxbg" briefDescription="" id="-nDr0XNiUWBo6VS1YS6KAqA" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-11T04:11:20" changeDescription="" version="">
            <MainDescription><![CDATA[<a href="openup_basic/guidances/examples/resources/ex_iteration_plan.doc" target="_blank">ex_iteration_plan.doc</a>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
        </ContentElement>
      </MethodPackage>
      <ContentElement xsi:type="uma:TermDefinition" name="effort" briefDescription="" id="_nJSDwEvuEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="effort" variabilityType="na">
        <Presentation name=",_nJSDwEvuEdunZcj9T5hrMQ" briefDescription="" id="-WIgtkwJN71D51FdcQs-TzQ" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    Indicates how long it will take the team member(s) assigned to the work item to do the work. Typically uses the units
    of Actual Days or Actual Hours
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="iteration_burndown" briefDescription="" id="_8b20EEvvEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="iteration burndown" variabilityType="na">
        <Presentation name=",_8b20EEvvEdunZcj9T5hrMQ" briefDescription="" id="-3G3HV0opAmFWGxYgsD5AhA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A&nbsp;primary tool for understanding the status of an iteration. It shows the trend for how much work is left to do within
that iteration.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="point" briefDescription="" id="_MvOuAEvGEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="point" variabilityType="na">
        <Presentation name="new_term_definition,_MvOuAEvGEdunZcj9T5hrMQ" briefDescription="" id="-oShmMITo9RIi1AzACWI9vw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T07:59:48" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A relative measure of size is typically used for Agile estimation]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="project_burndown" briefDescription="" id="_eX0YsEvvEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="project burndown" variabilityType="na">
        <Presentation name=",_eX0YsEvvEdunZcj9T5hrMQ" briefDescription="" id="-NNByAM5YsjCu39flaOSZtQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T08:09:54" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A chart consisting of two perspectives, the horizontal axis showing the iterations and the vertical axis indicating the
remaining points from the work items list.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="risk" briefDescription="" id="_ii2LUEvGEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="risk" variabilityType="na">
        <Presentation name="risk,_ii2LUEvGEdunZcj9T5hrMQ" briefDescription="" id="-hOtatvr8wIjqW8UD0MSGhQ" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-29T08:58:30" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A condition that can potentially affect, prevent, or limit a project's success. Project risks may be seen as threats or
opportunities]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="scope" briefDescription="" id="_t7JOkEvtEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="scope" variabilityType="na">
        <Presentation name=",_t7JOkEvtEdunZcj9T5hrMQ" briefDescription="" id="-h1poMaxtQbmg6hD5772oVw" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T08:22:03" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A description of the breadth of a system's behavior, specifying the boundaries of the problem domain or system.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="velocity" briefDescription="" id="_Nj2hsEvuEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="velocity" variabilityType="na">
        <Presentation name=",_Nj2hsEvuEdunZcj9T5hrMQ" briefDescription="" id="-mgWkuUy3q0zzFaxE7DY1ag" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[A&nbsp;key metric used for iteration planning. It indicates how many points are delivered upon within an iteration for a
certain team and project.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="work_breakdown_structure" briefDescription="" id="_RK9nwEvtEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="work breakdown structure" variabilityType="na">
        <Presentation name=",_RK9nwEvtEdunZcj9T5hrMQ" briefDescription="" id="-KQTbqDSJXR8KLBxIgGVquA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Breaks the project into individual units of work, or tasks, for which cost, milestones, and activities can be allocated and
tracked.]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Guideline>_rmBEkJjsEduad8I_c-ogIA</Guideline>
      </ContentElement>
      <ContentElement xsi:type="uma:TermDefinition" name="work_item" briefDescription="" id="_jyVgcEvKEdunZcj9T5hrMQ" orderingGuide="" suppressed="false" presentationName="work item" variabilityType="na">
        <Presentation name="work_item,_jyVgcEvKEdunZcj9T5hrMQ" briefDescription="" id="-1Oc9t_TLaBgW_YLugZcq7w" orderingGuide="" suppressed="false" authors="" changeDate="2006-09-24T08:07:26" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[Scheduled work to be done within the project]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
        <Guideline>_rmBEkJjsEduad8I_c-ogIA</Guideline>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="staffing_project" briefDescription="Advice for how to staff a software development project." id="_Jq64EJjsEduad8I_c-ogIA" orderingGuide="" suppressed="false" presentationName="Staffing a Project" variabilityType="na">
        <Presentation name="new_guideline,_Jq64EJjsEduad8I_c-ogIA" briefDescription="" id="-HYO1lwAFOxlT7ncq8EjSng" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-31T07:46:21" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    Good software development teams are made up of a collection of people who collaborate effectively. How the project team
    is staffed, by either adding or removing people, will greatly impact the team's productivity.
</p>
<p>
    When staffing a development project, consider the following advice:
</p>
<ol>
    <li>
        Include people who fit into the existing team culture. Good teams don't just appear magically one day, but instead
        are grown and nurtured over time. Invite people onto the team who will add value and furthermore who will not be
        disruptive. Similarly, you may need to invite someone to leave the team if they do not fit well with the existing
        team and they don't seem to be able to change.
    </li>
    <li>
        People should want to be on the team. People are far more productive when they're working on a project that they
        believe in and want to see succeed.
    </li>
    <li>
        Build your team with "generalizing specialists". A generalizing specialist is someone with one or more technical
        specialties who actively seeks to gain new skills in both their existing specialties as well as in other areas,
        including both technical and domain areas. Generalizing specialists add value to the team because they have
        specialized skills that you need while at the same time appreciate the full range of issues that a general
        understanding of the software development process and the business domain offers.
    </li>
    <li>
        Include stakeholders. Stakeholders, including business stakeholders such as end users and technical stakeholders
        such as operations staff, can add significant value to your team. Instead of just interviewing them to gain
        information from them, or asking them to review your work, why not include them as active participants on the team?
    </li>
    <li>
        Include specialists for short-term, specialized work. Specialists can still add value on an agile development team,
        particularly when they have specific skills and experience which existing team members do not have. It can often be
        more effective to bring a specialist into the team for a short period of time to help with a specific task, such as
        installation and setup of an application server, the development of an architectural spike, or simply taking part
        in a review.
    </li>
    <li>
        Give people opportunities to evolve their skills. At the beginning of a project the team may not have the full
        range of skills that it needs, or perhaps a few individuals may not have the skills required to fulfill the roles
        they are filling. This is a very common risk taken on by the majority of project teams for the simple reasons that
        you often can't find the perfect combination of people and even if you could you still want to provide people with
        opportunities to grow as professionals.
    </li>
    <li>
        Remember Brook's Law. Adding people to a late project will only make it later [<a class=""
        href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
        guid="_9ToeIB83Edqsvps02rpOOg">BRO95</a>]. The corollary is that removing people from a late project may speed
        things up [<a class=""
        href="./../../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
        guid="_9ToeIB83Edqsvps02rpOOg">AMB04</a>].
    </li>
</ol>
<p>
    Sometimes you will need to go against some of this advice due to environmental constraints. Perhaps only specialists
    are available (although there's nothing stopping a specialist from becoming a generalizing specialist), perhaps there
    aren't as many opportunities for people to try new things as they would like, or perhaps the stakeholders aren't
    available to be active members of the team. The advice above is designed to lead to as high-performing a team as
    possible, but even partial adherence to this guideline will improve the team.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
      <ContentElement xsi:type="uma:Guideline" name="self_organize_work_assignments" briefDescription="Agile software development teams organize the work that needs to be done together as a team." id="_rmBEkJjsEduad8I_c-ogIA" orderingGuide="" suppressed="false" presentationName="Self Organize Work Assignments" variabilityType="na">
        <Presentation name="self_organize_work_assignments,_rmBEkJjsEduad8I_c-ogIA" briefDescription="" id="-e26WOHRbTVQrDssK5zijVA" orderingGuide="" suppressed="false" authors="" changeDate="2007-01-05T03:07:49" changeDescription="" version="1.0.0">
          <MainDescription><![CDATA[<p>
    A "self organizing team" has the authority to choose the work that it will perform and the responsibility to do that
    work in the way that it chooses.&nbsp; Important aspects of a self organizing team&nbsp;are:
</p>
<ol>
    <li>
        The team selects its own work. At the beginning of an iteration the team collectively selects the <a class=""
        href="./../../../openup_basic/guidances/termdefinitions/work_item,_jyVgcEvKEdunZcj9T5hrMQ.html"
        guid="_jyVgcEvKEdunZcj9T5hrMQ">work item</a>s from the prioritized <a class=""
        href="./../../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html"
        guid="_rGNWsCbSEdqh1LYUOGRh2A">Work Items List</a>. Work selection is performed within given constraints, including
        the priorities set by <a class="" href="./../../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html"
        guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholder</a>s, time (such as the length of the current <a class=""
        href="./../../../openup_basic/guidances/concepts/iteration,_lam4ADkBEduxovfWMDsntw.html"
        guid="_lam4ADkBEduxovfWMDsntw">Iteration</a>), the budget, and the skills of team members.
    </li>
    <li>
        Individuals select their own work. Individuals are empowered to select their own work. Someone will choose to do
        something because they are good at it and know that they can do the work effectively, because they want to gain
        more experience at something and hope to improve their skill-set by working with someone with such experience, or
        because they know that the work needs to be done and that it's their turn to do so. Although an individual fulfills
        one or more roles on a project team that doesn't imply that the person is constrained to only doing specific types
        of work.
    </li>
    <li>
        The team determines how to perform the work. At the beginning of an iteration the team will hold an "all hands"
        planning meeting where it determines the general strategy for doing the work and the tasks required to do so. More
        detailed planning, if required, will be done on a just-in-time (JIT) basis by the individual(s) doing the work.
        Note that the team is still constrained by your organization's standards, technical infrastructure, regulations,
        and so on.
    </li>
    <li>
        Everyone commits to the work. The team commits to accomplishing the work that it has agreed to do by the end of the
        iteration. Individuals also commit to doing the work that they say they will do, although as the iteration
        progresses various tasks may be renegotiated as required.
    </li>
    <li>
        The team coordinates regularly. To ensure that the work is accomplished the team must coordinate its efforts
        effectively. This is typically done through daily stand up meetings of the team and impromptu discussions between
        individuals.
    </li>
</ol>
<p>
    This is a participatory approach to decision making where everyone has the opportunity to provide input and to listen
    to the decision making process. The goal is to make decisions at the right place within the organizational structure,
    empowering teams by giving them both the responsibility and the authority to get the job done. It improves motivation
    amongst team members, and thereby their productivity, by giving them control over their work.
</p>
<h3>
    Project Manager Responsibilities
</h3>
<p>
    There is still work for the <a href="./../../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html"
    guid="_0a0o0MlgEdmt3adZL5Dmdw">Project Manager</a> on self organizing teams. The project manager must still:
</p>
<ol>
    <li>
        Provide leadership. Team culture and project vision must be nurtured and evolved throughout the project, and
        direction must be provided to the team.
    </li>
    <li>
        Mediate disagreements. The manager must be prepared to step in and make a decision when other team members are
        unable to come to a decision.
    </li>
    <li>
        Ensure that team members grow their skill-set. From time to time the manager may need to motivate individuals to
        take on new tasks that are outside their comfort zone or to work with others to help those people gain new skills.
    </li>
    <li>
        Ensure that the team respects their limits. Self organizing teams have the authority to make decisions within the
        scope of their responsibility, but that doesn't mean that they get to rethink everything that they feel like. For
        example, the development team must still conform to the technical infrastructure and to the business strategy of
        your organization: they likely don't have the authority to change these things even though they may not fully agree
        with them. When an issue falls outside their scope of responsibility the team must either accept it or collaborate
        with the people with the appropriate authority.
    </li>
    <li>
        Summarize the project plan. External stakeholders, such as senior management or business representatives not
        actively involved with the team, will want to know the current status of the project and the team's current plans.
        The project manager may be required to summarize and communicate this information to those people.
    </li>
</ol>
<h3>
    What This Isn't
</h3>
<p>
    The concept of self organizing teams often sounds like anarchy or non-management to traditional IT professionals, but
    nothing could be further from the truth. Although self organization relies on team members being responsible and mature
    it is tempered by the guiding hand of a good project manager. It is also tempered by organizational standards,
    infrastructure, and external regulations. "Self organizing" doesn't mean that you have complete freedom to do what you
    want.
</p>
<p>
    Self organization isn't necessarily a consensus-based approach either; sometimes individuals will disagree with a
    decision but will choose to go along with the will of the team. Nevertheless, consensus isn't ruled out by this
    approach but it certainly isn't required.
</p>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
        </Presentation>
      </ContentElement>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ProcessPackage" name="Phase Iteration Templates" briefDescription="" id="_bxcS4B_REdq3EKSIdbj-MA" orderingGuide="" suppressed="false" global="false">
      <MethodPackage xsi:type="uma:ProcessComponent" name="elaboration_phase_iteration" briefDescription="" id="_0rWYIMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
        <Process xsi:type="uma:CapabilityPattern" name="elaboration_phase_iteration" briefDescription="This iteration template defines the activities (and associated roles and work  products) performed in a typical iteration in the Elaboration phase. Each activity  and related goals are described." id="_0sTaYMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Elaboration Phase Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="true" IsEnactable="false" variabilityType="na">
          <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb_BPL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
            <MainDescription><![CDATA[<h3> Introduction </h3>
<p> Most activities during a typical iteration in Elaboration phase happen in 
  parallel. Essentially, the main objectives for Elaboration are related to better 
  understanding the requirements, creating and establishing 
  a baseline for  the architecture for the system, and mitigating top-priority 
  risks. </p>
<p> The activities performed in a typical iteration during&nbsp;the 
  Elaboration phase are described below. </p>
<h4> Manage iteration </h4>
<p> This activity is performed throughout the project lifecycle. 
  The goal of this activity is to identify risks and issues early enough 
  that  they can be mitigated, to establish the goals for the iteration, 
  and to support the development team in reaching these goals. </p>
<p> The <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project 
  manager</a> and the team launche the iteration, allocating work items to team 
  members (some project teams will prefer to have members volunteer to perform 
  work). The project manager collaborates with the team to break down the work 
  items into development tasks to perform in that iteration. This provides a more 
  accurate estimate of time to spend on what can be realistically achieved. </p>
<p> As the iteration runs, the project manager performs 
  monitoring and control of&nbsp;the project  by regularly checking the 
  status of work completed, the work to do 
  next, and issues blocking the progress<strong>. 
  </strong>In some projects, this checking occurs 
  in daily meetings, which allows for a&nbsp;more precise&nbsp;understanding 
  of how the work in an iteration is progressing. As 
  needed, the&nbsp;team makes corrections to achieve what was planned. The overall 
  idea is that risks and issues are identified and managed throughout the iteration. 
  And everyone knows the project status.</p>
<p>The prioritization of work for a given iteration takes place. Project manager,&nbsp;<a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholders</a>, 
  and the remaining team members agree on what is supposed to be developed during 
  that iteration.</p>
<p>As in any other iteration assessment, demonstration of implemented functionality 
  planned for that iteration is the key success criterion. During iteration assessments 
  in Elaboration, though, keep the phase objectives in mind. As Elaboration iterations 
  are performed, an executable architecture evolves, and you establish a baseline 
  at the end of the phase. In addition, requirements are better understood and 
  detailed. Essential risks, including the architectural ones, have been mitigated. 
  These results&nbsp;help the project manager produce more accurate estimates 
  for the project schedule and cost.</p>
<h4> Manage requirements </h4>
<p> This activity is repeated throughout the project lifecycle. 
  The goal of this activity is to understand and prioritize stakeholder needs 
  and associated requirements for the system, and also to 
  capture these in a form that supports effective communication and collaboration 
  between the stakeholders and development team. </p>
<p> During the Elaboration phase, 
  requirements can still be captured and outlined as customer needs arise. The 
  prioritization of requirements determines when 
  new requirements are going to be implemented. High-risk, architecturally significant 
  requirements are detailed to the extent necessary to be 
  able to use that information  as input to architecture and development 
  activities in the current iteration, plus in planning 
  for the next iteration.</p>
<p><a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/test_case,_0ZS-0MlgEdmt3adZL5Dmdw.html" guid="_0ZS-0MlgEdmt3adZL5Dmdw">Test 
  cases</a> describe which&nbsp;requirements are being tested&nbsp;in that iteration. 
</p>
<p> <strong>Note: <br />
  <br/>
  </strong>The emphasis on finding, outlining and detailing requirements varies 
  from phase to phase. Iterations in Inception and early Elaboration tend to focus 
  more on identifying and outlining requirements in general and on 
  detailing high-priority and architecturally 
  significant requirements. During iterations in late Elaboration and early Construction, 
  the remaining requirements are usually outlined and detailed. </p>
<h4> Define the architecture </h4>
<p> This activity is repeated in each iteration in the 
  Elaboration phase. The main&nbsp;goal of this activity is&nbsp;to propose an 
  <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html" guid="_0XAf0MlgEdmt3adZL5Dmdw">architecture</a> 
  that addresses the requirements with high architectural risks, thus providing 
  a solid, yet resilient, foundation on which to build the system functionality.</p>
<p> The <a class="elementLinkWithUserText" href="./../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw">architect</a> 
  analyzes the architectural constraints, identifies available assets to build 
  the system, defines how the system will be structured, and identifies the initial 
  abstractions and mechanisms that must be provided by the architecture. </p>
<p> Throughout all of the iterations, the architect: </p>
<ul>
    
  <li> Identifies commonalities between different requirements to leverage reuse 
  </li>
  <li> Defines strategies for achieving requirements related 
    to quality</li>
  <li> Captures and communicates architectural decisions </li>
</ul>
<h4> Develop solution for requirement within context</h4>
<p> This activity is instantiated multiple times, in parallel, for each development 
  task planned for that iteration. The main goal of this activity is an executable 
  system that provides the incremental quality and functionality for the specified 
  requirements within the specified context. </p>
<p> As the requirements planned for the iteration are broken down into development 
  tasks, these are assigned by the project managers to <a class="elementlinkwithusertext" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">developers</a> 
  (some project teams prefer to have team members sign up for development tasks 
  themselves). </p>
<p> The solution to be developed is for a particular requirement within a context, 
  which reflects the idea of breaking down requirements into development tasks. 
  As an example, a particular use-case scenario within the context of database 
  access could be assigned to a developer; whereas, the same scenario within the 
  user interface and business logic contexts could be assigned to a different 
  developer. In this example, more than one developer is working on a particular 
  piece of functionality to be delivered in a particular iteration. As they develop 
  the requirement within the context they were assigned to, they perform&nbsp;<a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/developer_test,_0YuXEclgEdmt3adZL5Dmdw.html" guid="_0YuXEclgEdmt3adZL5Dmdw">tests</a> 
  and integrate their work to create <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">builds</a>. 
</p>
<h4> Validate build </h4>
<p> This activity is repeated throughout the project 
  lifecycle. The main goal of this activity is to validate the current increment 
  of the system against the requirements allocated to it. </p>
<p> The intent is to validate that the high-priority requirements implemented 
  reflect a robust architecture so that remaining requirements can be implemented 
  on top of that architecture. As developer develop the solution for the requirements 
  in a given iteration, the integrated source code is unit-tested. Then, a separate 
  <a class="elementlinkwithusertext" href="./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html" guid="_0ZM4MclgEdmt3adZL5Dmdw">tester</a> 
  conducts system-level testing in parallel with development to make sure that 
  the solution, which is continuously being integrated, matches what is specified 
  in the requirements. Then, the tester defines what techniques to use, what the 
  data input is, what <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/guidelines/test_suite,_0aDz0MlgEdmt3adZL5Dmdw.html" guid="_0aDz0MlgEdmt3adZL5Dmdw">test 
  suites</a> to create. As tests are performed, defects found are reported and 
  added to the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">work 
  items list</a>, so they can be prioritized and assigned to team members. </p>
<h4> Ongoing tasks </h4>
<p> This activity includes tasks that happen throughout the iteration on an ongoing 
  basis but are not necessarily part of a plan. For example, at any time, <a class="elementlinkwithusertext" href="./../../openup_basic/roles/any_role,_0dsWoMlgEdmt3adZL5Dmdw.html" guid="_0dsWoMlgEdmt3adZL5Dmdw">any 
  role</a> in the project team can issue a <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html" guid="_6jdvECb3Edqh1LYUOGRh2A">change 
  request</a>, either because there are requests for enhancements, or defects 
  are found. These change requests are part of the work items list and are prioritized 
  and assigned to team members. Anyone can be assigned to make changes that develop 
  enhancements or fix defects. </p>
<h4>&nbsp; </h4>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Alternatives></Alternatives>
            <HowToStaff></HowToStaff>
            <Purpose></Purpose>
            <Scope></Scope>
            <UsageNotes></UsageNotes>
          </Presentation>
          <BreakdownElement xsi:type="uma:Activity" name="manage_iteration" briefDescription="" id="_0rWYIslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Plan and Manage Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_BfL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0sTaYMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="manage_requirements" briefDescription="" id="_0ruyoclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Manage Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0o9ygclgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_BvL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0sTaYMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="define_architecture" briefDescription="" id="_0rcewclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Define the Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0sx7islgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_B_L5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0sTaYMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="develop_requirement_within_context" briefDescription="" id="_WrXvwPinEdmugcVr9AdHjQ" orderingGuide="" suppressed="false" presentationName="Develop Solution (for requirement) (within context)" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_h2-iAfimEdmugcVr9AdHjQ" variabilityType="extends">
            <SuperActivity>_0sTaYMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="validate_build" briefDescription="" id="_0rilYclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Validate Build" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nz79clgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_CfL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0sTaYMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="ongoing_tasks" briefDescription="" id="_TAVx0CliEdqjQsaFX0CJTw" orderingGuide="" suppressed="false" presentationName="Ongoing Tasks" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0pJ_xslgEdmt3adZL5Dmdw" variabilityType="extends">
            <SuperActivity>_0sTaYMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
          <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
        </Process>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ProcessComponent" name="inception_phase_iteration" briefDescription="" id="_0oSdEclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
        <Process xsi:type="uma:CapabilityPattern" name="inception_phase_iteration" briefDescription="This iteration template defines the activities (and associated roles and work  products) performed in a typical iteration in the Inception phase. Each activity  and related goals are described." id="_0o3r4slgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Inception Phase Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
          <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-6_L5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    The project starts with the assumption that the business case has been created, the <a class="elementlinkwithusertext"
    href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project
    manager</a> has been identified, the team (at least for the first iteration) has been defined, the development
    environment (including tools and infrastructure) is in place, and the process to be followed is the <a
    class="elementlinkwithusertext"
    href="./../../openup_basic/deliveryprocesses/openup_basic_process,_0uyGoMlgEdmt3adZL5Dmdw.html"
    guid="_0uyGoMlgEdmt3adZL5Dmdw">delivery process</a> suggested by OpenUP/Basic. The number and length of each Inception
    iteration will vary, depending upon the needs of the project.
</p>
<p>
    In the next sections we describe the activities performed in a typical iteration during Inception phase.
</p>
<h4>
    Initiate project
</h4>
<p>
    This activity takes place at the beginning of the first iteration, when the project starts. The goal of this activity
    is to establish the vision for the project and the project plan at a high level of granularity.
</p>
<p>
    The people in the roles involved at this time collaborate to perform this activity:
</p>
<ul>
    <li>
        <a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html"
        guid="_0VxJsMlgEdmt3adZL5Dmdw">Analyst</a> and <a class="elementlinkwithusertext"
        href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html"
        guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholder</a> roles work together to define the <a class="elementLinkWithUserText"
        href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html"
        guid="_0WVxcMlgEdmt3adZL5Dmdw">vision</a> for the project, capturing the customer needs and features for the system
        under development. Needs and features are captured to the extent required to reach agreement about the scope of the
        project.
    </li>
    <li>
        Project manager (with collaboration and agreement of team and stakeholders) proposes a high-level <a
        class="elementLinkWithUserText" href="./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html"
        guid="_0a6vcMlgEdmt3adZL5Dmdw">project plan</a> that includes the <a class="elementLinkWithUserText"
        href="./../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html"
        guid="_HNxbwMBJEdqSgKaj2SZBmg">milestones</a> for the four phases and time-boxed iterations for each phase. This
        plan and the allocation of staff to the project evolve throughout the phases to reflect the project pace, as
        necessary.
    </li>
</ul>
<h4>
    Manage iteration
</h4>
<p>
    This activity is about the ongoing work performed by the project manager and the development team to initiate and
    conduct a given iteration. It consists of status reporting, handling of exceptions and problems, identifying risks, and
    reprioritizing work, as needed.
</p>
<p>
    At the end of the iteration, the project manager conducts a&nbsp;<a class="elementLinkWithUserText"
    href="./../../openup_basic/workproducts/status_assessment,_0bA2EMlgEdmt3adZL5Dmdw.html"
    guid="_0bA2EMlgEdmt3adZL5Dmdw">status assessment</a> with the development team and stakeholders.
</p>
<p>
    If the iteration end coincides with the phase end, meeting the objectives for that phase should be used as success
    criteria for leaving the iteration. The iteration assessment should verify that the objectives&nbsp;for
    the&nbsp;Iteration phase&nbsp;have been achieved, including agreement on the key functionalities and at least one
    possible solution for the system under development, as well as a reasonable understanding of cost, schedule and risks
    associated with the project.
</p>
<p>
    Based on demonstration of key functionalities and architectural feasibility during the assessment, it becomes clear
    that either the project can proceed at the given pace or that a reprioritization of work needs to happen. As a
    consequence, the project manager may need to refine the project scope and duration.
</p>
<h4>
    Manage requirements
</h4>
<p>
    This activity is first performed in the first iteration, and repeated throughout the lifecycle.&nbsp; The goal of this
    activity is to understand and prioritize stakeholder needs, and associated requirements for the system, and capture
    these in a form that will support effective communications and collaboration between the stakeholders and development
    team.
</p>
<p>
    As the project is initiated, the&nbsp;<a class="elementlinkwithusertext"
    href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">analyst</a>
    gathers <a class="elementLinkWithUserText"
    href="./../../openup_basic/guidances/concepts/requirements,_0Wh-sMlgEdmt3adZL5Dmdw.html"
    guid="_0Wh-sMlgEdmt3adZL5Dmdw">requirements</a> from&nbsp;stakeholders and captures associated&nbsp;work items&nbsp;for
    development in the <a class="elementLinkWithUserText"
    href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html"
    guid="_rGNWsCbSEdqh1LYUOGRh2A">work items list</a>&nbsp;to facilitate prioritization and planning. As needed,
    requirements are outlined and detailed in&nbsp;<a class="elementLinkWithUserText"
    href="./../../openup_basic/workproducts/use_case,_0VGbUMlgEdmt3adZL5Dmdw.html"
    guid="_0VGbUMlgEdmt3adZL5Dmdw">use-case</a> specifications and <a class="elementLinkWithUserText"
    href="./../../openup_basic/workproducts/supporting_requirements,_BVh9cL-CEdqb7N6KIeDL8Q.html"
    guid="_BVh9cL-CEdqb7N6KIeDL8Q">supporting requirements</a>&nbsp;to the extent needed to provide information for the <a
    class="elementLinkWithUserText" href="./../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html"
    guid="_0X9iEMlgEdmt3adZL5Dmdw">architect</a> to create a prototype of the architecture and for the project manager to
    scope and plan the next iteration.
</p>
<h4>
    Determine architectural feasibility
</h4>
<p>
    This activity is initiated in the Inception phase and completed in the Elaboration phase. The goal of this activity is
    to establish an architecture for the system that provides the high-level design that maximizes&nbsp;stakeholder
    benefit, while respecting the constraints placed on the system and the development team.
</p>
<p>
    Based on requirements being captured and detailed in parallel with this activity, the architect analyzes the
    architectural constraints and leverages the available assets and technology to propose an architectural
    proof-of-concept. This early architectural prototype is used both to demonstrate the feasibility of the project, by
    using the selected candidate architecture, and to mitigate one or more architecturally significant <a
    class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/risk,_0bsLgMlgEdmt3adZL5Dmdw.html"
    guid="_0bsLgMlgEdmt3adZL5Dmdw">risks</a>.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Alternatives></Alternatives>
            <HowToStaff></HowToStaff>
            <Purpose></Purpose>
            <Scope></Scope>
            <UsageNotes></UsageNotes>
          </Presentation>
          <BreakdownElement xsi:type="uma:Activity" name="initiate_project" briefDescription="" id="_0oSdE8lgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Initiate Project" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0pWNA8lgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb-7PL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0o3r4slgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="manage_iteration" briefDescription="" id="_jLaKwP77Edm1zMZYtD3GjA" orderingGuide="" suppressed="false" presentationName="Plan and Manage Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw" variabilityType="extends">
            <SuperActivity>_0o3r4slgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="manage_requirements" briefDescription="" id="_0okw8clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Manage Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0o9ygclgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb-7_L5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0o3r4slgEdmt3adZL5Dmdw</SuperActivity>
            <Predecessor linkType="finishToFinish" id="_IWodoClhEdqjQsaFX0CJTw">_0oSdE8lgEdmt3adZL5Dmdw</Predecessor>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="determine_architectural_feasibility" briefDescription="" id="_0oreoclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Determine Architectural Feasibility" hasMultipleOccurrences="false" isOptional="true" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0sluQslgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb-8PL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0o3r4slgEdmt3adZL5Dmdw</SuperActivity>
            <Predecessor linkType="finishToFinish" id="_IW0q4ClhEdqjQsaFX0CJTw">_0oSdE8lgEdmt3adZL5Dmdw</Predecessor>
          </BreakdownElement>
          <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
          <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
        </Process>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ProcessComponent" name="transition_phase_iteration" briefDescription="" id="_0qrpwMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
        <Process xsi:type="uma:CapabilityPattern" name="transition_phase_iteration" briefDescription="This iteration template defines the activities (and associated roles and work  products) performed in a typical iteration in the Transition phase. Each activity  and the related goals are described." id="_0rQRgMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Transition Phase Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="true" IsEnactable="false" variabilityType="na">
          <OwnedRule name="" briefDescription="" id="_1J_ocEbrEduez5pdMGsX2w" orderingGuide="" suppressed="false" mainDescription=""/>
          <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-__L5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
            <MainDescription><![CDATA[<h3> Introduction&nbsp; </h3>
<p> In the Transition phase, 
  most activities happen in parallel. The main objectives are to fine-tune functionality, 
  performance, and overall quality of the beta product from 
  the end of Construction phase. </p>
<p> The activities performed in a typical iteration during 
  the&nbsp;Transition phase are described below. </p>
<h4> Manage iteration </h4>
<p> This activity is performed throughout the lifecycle. The goal of this activity 
  is to identify risks and issues early enough that they can be mitigated, to 
  establish the goals for the iteration, and to support the development team in 
  reaching these goals. </p>
<p> Similar to other phases, this is an activity led by the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project 
  manager</a> (in collaboration with the team) to launch the iteration, to allocate 
  work, to track status, and to handle risks and issues. It’s unlikely that risks 
  of high impact will happen during the Transition, but it is recommended that 
  the project manager and team identify any potential issues&nbsp;while delivering 
  the product to the end users. </p>
<p>If this is the last iteration of the project, the main goal is to achieve final 
  acceptance of the system. At the end of the iteration, results are assessed 
  against phase objectives<em>,</em> and <a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholders'</a> 
  concurrence on the project objectives is obtained. The team conducts a retrospective 
  review to capture lessons learned and make improvements to the process for subsequent 
  <strong> </strong>projects. The project is then closed.</p>
<h4>Ongoing tasks </h4>
<p> Submission of change requests during the Transition phase <strong></strong>works&nbsp;differently 
  than in other phases. New requirements will rarely be identified at late stages 
  of the software development lifecycle in a way they can be implemented in the 
  current release. If there are enhancement requests, though, they can be captured 
  in the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">work 
  items list</a> and allocated to a future release, when a new software development 
  lifecycle begins. In that case, requirements will be outlined and detailed accordingly. 
</p>
<p> However, defects are typically dealt with during the Transition phase,&nbsp;thus 
  a stable release can be accepted by the user community. If there is general 
  agreement from stakeholders, correction of low-priority defects can be postponed 
  to subsequent evolutionary releases. </p>
<h4> Develop solution for requirement within context</h4>
<p> This activity is repeated multiple times, in parallel, for each development 
  task planned for that iteration. The main goal of this activity is an executable 
  system that provides the incremental quality and functionality for the specified 
  requirements within the specified context. </p>
<p> During the Transition phase, most requirements will have been already implemented 
  and validated, which is the focus of the previous phase. Nevertheless, there 
  may be a few low-priority requirements that could be accommodated in the release 
  being developed. However, enhancement requests and defects found in previous 
  iterations may need to be allocated to <a class="elementlinkwithusertext" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">developers</a>. 
</p>
<h4> Validate build </h4>
<p> This activity is repeated throughout the lifecycle. The main goal of this 
  activity is to validate the current increment of the system against the requirements 
  allocated to it. </p>
<p> This activity happens in parallel with development of the 
  solutions for enhancement requests and defects 
  (and possibly remaining requirements), to make sure that 
  a stable release can be presented to the user community. Users can be involved 
  in performing <a class="elementLinkWithUserText" href="./../../openup_basic/capabilitypatterns/test,_0nz79clgEdmt3adZL5Dmdw.html" guid="_0nz79clgEdmt3adZL5Dmdw">tests</a> 
  to accept the release. </p>
<h4>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Alternatives></Alternatives>
            <HowToStaff></HowToStaff>
            <Purpose></Purpose>
            <Scope></Scope>
            <UsageNotes></UsageNotes>
          </Presentation>
          <BreakdownElement xsi:type="uma:Activity" name="manage_iteration" briefDescription="" id="_0q33AclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Plan and Manage Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_APL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0rQRgMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="develop_requirement_within_context" briefDescription="" id="_0DMlYPinEdmugcVr9AdHjQ" orderingGuide="" suppressed="false" presentationName="Develop Solution (for requirement) (within context)" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_h2-iAfimEdmugcVr9AdHjQ" variabilityType="extends">
            <SuperActivity>_0rQRgMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="validate_build" briefDescription="" id="_0qrpwslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Validate Build" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nz79clgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_AfL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0rQRgMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="ongoing_tasks" briefDescription="" id="_0qxwYclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Ongoing Tasks" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0pJ_xslgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="_mtb_AvL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_0rQRgMlgEdmt3adZL5Dmdw</SuperActivity>
          </BreakdownElement>
          <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
          <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
        </Process>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ProcessComponent" name="construction_phase_iteration" briefDescription="" id="_y-etQOtQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
        <Process xsi:type="uma:CapabilityPattern" name="construction_phase_iteration" briefDescription="This iteration template defines the activities (and associated roles and work products) performed in a typical iteration in the Construction phase. Each activity and its goals is described." id="_y-3IrutQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false" presentationName="Construction Phase Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="true" IsEnactable="false" variabilityType="na">
          <OwnedRule name="" briefDescription="" id="_y-3Ir-tQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false" mainDescription=""/>
          <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="-239OBD2wagT2qp8fuPWcHQ" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
            <MainDescription><![CDATA[<h3>
    Introduction
</h3>
Iterations in Construction phase have a work breakdown structure (WBS) similar to iterations in the Elaboration phase, with
activities happening in parallel. There is a different&nbsp;emphasis on how activities&nbsp;address the phase objectives,
though. 
<p>
    The <a href="./../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html" guid="_0XAf0MlgEdmt3adZL5Dmdw">architecture</a> is expected to be stable when this phase starts, allowing the remaining
    requirements to be implemented on top of it. Another advantage of validating the architecture and eliminating as many
    risks as possible during Elaboration is to provide more predictability in Construction, which allows the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/project_manager,_0a0o0MlgEdmt3adZL5Dmdw.html" guid="_0a0o0MlgEdmt3adZL5Dmdw">project manager</a> to focus on team efficiency and cost reduction.
</p>
<p>
    Functionality is continuously implemented, tested, and integrated, resulting in <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">builds</a>
    that are more and more complete and stable. A beta or prerelease may be deployed to a sampling of the intended audience
    at the end of Construction. Delivery of the actual release is the main focus of the next phase.
</p>
<p>
    The activities performed in a typical iteration during&nbsp;Construction phase are described after the following
    introductions to each activity.
</p>
<h4>
    Manage iteration
</h4>
<p>
    This activity is performed throughout the project lifecycle. The goal of this activity is to identify risks and issues
    early enough to mitigate them, to establish the goals for the iteration, and to support the development team in
    reaching these goals.
</p>
<p>
    Similarly to other phases, the project manager (supported by the team) launches the iteration, allocates work, tracks
    status, and handles issues and risks. Although the high-priority and architecturally significant risks were mitigated
    during Elaboration, new risks may appear during Construction, such as not having the right amount of resources to
    obtain the desired degree of parallel&nbsp;development.
</p>
<p>
    The prioritization of work for a given iteration (existing change requests and possibly a few remaining requirements)
    takes place. project manager,&nbsp;<a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholders</a>, and the remaining team members agree on what is supposed to be
    developed during that iteration.
</p>
<p>
    At the end of the iteration, the team performs an iteration assessment. The goal is to conduct a retrospective review
    of the iteration that is ending. As part of this assessment, the objectives for the Construction phase are expected to
    be demonstrated by the beta-quality release of the software, thus supporting the possibility of transitioning the
    software to its end users.
</p>
<h4>
    Manage requirements
</h4>
<p>
    This activity is repeated throughout the lifecycle. The goal of this activity is to understand and prioritize
    stakeholder needs and associated requirements for the system, as well as to capture these in a form that will support
    effective communication and collaboration between the stakeholders and the development team.
</p>
<p>
    During Inception, most requirements are captured. The high-risk requirements are detailed, implemented, and validated
    (through a working architecture) during Elaboration.
</p>
<p>
    During the Construction phase, requirements management demands less time from the <a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">analyst</a>.
    There still may be low-risk requirements to be detailed or refined, but in a way that can be assigned to <a class="elementlinkwithusertext" href="./../../openup_basic/roles/developer,_0YDosMlgEdmt3adZL5Dmdw.html" guid="_0YDosMlgEdmt3adZL5Dmdw">developers</a>.
</p>
<p>
    <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/test_case,_0ZS-0MlgEdmt3adZL5Dmdw.html" guid="_0ZS-0MlgEdmt3adZL5Dmdw">Test cases</a> describe which&nbsp;requirements are being tested&nbsp;in that iteration.
</p>
<h4>
    Develop solution
</h4>
<p>
    This activity is repeated multiple times, in parallel, for each development task planned for that iteration. The main
    goal of this activity is an executable system that provides the incremental quality and functionality for the specified
    requirements, within the specified context.
</p>
<p>
    The architecture &nbsp;was proposed and a baseline established at the end of Elaboration. Critical requirements were
    expected to be implemented, tested, and integrated as part of the baseline architecture. As the remaining requirements
    are implemented during Construction, the Architect identifies commonalities among solutions being developed by the
    various developers and leverages reuse where possible. Some degree of refactoring of the architecture may be needed to
    accommodate putting common pieces together.
</p>
<p>
    A pattern similar to the Elaboration phase happens during Construction when it comes to breaking down requirements into
    development tasks and assigning each requirement within a context to a developer. Requirements at this stage are mostly
    of medium-to-low level of risk, but usually they represent the largest slice from the total amount of requirements to
    be implemented in a project. Thus, it is expected that this activity is repeated, or instantiated, multiple times (once
    per requirement within context),&nbsp;thus allowing&nbsp;parallel development. <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/guidelines/continuous_integration,_i8bUEL6cEdqti4GwqTkbsQ.html" guid="_i8bUEL6cEdqti4GwqTkbsQ">Continuous integration</a> allows functionality to be added to the code base constantly,
    which helps the achievement of more and more complete <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/build,_0YuXEMlgEdmt3adZL5Dmdw.html" guid="_0YuXEMlgEdmt3adZL5Dmdw">builds</a>
    of the software.
</p>
<h4>
    Validate build
</h4>
<p>
    This activity is repeated throughout the project lifecycle. The main goal of this activity is to validate the current
    increment of the system against the requirements allocated to it.
</p>
<p>
    Similarly to Elaboration, this activity happens in parallel with the <a class="elementLinkWithUserText" href="./../../openup_basic/capabilitypatterns/develop_solution,_h2-iAfimEdmugcVr9AdHjQ.html" guid="_h2-iAfimEdmugcVr9AdHjQ">develop solution</a> activity. The intent is to validate that a stable beta release is
    achieved and that users can perform acceptance tests.
</p>
<h4>
    Ongoing tasks
</h4>
<p>
    Similarly to any other phase, <a class="elementlinkwithusertext" href="./../../openup_basic/roles/any_role,_0dsWoMlgEdmt3adZL5Dmdw.html" guid="_0dsWoMlgEdmt3adZL5Dmdw">any role</a> on
    the team can submit <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/guidelines/change_requests,_fnZj0NVXEdqy9sbRhejO5Q.html" guid="_fnZj0NVXEdqy9sbRhejO5Q">change requests</a>. The software being developed is achieving beta quality by this
    point; therefore, defects of high priority&nbsp;are generally&nbsp;addressed during Construction iterations&nbsp;and
    Transition iterations. Enhancement requests can be planned for either subsequent Transition iterations or a next
    release of the product.
</p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
            <Alternatives></Alternatives>
            <HowToStaff></HowToStaff>
            <Purpose></Purpose>
            <Scope></Scope>
            <UsageNotes></UsageNotes>
          </Presentation>
          <BreakdownElement xsi:type="uma:Activity" name="manage_iteration" briefDescription="" id="_y-k0bOtQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false" presentationName="Plan and Manage Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nJNkslgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="-OC3td1csl7lqV15vimYOaw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_y-3IrutQEdqc1LGhiSPqRg</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="manage_requirements" briefDescription="Detail a set of requirements (one or more use cases, scenarios, or supporting requirements)." id="_eE5nEUbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Manage Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="-Xfm5yDx3AVScrP1ZdLT-Sw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes></UsageNotes>
            </Presentation>
            <SuperActivity>_y-3IrutQEdqc1LGhiSPqRg</SuperActivity>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_eFeO0EbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_eG0SoEbpEduLBN1xMBngqw</ResponsibleFor>
              <ResponsibleFor>_eGoFZEbpEduLBN1xMBngqw</ResponsibleFor>
              <ResponsibleFor>_eFeO00bpEduLBN1xMBngqw</ResponsibleFor>
              <ResponsibleFor>_eFeO0kbpEduLBN1xMBngqw</ResponsibleFor>
              <ResponsibleFor>_eFeO0UbpEduLBN1xMBngqw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="use_case" briefDescription="" id="_eFeO0UbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Use Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="vision" briefDescription="" id="_eFeO0kbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="uc_model" briefDescription="" id="_eFeO00bpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Use-Case Model" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="find_and_outline_requirements" briefDescription="" id="_eGoFYkbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Find and Outline Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="false">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <Task>_P9cMUPV_EdmdHa9MmVPgqQ</Task>
              <PerformedPrimarilyBy>_eFeO0EbpEduLBN1xMBngqw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_eGuMB0bpEduLBN1xMBngqw</AdditionallyPerformedBy>
              <MandatoryInput>_eG0SoEbpEduLBN1xMBngqw</MandatoryInput>
              <MandatoryInput>_eFeO0kbpEduLBN1xMBngqw</MandatoryInput>
              <Output>_eGoFY0bpEduLBN1xMBngqw</Output>
              <Output>_eGoFZEbpEduLBN1xMBngqw</Output>
              <Output>_eFeO0UbpEduLBN1xMBngqw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="work_items_list" briefDescription="" id="_eGoFY0bpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Work Items List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="supporting_requirements" briefDescription="" id="_eGoFZEbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="detail_requirements" briefDescription="" id="_eGuMBUbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Detail Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="false">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <Task>_0e1mIMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_eFeO0EbpEduLBN1xMBngqw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_eGuMB0bpEduLBN1xMBngqw</AdditionallyPerformedBy>
              <MandatoryInput>_eGoFZEbpEduLBN1xMBngqw</MandatoryInput>
              <MandatoryInput>_eFeO0kbpEduLBN1xMBngqw</MandatoryInput>
              <MandatoryInput>_eG0SoEbpEduLBN1xMBngqw</MandatoryInput>
              <MandatoryInput>_eFeO0UbpEduLBN1xMBngqw</MandatoryInput>
              <MandatoryInput>_eFeO00bpEduLBN1xMBngqw</MandatoryInput>
              <Output>_eGoFZEbpEduLBN1xMBngqw</Output>
              <Output>_eFeO0UbpEduLBN1xMBngqw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_eGuMB0bpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="glossary" briefDescription="" id="_eG0SoEbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Glossary" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="create_test_case" briefDescription="" id="_eHAf4EbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Create Test Cases" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="false">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <Task>_0iwc0clgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_eHAf4UbpEduLBN1xMBngqw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_eFeO0EbpEduLBN1xMBngqw</AdditionallyPerformedBy>
              <MandatoryInput>_eFeO0UbpEduLBN1xMBngqw</MandatoryInput>
              <OptionalInput>_eHAf4kbpEduLBN1xMBngqw</OptionalInput>
              <Output>_eHAf4kbpEduLBN1xMBngqw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_eHAf4UbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_eHAf4kbpEduLBN1xMBngqw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_case" briefDescription="" id="_eHAf4kbpEduLBN1xMBngqw" orderingGuide="" suppressed="false" presentationName="Test Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_eE5nEUbpEduLBN1xMBngqw</SuperActivity>
              <WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="develop_solution" briefDescription="Design, implement, test and integrate the solution for a requirement within a given context." id="_MWFjoU9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Develop Solution (for requirement) (within context)" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <OwnedRule name="diagram" briefDescription="" id="_MWFjok9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" mainDescription="ad_image_uri=|publish_ad_image=false|add_image_uri=|publish_add_image=false|wpd_image_uri=|publish_wpd_image=false"/>
            <Presentation xsi:type="uma:ProcessDescription" name="develop_sr_within_scope,_h2-iAfimEdmugcVr9AdHjQ" briefDescription="" id="-q-X9OHGNRjU5gIyWVibSGQ" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Project managers use this Capability Pattern&nbsp;as a way to&nbsp;perform a goal-based planning and management. Work
    is assigned to developers and work progress is tracked&nbsp;based on the goals to be achieved using the designed,
    unit-tested, and&nbsp;integrated&nbsp;source code.
</p>
<h4>
    Context of what is being developed
</h4>
<p>
    A context can be specified when a requirement is assigned to be developed, thus specifying how broadly a requirement is
    to be developed in a iteration. Development&nbsp;may focus&nbsp;on a layer (such as the user interface, business logic,
    or&nbsp;database access),&nbsp;on a component, and so on.
</p>
<p>
    Whether a context is specified or not, the developer's responsibility is to create a design and implementation for that
    requirement, then to&nbsp;write and run unit tests against the implementation to make sure the&nbsp;implementation
    works as designed, both as a unit&nbsp;and&nbsp;integrated into the code base.
</p>
<h4>
    Overview of workflow
</h4>
<p>
    To accommodate major changes or&nbsp;major functionality to be developed, architecture may have to be refined. Small
    changes and functionality may reflect changes on the design only, with no need to refine the architecture. For trivial
    changes and functionality to be developed, only the source code may be affected.
</p>
<p>
    In any case, there is no strict sequence for how writing code and creating or running &nbsp;developer tests should
    happen, because they can happen in parallel.&nbsp;You may choose to create and run developer tests before the actual
    code is created or the reverse sequence.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose><![CDATA[<ul>
    <li>
        For developers: To create a solution for the requirement assigned to them
    </li>
    <li>
        For project managers: To have a goal-based way of assigning work and tracking project status
    </li>
</ul>]]></Purpose>
              <Scope></Scope>
              <UsageNotes><![CDATA[<p>
    This Capability Pattern occurs multiple times during each iteration. Usually, there is one instance for each
    requirement planned for that iteration. When instantiated in a project plan, the pattern becomes a development task to
    be assigned to a developer, and it should be renamed to include the actual requirement name.&nbsp;Optionally, the word
    <strong>Solution</strong> may be suppressed, then you can instantiate the pattern this way:
</p>
<blockquote>
    <p align="left">
        Develop <font face="Courier New, Courier, mono">requirement_name</font> (within <font         face="Courier New, Courier, mono">context_name</font> context)
    </p>
</blockquote>
<p>
    If&nbsp;a context&nbsp;is specified, there will be one instance of this pattern for each requirement&nbsp;for each
    context.
</p>
<blockquote>
    <p>
        <strong>Example</strong>
    </p>
    <ol>
        <li>
            Develop <font face="Courier New, Courier, mono">scenario 1</font> (within <font             face="Courier New, Courier, mono">user interface</font> context)
        </li>
        <li>
            Develop <font face="Courier New, Courier, mono">scenario 1</font> (within <font             face="Courier New, Courier, mono">business logic and DB access</font> context)
        </li>
        <li>
            Develop <font face="Courier New, Courier, mono">scenario 2</font>
        </li>
        <li>
            Develop <font face="Courier New, Courier, mono">supplemental requirement 1</font>
        </li>
    </ol>
</blockquote>
<p>
    Note that there are four instances of this pattern in the preceding example:
</p>
<ul>
    <li>
        The first two are related to the same requirement (scenario 1) but within two different contexts
    </li>
    <li>
        The last two are related to different requirements, with no context specified.
    </li>
</ul>]]></UsageNotes>
            </Presentation>
            <SuperActivity>_y-3IrutQEdqc1LGhiSPqRg</SuperActivity>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="developer" briefDescription="" id="_MWFjo09HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Developer" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_MWFjp09HEdudU75l2xOQTw</ResponsibleFor>
              <ResponsibleFor>_MWFjpk9HEdudU75l2xOQTw</ResponsibleFor>
              <ResponsibleFor>_MWFjpU9HEdudU75l2xOQTw</ResponsibleFor>
              <ResponsibleFor>_MWFjpE9HEdudU75l2xOQTw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="design" briefDescription="" id="_MWFjpE9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Design" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="implementation" briefDescription="" id="_MWFjpU9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Implementation" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0YoQcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="developer_test" briefDescription="" id="_MWFjpk9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Developer Test" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0YuXEclgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="build" briefDescription="" id="_MWFjp09HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Build" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="develop_arch" briefDescription="" id="_MWLqSU9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Develop the Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="false">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_MWLqR09HEdudU75l2xOQTw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_MWFjo09HEdudU75l2xOQTw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkE_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkU_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkk_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_MWFjpE9HEdudU75l2xOQTw</MandatoryInput>
              <MandatoryInput>_MWLqQk9HEdudU75l2xOQTw</MandatoryInput>
              <Output>_MWFjpE9HEdudU75l2xOQTw</Output>
              <Output>_MWLqQk9HEdudU75l2xOQTw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="design_solution" briefDescription="" id="_MWLqQE9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Design the Solution" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Predecessor linkType="finishToFinish" id="_MWLqS09HEdudU75l2xOQTw">_MWLqSU9HEdudU75l2xOQTw</Predecessor>
              <Task>_0fshwMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_MWFjo09HEdudU75l2xOQTw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_MWLqR09HEdudU75l2xOQTw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkE_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkU_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkk_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_MWLqQU9HEdudU75l2xOQTw</MandatoryInput>
              <MandatoryInput>_MWLqQk9HEdudU75l2xOQTw</MandatoryInput>
              <MandatoryInput>_MWLqSE9HEdudU75l2xOQTw</MandatoryInput>
              <OptionalInput>_MWFjpE9HEdudU75l2xOQTw</OptionalInput>
              <Output>_MWFjpE9HEdudU75l2xOQTw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="supporting_requirements" briefDescription="" id="_MWLqQU9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="architecture" briefDescription="" id="_MWLqQk9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="implement_solution" briefDescription="" id="_MWLqRE9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Implement the Solution" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Task>_0hyzgMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_MWFjo09HEdudU75l2xOQTw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_-uRRkU_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_-uRRkk_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_MWFjpE9HEdudU75l2xOQTw</MandatoryInput>
              <OptionalInput>_MWFjpU9HEdudU75l2xOQTw</OptionalInput>
              <OptionalInput>_MWLqQU9HEdudU75l2xOQTw</OptionalInput>
              <OptionalInput>_MWLqSE9HEdudU75l2xOQTw</OptionalInput>
              <Output>_MWFjpU9HEdudU75l2xOQTw</Output>
              <Output>_MWFjp09HEdudU75l2xOQTw</Output>
              <Output>_MWLqQU9HEdudU75l2xOQTw</Output>
              <Output>_MWLqSE9HEdudU75l2xOQTw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="impl_developer_tests" briefDescription="" id="_MWLqQ09HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Implement Developer Tests" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Task>_0iL1EMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_MWFjo09HEdudU75l2xOQTw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_-uRRkk_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_MWFjpU9HEdudU75l2xOQTw</MandatoryInput>
              <OptionalInput>_MWFjpE9HEdudU75l2xOQTw</OptionalInput>
              <OptionalInput>_MWLqTU9HEdudU75l2xOQTw</OptionalInput>
              <Output>_MWFjpk9HEdudU75l2xOQTw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="run_developer_tests" briefDescription="" id="_MWLqRU9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Run Developer Tests" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Predecessor linkType="finishToFinish" id="_MWLqTk9HEdudU75l2xOQTw">_MWLqQ09HEdudU75l2xOQTw</Predecessor>
              <Task>_0iYCUMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_MWFjo09HEdudU75l2xOQTw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_-uRRkk_fEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_MWFjpk9HEdudU75l2xOQTw</MandatoryInput>
              <MandatoryInput>_MWFjpU9HEdudU75l2xOQTw</MandatoryInput>
              <Output>_MWLqRk9HEdudU75l2xOQTw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_log" briefDescription="" id="_MWLqRk9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Test Log" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_MWLqR09HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_MWLqQk9HEdudU75l2xOQTw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="use_case" briefDescription="" id="_MWLqSE9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Use Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_script" briefDescription="" id="_MWLqTU9HEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Test Script" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_-uRRkE_fEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_MWLqSE9HEdudU75l2xOQTw</ResponsibleFor>
              <ResponsibleFor>_MWLqQU9HEdudU75l2xOQTw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_-uRRkU_fEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_-uRRkk_fEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_MWFjoU9HEdudU75l2xOQTw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_MWLqTU9HEdudU75l2xOQTw</ResponsibleFor>
              <ResponsibleFor>_MWLqRk9HEdudU75l2xOQTw</ResponsibleFor>
            </BreakdownElement>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="validate_build" briefDescription="" id="_y-3IretQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false" presentationName="Validate Build" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0nz79clgEdmt3adZL5Dmdw" variabilityType="extends">
            <Presentation xsi:type="uma:ActivityDescription" name="" briefDescription="" id="-C3RmtvThtego5U5cOk8uCA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
            </Presentation>
            <SuperActivity>_y-3IrutQEdqc1LGhiSPqRg</SuperActivity>
          </BreakdownElement>
          <BreakdownElement xsi:type="uma:Activity" name="ongoing_tasks" briefDescription="" id="_y_PjTOtQEdqc1LGhiSPqRg" orderingGuide="" suppressed="false" presentationName="Ongoing Tasks" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0pJ_xslgEdmt3adZL5Dmdw" variabilityType="extends">
            <SuperActivity>_y-3IrutQEdqc1LGhiSPqRg</SuperActivity>
          </BreakdownElement>
          <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
          <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
        </Process>
      </MethodPackage>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ProcessPackage" name="Sub-processes" briefDescription="" id="_mpl9kDbmEduMn613sF6-Uw" orderingGuide="" suppressed="false" global="false">
      <MethodPackage xsi:type="uma:ProcessPackage" name="Management" briefDescription="" id="_JEyxADboEduMn613sF6-Uw" orderingGuide="" suppressed="false" global="false">
        <MethodPackage xsi:type="uma:ProcessComponent" name="initiate_project" briefDescription="" id="_0pWNAslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="initiate_project" briefDescription="This capability pattern bundles tasks required to define the vision and create a project plan." id="_0pWNA8lgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Initiate Project" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-9fL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription><![CDATA[<p>
    This activity takes place at the beginning of the first iteration, when the project starts. The goal of this activity
    is to establish the vision for the project and the project plan at a high level of granularity.
</p>
<p>
    The people in the roles involved at this time collaborate to perform this activity:
</p>
<ul>
    <li>
        <a class="elementlinkwithusertext" href="./../../openup_basic/roles/analyst,_0VxJsMlgEdmt3adZL5Dmdw.html" guid="_0VxJsMlgEdmt3adZL5Dmdw">Analyst</a> and <a class="elementlinkwithusertext" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">stakeholder</a> roles work together to define the <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/vision,_0WVxcMlgEdmt3adZL5Dmdw.html" guid="_0WVxcMlgEdmt3adZL5Dmdw">vision</a> for the project, capturing the customer needs and features for the system
        under development. Needs and features are captured to the extent required to reach agreement about the scope of the
        project.
    </li>
    <li>
        Project manager (with collaboration and agreement of team and stakeholders) proposes a high-level <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/project_plan,_0a6vcMlgEdmt3adZL5Dmdw.html" guid="_0a6vcMlgEdmt3adZL5Dmdw">project plan</a> that includes the <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/milestones,_HNxbwMBJEdqSgKaj2SZBmg.html" guid="_HNxbwMBJEdqSgKaj2SZBmg">milestones</a> for the four phases and time-boxed iterations for each phase. This
        plan and the allocation of staff to the project evolve throughout the phases&nbsp;and defines the pace of the
        project.
    </li>
</ul>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_VNpT0FY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_PFnTkOB7EdqnKu908IEluw</ResponsibleFor>
              <ResponsibleFor>_VNvacFY5EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="vision" briefDescription="" id="_VNvacFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="define_vision" briefDescription="" id="_79bQ4DoCEdu0yYZ2bsCXog" orderingGuide="" suppressed="false" presentationName="Define Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0fOAoMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_VNpT0FY5EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_J8-00MAZEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
              <OptionalInput>_VNvacFY5EdqI9sTOt2pjHw</OptionalInput>
              <Output>_VNvacFY5EdqI9sTOt2pjHw</Output>
              <Output>_PFnTkOB7EdqnKu908IEluw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="plan_the_project" briefDescription="" id="_XKDWIFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Plan the Project" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0lC70MlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_XKVqAFY5EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_S8dNQMBFEdqSgKaj2SZBmg</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_VNpT0FY5EdqI9sTOt2pjHw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_S8dNQsBFEdqSgKaj2SZBmg</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_J8-00MAZEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
              <MandatoryInput>_VNvacFY5EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_4Y1wML3JEdqfrv3k16plXw</MandatoryInput>
              <OptionalInput>_XKbwoFY5EdqI9sTOt2pjHw</OptionalInput>
              <OptionalInput>_hhnXEDeqEduCsbgJNeFsSw</OptionalInput>
              <Output>_XKbwoFY5EdqI9sTOt2pjHw</Output>
              <Output>_4Y1wML3JEdqfrv3k16plXw</Output>
              <Output>_hhnXEDeqEduCsbgJNeFsSw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="project_manager" briefDescription="" id="_XKVqAFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Project Manager" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_hhnXEDeqEduCsbgJNeFsSw</ResponsibleFor>
              <ResponsibleFor>_4Y1wML3JEdqfrv3k16plXw</ResponsibleFor>
              <ResponsibleFor>_XKbwoFY5EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="project_plan" briefDescription="" id="_XKbwoFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Project Plan" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0a6vcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="work_items_list" briefDescription="" id="_4Y1wML3JEdqfrv3k16plXw" orderingGuide="" suppressed="false" presentationName="Work Items List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_J8-00MAZEdqX-s4mWhkyqQ" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_S8dNQMBFEdqSgKaj2SZBmg" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_S8dNQsBFEdqSgKaj2SZBmg" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="glossary" briefDescription="" id="_PFnTkOB7EdqnKu908IEluw" orderingGuide="" suppressed="false" presentationName="Glossary" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="risk_list" briefDescription="" id="_hhnXEDeqEduCsbgJNeFsSw" orderingGuide="" suppressed="false" presentationName="Risk List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0pWNA8lgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_Ckay8Cc_EduIsqH1Q6ZuqA</WorkProduct>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ProcessComponent" name="manage_iteration" briefDescription="" id="_0nJNkclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="manage_iteration" briefDescription="Initiate the iteration and assign work to team members. Monitor and communicate project status to external stakeholders. Identify and handle exceptions and problems." id="_0nJNkslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Plan and Manage Iteration" hasMultipleOccurrences="true" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-6PL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="project_manager" briefDescription="" id="_mZDP4FY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Project Manager" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_TPsdoUmSEduO0bs89Khm8Q</ResponsibleFor>
              <ResponsibleFor>_DUCuoDk-EduFTqg5hiiQIw</ResponsibleFor>
              <ResponsibleFor>_oNnk0FY5EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_mZt-QFY5EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_mZVjwFY5EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="iteration_plan" briefDescription="" id="_mZVjwFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Iteration Plan" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0aQBEslgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="project_plan" briefDescription="" id="_mZt-QFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Project Plan" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0a6vcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="plan_iteration" briefDescription="" id="_SZICAEmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false" presentationName="Plan Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0keUEMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_mZDP4FY5EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_DT8oATk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oADk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oAjk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oAzk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oBTk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <MandatoryInput>_mZt-QFY5EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_oNnk0FY5EdqI9sTOt2pjHw</MandatoryInput>
              <OptionalInput>_SZOIoEmSEduO0bs89Khm8Q</OptionalInput>
              <OptionalInput>_SZOIoUmSEduO0bs89Khm8Q</OptionalInput>
              <Output>_mZVjwFY5EdqI9sTOt2pjHw</Output>
              <Output>_oNnk0FY5EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="manage_iteration" briefDescription="" id="_oNJDsFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Manage Iteration" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_8S2aICbYEdqh1LYUOGRh2A</Task>
              <PerformedPrimarilyBy>_mZDP4FY5EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_DT8oADk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oATk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oAjk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oAzk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oBDk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oBTk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <MandatoryInput>_mZVjwFY5EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_mZt-QFY5EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_oNnk0FY5EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_DUCuoDk-EduFTqg5hiiQIw</MandatoryInput>
              <Output>_mZVjwFY5EdqI9sTOt2pjHw</Output>
              <Output>_mZt-QFY5EdqI9sTOt2pjHw</Output>
              <Output>_oNnk0FY5EdqI9sTOt2pjHw</Output>
              <Output>_DUCuoDk-EduFTqg5hiiQIw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="work_items_list" briefDescription="" id="_oNnk0FY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Work Items List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_DT8oADk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_SZOIoUmSEduO0bs89Khm8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_DT8oATk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_SZOIoEmSEduO0bs89Khm8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_DT8oAjk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="developer" briefDescription="" id="_DT8oAzk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Developer" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="any_role" briefDescription="" id="_DT8oBDk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Any Role" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0dsWoMlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_DT8oBTk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="risk_list" briefDescription="" id="_DUCuoDk-EduFTqg5hiiQIw" orderingGuide="" suppressed="false" presentationName="Risk List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_Ckay8Cc_EduIsqH1Q6ZuqA</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="architecture" briefDescription="" id="_SZOIoEmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false" presentationName="Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="vision" briefDescription="" id="_SZOIoUmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false" presentationName="Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="assess_results" briefDescription="" id="_TPsdoEmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false" presentationName="Assess Results" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0l53cMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_mZDP4FY5EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_DT8oBTk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_DT8oBDk-EduFTqg5hiiQIw</AdditionallyPerformedBy>
              <MandatoryInput>_mZVjwFY5EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_mZt-QFY5EdqI9sTOt2pjHw</MandatoryInput>
              <OptionalInput>_TPsdoUmSEduO0bs89Khm8Q</OptionalInput>
              <OptionalInput>_SZOIoUmSEduO0bs89Khm8Q</OptionalInput>
              <Output>_TPsdoUmSEduO0bs89Khm8Q</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="status_assessment" briefDescription="" id="_TPsdoUmSEduO0bs89Khm8Q" orderingGuide="" suppressed="false" presentationName="Status Assessment" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nJNkslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0bA2EMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ProcessPackage" name="Intent" briefDescription="" id="_TFSlkDboEduMn613sF6-Uw" orderingGuide="" suppressed="false" global="false">
        <MethodPackage xsi:type="uma:ProcessComponent" name="ongoing_tasks" briefDescription="" id="_0pJ_xclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="ongoing_tasks" briefDescription="Perform ongoing tasks that are not necessarily part of project schedule." id="_0pJ_xslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Ongoing Tasks" hasMultipleOccurrences="true" isOptional="false" isPlanned="false" prefix="" isEventDriven="true" isOngoing="true" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-9PL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription><![CDATA[<p>
    This activity&nbsp;includes a single task, <a class="elementLink" href="./../../openup_basic/tasks/request_change,_0mwzEclgEdmt3adZL5Dmdw.html" guid="_0mwzEclgEdmt3adZL5Dmdw">Request Change</a>. This task&nbsp;may occur anytime during the lifecycle in response to an observed defect, a desired
    enhancement, or a change request. It is not planned,&nbsp;which means it does&nbsp;not appear as a scheduled activity
    on the project plan, iteration plan or work items list. Nevertheless, it is a critical activity that must be performed
    to ensure project success in an environment that is not static.
</p>
<p>
    <a class="elementLink" href="./../../openup_basic/roles/any_role,_0dsWoMlgEdmt3adZL5Dmdw.html" guid="_0dsWoMlgEdmt3adZL5Dmdw">Any Role</a>&nbsp;may perform this task, however the most common sources of&nbsp;<a class="elementLink" href="./../../openup_basic/guidances/concepts/change_requests,_6jdvECb3Edqh1LYUOGRh2A.html" guid="_6jdvECb3Edqh1LYUOGRh2A">Change Requests</a> are&nbsp;<a class="elementLink" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholder</a>s (enhancement requests and change requests) and&nbsp;<a class="elementLink" href="./../../openup_basic/roles/tester,_0ZM4MclgEdmt3adZL5Dmdw.html" guid="_0ZM4MclgEdmt3adZL5Dmdw">Tester</a>s (defect reports).
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="any_role" briefDescription="" id="_4x060FY1EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Any Role" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0pJ_xslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0dsWoMlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="request_change" briefDescription="" id="_5LsMUFY1EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Request Change" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0pJ_xslgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0mwzEclgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_4x060FY1EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <OptionalInput>_5M7icFY1EdqI9sTOt2pjHw</OptionalInput>
              <Output>_5M7icFY1EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="work_items_list" briefDescription="" id="_5M7icFY1EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Work Items List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0pJ_xslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ProcessComponent" name="manage_requirements" briefDescription="" id="_0o9ygMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="manage_requirements" briefDescription="Detail a set of requirements (one or more use cases, scenarios or supporting requirements)." id="_0o9ygclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Manage Requirements" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-8_L5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription><![CDATA[<p>
    This activity describes the tasks performed to&nbsp;gather, specify, analyze and&nbsp;validate&nbsp;a subset of
    system's&nbsp;requirements&nbsp;prior to&nbsp;implementation and verification. This does not imply that all
    requirements are detailed prior to commencing implementation. Rather, this activity is performed throughout the
    lifecycle with <a class="elementLink" href="./../../openup_basic/roles/stakeholder,_dTa6gMAYEdqX-s4mWhkyqQ.html" guid="_dTa6gMAYEdqX-s4mWhkyqQ">Stakeholder</a>s and the entire development team collaborating to ensure that a clear,
    consistent, correct, verifiable, and feasible&nbsp;set of requirements&nbsp;is available, as needed, to drive
    implementation and verification.
</p>
<p>
    During Inception, the focus is on&nbsp;gaining agreement on&nbsp;the problem to be solved, gathering stakeholder needs
    and capturing high-level system features&nbsp;(see activity <a class="elementLink" href="./../../openup_basic/capabilitypatterns/initiate_project,_0pWNA8lgEdmt3adZL5Dmdw.html" guid="_0pWNA8lgEdmt3adZL5Dmdw">Initiate Project</a>).
</p>
<p>
    During Elaboration, the focus shifts to defining the solution. This consists of&nbsp;finding those requirements that
    have most value to stakeholders, that are particularly challenging or risky, or that are architecturally significant
    (See <a class="elementLinkWithType" href="./../../openup_basic/tasks/find_and_outline_requirements,_P9cMUPV_EdmdHa9MmVPgqQ.html" guid="_P9cMUPV_EdmdHa9MmVPgqQ">Task: Find and Outline Requirements</a>).&nbsp;Requirements&nbsp;that
    are&nbsp;prioritized, via the <a class="elementLink" href="./../../openup_basic/workproducts/work_items_list,_rGNWsCbSEdqh1LYUOGRh2A.html" guid="_rGNWsCbSEdqh1LYUOGRh2A">Work Items List</a>,&nbsp;for implementation in the early iterations are then described
    in sufficient detail to validate the development teams understanding of the requirements, to ensure concurrence with
    stakeholders, and to permit software development to begin (see <a class="elementLinkWithType" href="./../../openup_basic/tasks/detail_requirements,_0e1mIMlgEdmt3adZL5Dmdw.html" guid="_0e1mIMlgEdmt3adZL5Dmdw">Task: Detail Requirements</a>). For each of these requirements, associated test cases are defined to ensure that the
    requirements are verifiable and to provide the guidance needed for verification and validation (see <a class="elementLinkWithType" href="./../../openup_basic/tasks/create_test_case,_0iwc0clgEdmt3adZL5Dmdw.html" guid="_0iwc0clgEdmt3adZL5Dmdw">Task: Create Test Cases</a>).
</p>
<p>
    During Construction, the focus shifts to refining the system definition<em>.</em> This consists of detailing the
    remaining requirements and associated test cases as needed to drive implementation and verification, and managing
    requirements change (see&nbsp;activity <a class="elementLink" href="./../../openup_basic/capabilitypatterns/ongoing_tasks,_0pJ_xslgEdmt3adZL5Dmdw.html" guid="_0pJ_xslgEdmt3adZL5Dmdw">Ongoing Tasks</a>).
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_wGSUwFY6EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_86w-oOB4EdqnKu908IEluw</ResponsibleFor>
              <ResponsibleFor>_Y5DAMb-EEdqb7N6KIeDL8Q</ResponsibleFor>
              <ResponsibleFor>_wG28gFY6EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_wGw14FY6EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="use_case" briefDescription="" id="_wGeiAFY6EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Use Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="vision" briefDescription="" id="_wGw14FY6EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="uc_model" briefDescription="" id="_wG28gFY6EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Use-Case Model" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="find_and_outline_requirements" briefDescription="" id="_Y42y8L-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Find and Outline Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_P9cMUPV_EdmdHa9MmVPgqQ</Task>
              <PerformedPrimarilyBy>_wGSUwFY6EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_2tHGoMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_F6WiEMEQEduTGJ8i4u8TMw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_F6WiEcEQEduTGJ8i4u8TMw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_kF8tYDbsEduMn613sF6-Uw</AdditionallyPerformedBy>
              <MandatoryInput>_86w-oOB4EdqnKu908IEluw</MandatoryInput>
              <MandatoryInput>_wGw14FY6EdqI9sTOt2pjHw</MandatoryInput>
              <Output>_Y5DAML-EEdqb7N6KIeDL8Q</Output>
              <Output>_Y5DAMb-EEdqb7N6KIeDL8Q</Output>
              <Output>_86w-oOB4EdqnKu908IEluw</Output>
              <Output>_wGeiAFY6EdqI9sTOt2pjHw</Output>
              <Output>_wG28gFY6EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="work_items_list" briefDescription="" id="_Y5DAML-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Work Items List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="supporting_requirements" briefDescription="" id="_Y5DAMb-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="detail_requirements" briefDescription="" id="_ZRfVYL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Detail Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0e1mIMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_wGSUwFY6EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_2tHGoMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_F6WiEMEQEduTGJ8i4u8TMw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_F6WiEcEQEduTGJ8i4u8TMw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_kF8tYDbsEduMn613sF6-Uw</AdditionallyPerformedBy>
              <MandatoryInput>_Y5DAMb-EEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_wGw14FY6EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_86w-oOB4EdqnKu908IEluw</MandatoryInput>
              <MandatoryInput>_wGeiAFY6EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_wG28gFY6EdqI9sTOt2pjHw</MandatoryInput>
              <Output>_Y5DAMb-EEdqb7N6KIeDL8Q</Output>
              <Output>_86w-oOB4EdqnKu908IEluw</Output>
              <Output>_wGeiAFY6EdqI9sTOt2pjHw</Output>
              <Output>_wG28gFY6EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_2tHGoMAYEdqX-s4mWhkyqQ" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="glossary" briefDescription="" id="_86w-oOB4EdqnKu908IEluw" orderingGuide="" suppressed="false" presentationName="Glossary" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="create_test_cases" briefDescription="" id="_kFwgIDbsEduMn613sF6-Uw" orderingGuide="" suppressed="false" presentationName="Create Test Cases" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0iwc0clgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_kF8tYDbsEduMn613sF6-Uw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_wGSUwFY6EdqI9sTOt2pjHw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_2tHGoMAYEdqX-s4mWhkyqQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_F6WiEcEQEduTGJ8i4u8TMw</AdditionallyPerformedBy>
              <MandatoryInput>_wGeiAFY6EdqI9sTOt2pjHw</MandatoryInput>
              <OptionalInput>_kF8tYTbsEduMn613sF6-Uw</OptionalInput>
              <OptionalInput>_Y5DAMb-EEdqb7N6KIeDL8Q</OptionalInput>
              <Output>_kF8tYTbsEduMn613sF6-Uw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_kF8tYDbsEduMn613sF6-Uw" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_kF8tYTbsEduMn613sF6-Uw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_case" briefDescription="" id="_kF8tYTbsEduMn613sF6-Uw" orderingGuide="" suppressed="false" presentationName="Test Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_F6WiEMEQEduTGJ8i4u8TMw" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="developer" briefDescription="" id="_F6WiEcEQEduTGJ8i4u8TMw" orderingGuide="" suppressed="false" presentationName="Developer" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0o9ygclgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
      </MethodPackage>
      <MethodPackage xsi:type="uma:ProcessPackage" name="Solution" briefDescription="" id="_XzhPQDboEduMn613sF6-Uw" orderingGuide="" suppressed="false" global="false">
        <MethodPackage xsi:type="uma:ProcessComponent" name="define_architecture" briefDescription="" id="_0sx7iclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="define_architecture" briefDescription="This activity completes the architecture for an iteration." id="_0sx7islgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Define the Architecture" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb_DvL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription><![CDATA[<p>
    This activity is repeated in each iteration in the Elaboration phase. The main&nbsp;goal of this activity is&nbsp;to
    propose an <a class="elementLinkWithUserText" href="./../../openup_basic/workproducts/architecture,_0XAf0MlgEdmt3adZL5Dmdw.html" guid="_0XAf0MlgEdmt3adZL5Dmdw">architecture</a> that addresses the requirements with high architectural risks, thus
    providing a solid, yet resilient, foundation on which to build the system functionality.
</p>
<p>
    The <a class="elementLinkWithUserText" href="./../../openup_basic/roles/architect,_0X9iEMlgEdmt3adZL5Dmdw.html" guid="_0X9iEMlgEdmt3adZL5Dmdw">architect</a> analyzes the architectural constraints, identifies available assets to
    build the system, defines how the system will be structured, and identifies the initial abstractions and mechanisms
    that must be provided by the architecture.
</p>
<p>
    Throughout all of the iterations, the architect:
</p>
<ul>
    <li>
        Identifies commonalities between different requirements to leverage reuse
    </li>
    <li>
        Defines strategies for achieving requirements related to quality
    </li>
    <li>
        Captures and communicates architectural decisions
    </li>
</ul>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff><![CDATA[<p>
    These activities are best carried out by a small team staffed by cross-functional team members. Issues that are
    typically architecturally significant include usability, performance, scaling, process and thread synchronization, and
    distribution. The team should also include members with domain experience who can identify key abstractions. The team
    should also have experience with model organization and layering. The team will need to be able to pull all these
    disparate threads into a cohesive, coherent (albeit preliminary) architecture.
</p>
<p>
    Because the focus of the architecture effort is shifting toward implementation issues, greater attention needs to be
    paid to specific technology issues. This will force the architecture team to shift members or expand to include people
    with distribution and deployment expertise (if those issues are architecturally significant). In order to understand
    the potential impact of the structure on the implementation model on the ease of integration, expertise in the software
    build management process is useful to have.
</p>
<p>
    At the same time, it is essential that the architecture team not be composed of a large extended team. A strategy for
    countering this trend is to retain a relatively small core team with a satellite group of extended team members that
    are brought in as "consultants" on key issues<b>.</b> This structure also works well for smaller projects where
    specific expertise may be borrowed or contracted from other organizations; they can be brought in as specific issues
    need to be addressed.
</p>]]></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes><![CDATA[<p>
    The work is best done in several sessions, perhaps performed over a few days (or weeks and months for very large
    systems). The initial focus will be on the identifying <a class="elementLinkWithType" href="./../../openup_basic/guidances/concepts/design_mechanism,_w2ACwA4LEduibvKwrGxWxA.html" guid="_w2ACwA4LEduibvKwrGxWxA">Concept: Design Mechanism</a>s&nbsp;and&nbsp;specifiying the&nbsp;important&nbsp;design
    elements.&nbsp;Care should also be taken to incorporate existing design elements to ensure that new&nbsp;design do not
    duplicate existing functionality.
</p>
<p>
    As the design emerges, concurrency and distribution issues are introduced. As these issues are considered, changes to
    design elements may be required to split behavior across processes, threads or nodes.
</p>
<p>
    As the individual models are refined to incorporate the architectural decisions, the results are documented in the
    Architecture description. The resulting architecture is reviewed.
</p>]]></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_d5-nQFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_d6Q7IVY4EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="architecture" briefDescription="" id="_d6Q7IVY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="analyze_arch_reqs" briefDescription="" id="_ukbHgL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Analyze the Architectural Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0f-1oMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_d5-nQFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_ezOKIE9DEdudU75l2xOQTw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_ezOKIU9DEdudU75l2xOQTw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_HTBBME_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_HTBBMU_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_r1QxIDeqEduCsbgJNeFsSw</AdditionallyPerformedBy>
              <MandatoryInput>_VZk0YxeDEduXJrZWmtC8tg</MandatoryInput>
              <MandatoryInput>_VZk0ZBeDEduXJrZWmtC8tg</MandatoryInput>
              <MandatoryInput>_r1Xe0DeqEduCsbgJNeFsSw</MandatoryInput>
              <OptionalInput>_uknUwb-EEdqb7N6KIeDL8Q</OptionalInput>
              <OptionalInput>_d6Q7IVY4EdqI9sTOt2pjHw</OptionalInput>
              <OptionalInput>_ezOKIk9DEdudU75l2xOQTw</OptionalInput>
              <OptionalInput>_uknUwL-EEdqb7N6KIeDL8Q</OptionalInput>
              <Output>_d6Q7IVY4EdqI9sTOt2pjHw</Output>
              <Output>_uknUwb-EEdqb7N6KIeDL8Q</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="supporting_requirements" briefDescription="" id="_uknUwL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="design" briefDescription="" id="_uknUwb-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Design" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="develop_arch" briefDescription="" id="_vAmGIL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Develop the Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_d5-nQFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_ezOKIE9DEdudU75l2xOQTw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_HTBBMU_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_r1QxIDeqEduCsbgJNeFsSw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_ezOKIU9DEdudU75l2xOQTw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_HTBBME_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_uknUwb-EEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_d6Q7IVY4EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_uknUwL-EEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_ezOKIk9DEdudU75l2xOQTw</MandatoryInput>
              <MandatoryInput>_VZk0ZBeDEduXJrZWmtC8tg</MandatoryInput>
              <MandatoryInput>_m_gdUMWrEduoutjwLchi0g</MandatoryInput>
              <Output>_uknUwb-EEdqb7N6KIeDL8Q</Output>
              <Output>_d6Q7IVY4EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="glossary" briefDescription="" id="_VZk0YxeDEduXJrZWmtC8tg" orderingGuide="" suppressed="false" presentationName="Glossary" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="vision" briefDescription="" id="_VZk0ZBeDEduXJrZWmtC8tg" orderingGuide="" suppressed="false" presentationName="Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="project_manager" briefDescription="" id="_r1QxIDeqEduCsbgJNeFsSw" orderingGuide="" suppressed="false" presentationName="Project Manager" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="uc_model" briefDescription="" id="_r1Xe0DeqEduCsbgJNeFsSw" orderingGuide="" suppressed="false" presentationName="Use-Case Model" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_ezOKIE9DEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_r1Xe0DeqEduCsbgJNeFsSw</ResponsibleFor>
              <ResponsibleFor>_VZk0ZBeDEduXJrZWmtC8tg</ResponsibleFor>
              <ResponsibleFor>_VZk0YxeDEduXJrZWmtC8tg</ResponsibleFor>
              <ResponsibleFor>_uknUwL-EEdqb7N6KIeDL8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_ezOKIU9DEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="use_case" briefDescription="" id="_ezOKIk9DEdudU75l2xOQTw" orderingGuide="" suppressed="false" presentationName="Use Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_HTBBME_dEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="developer" briefDescription="" id="_HTBBMU_dEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Developer" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_m_gdUMWrEduoutjwLchi0g</ResponsibleFor>
              <ResponsibleFor>_uknUwb-EEdqb7N6KIeDL8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="build" briefDescription="" id="_m_gdUMWrEduoutjwLchi0g" orderingGuide="" suppressed="false" presentationName="Build" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sx7islgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ProcessComponent" name="determine_architectural_feasibility" briefDescription="" id="_0sluQclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="determine_architectural_feasibility" briefDescription="Confirm that the project is feasible by constructing an architectural proof-of-concept." id="_0sluQslgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Determine Architectural Feasibility" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb_DfL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff><![CDATA[<p>
    As with <a class="elementLinkWithType" href="./../../openup_basic/capabilitypatterns/define_architecture,_0rcewclgEdmt3adZL5Dmdw.html" guid="_0rcewclgEdmt3adZL5Dmdw">Activity: Define the Architecture</a>, this activity is best carried out by a small team
    staffed by cross-functional team members. Issues that are typically architecturally significant include performance,
    scaling, process and thread synchronization, and distribution. The team should also include members with domain
    experience who can identify key abstractions. The team should also have experience with model organization and
    layering. From these inputs, the team will need to be able to synthesize a model, or even a prototype, of a solution.
</p>]]></HowToStaff>
              <Purpose></Purpose>
              <Scope></Scope>
              <UsageNotes><![CDATA[<p>
    The major effort occurs early in the Inception phase; thereafter, the system should be assessed at&nbsp;every iteration
    to ensure that the design is still on track with the architecture (see <a class="elementLinkWithType" href="./../../openup_basic/capabilitypatterns/manage_iteration,_0nJNkslgEdmt3adZL5Dmdw.html" guid="_0nJNkslgEdmt3adZL5Dmdw">Capability Pattern: Plan and Manage Iteration</a>).
</p>]]></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_qQROgFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_qQppAFY4EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="design" briefDescription="" id="_qQjiYFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Design" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="architecture" briefDescription="" id="_qQppAFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="developer" briefDescription="" id="_qoEDcFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Developer" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_NXkrwsWpEduoutjwLchi0g</ResponsibleFor>
              <ResponsibleFor>_qQjiYFY4EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="analyze_arch_reqs" briefDescription="" id="_lqOzsL-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Analyze the Architectural Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0f-1oMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_qQROgFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_PJJ3AE_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_PJJ3AU_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_PJJ3Ak_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_qoEDcFY4EdqI9sTOt2pjHw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_PJJ3A0_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_g2XAwheDEduXJrZWmtC8tg</MandatoryInput>
              <MandatoryInput>_mKmV0L-EEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_HTpzcDSLEdursMWmT1aZyw</MandatoryInput>
              <OptionalInput>_qQjiYFY4EdqI9sTOt2pjHw</OptionalInput>
              <OptionalInput>_qQppAFY4EdqI9sTOt2pjHw</OptionalInput>
              <OptionalInput>_NXkrwcWpEduoutjwLchi0g</OptionalInput>
              <OptionalInput>_lqbA8L-EEdqb7N6KIeDL8Q</OptionalInput>
              <Output>_qQppAFY4EdqI9sTOt2pjHw</Output>
              <Output>_qQjiYFY4EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="supporting_requirements" briefDescription="" id="_lqbA8L-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="vision" briefDescription="" id="_mKmV0L-EEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Vision" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0WVxcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="glossary" briefDescription="" id="_g2XAwheDEduXJrZWmtC8tg" orderingGuide="" suppressed="false" presentationName="Glossary" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_Wn7HcNcEEdqz_d2XWoVt6Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="uc_model" briefDescription="" id="_HTpzcDSLEdursMWmT1aZyw" orderingGuide="" suppressed="false" presentationName="Use-Case Model" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_W2SgEDR5EdutE_HNDTJk5Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_PJJ3AE_dEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_HTpzcDSLEdursMWmT1aZyw</ResponsibleFor>
              <ResponsibleFor>_g2XAwheDEduXJrZWmtC8tg</ResponsibleFor>
              <ResponsibleFor>_mKmV0L-EEdqb7N6KIeDL8Q</ResponsibleFor>
              <ResponsibleFor>_lqbA8L-EEdqb7N6KIeDL8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_PJJ3AU_dEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_PJJ3Ak_dEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="project_manager" briefDescription="" id="_PJJ3A0_dEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Project Manager" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0a0o0MlgEdmt3adZL5Dmdw</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="develop_arch" briefDescription="" id="_NXkrwMWpEduoutjwLchi0g" orderingGuide="" suppressed="false" presentationName="Develop the Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0gRJgMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_qQROgFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_PJJ3AE_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_qoEDcFY4EdqI9sTOt2pjHw</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_PJJ3A0_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_PJJ3AU_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_PJJ3Ak_dEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_qQjiYFY4EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_qQppAFY4EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_lqbA8L-EEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_NXkrwcWpEduoutjwLchi0g</MandatoryInput>
              <MandatoryInput>_mKmV0L-EEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_NXkrwsWpEduoutjwLchi0g</MandatoryInput>
              <Output>_qQjiYFY4EdqI9sTOt2pjHw</Output>
              <Output>_qQppAFY4EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="use_case" briefDescription="" id="_NXkrwcWpEduoutjwLchi0g" orderingGuide="" suppressed="false" presentationName="Use Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="build" briefDescription="" id="_NXkrwsWpEduoutjwLchi0g" orderingGuide="" suppressed="false" presentationName="Build" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0sluQslgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ProcessComponent" name="develop_solution" briefDescription="" id="_h2-iAPimEdmugcVr9AdHjQ" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="develop_solution" briefDescription="Design, implement, test and integrate the solution for a requirement within a given context." id="_h2-iAfimEdmugcVr9AdHjQ" orderingGuide="" suppressed="false" presentationName="Develop Solution (for requirement) (within context)" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <OwnedRule name="diagram" briefDescription="" id="_Prih4DR_EduGhYMJfagftQ" orderingGuide="" suppressed="false" mainDescription="ad_image_uri=|publish_ad_image=false|add_image_uri=|publish_add_image=false|wpd_image_uri=|publish_wpd_image=false"/>
            <Presentation xsi:type="uma:ProcessDescription" name="develop_sr_within_scope,_h2-iAfimEdmugcVr9AdHjQ" briefDescription="" id="_h6zSEPimEdmugcVr9AdHjQ" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription><![CDATA[<h3>
    Introduction
</h3>
<p>
    Project managers use this Capability Pattern&nbsp;as a way to&nbsp;perform a goal-based planning and management. Work
    is assigned to developers and work progress is tracked&nbsp;based on the goals to be achieved using the designed,
    unit-tested, and&nbsp;integrated&nbsp;source code.
</p>
<h4>
    Context of what is being developed
</h4>
<p>
    A context can be specified when a requirement is assigned to be developed, thus specifying how broadly a requirement is
    to be developed in a iteration. Development&nbsp;may focus&nbsp;on a layer (such as the user interface, business logic,
    or&nbsp;database access),&nbsp;on a component, and so on.
</p>
<p>
    Whether a context is specified or not, the developer's responsibility is to create a design and implementation for that
    requirement, then to&nbsp;write and run unit tests against the implementation to make sure the&nbsp;implementation
    works as designed, both as a unit&nbsp;and&nbsp;integrated into the code base.
</p>
<h4>
    Overview of workflow
</h4>
<p>
    To accommodate major changes or&nbsp;major functionality to be developed, architecture may have to be refined. Small
    changes and functionality may reflect changes on the design only, with no need to refine the architecture. For trivial
    changes and functionality to be developed, only the source code may be affected.
</p>
<p>
    In any case, there is no strict sequence for how writing code and creating or running &nbsp;developer tests should
    happen, because they can happen in parallel.&nbsp;You may choose to create developer tests and run them before the actual
    code is created or the reverse sequence.
</p>]]></MainDescription>
              <KeyConsiderations></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff></HowToStaff>
              <Purpose><![CDATA[<ul>
    <li>
        For developers: To create a solution for the requirement assigned to them
    </li>
    <li>
        For project managers: To have a goal-based way of assigning work and tracking project status
    </li>
</ul>]]></Purpose>
              <Scope></Scope>
              <UsageNotes><![CDATA[<p>
    This Capability Pattern occurs multiple times during each iteration. Usually, there is one instance for each
    requirement planned for that iteration. When instantiated in a project plan, the pattern becomes a development task to
    be assigned to a developer, and it should be renamed to include the actual requirement name.&nbsp;Optionally, the word
    <strong>Solution</strong> may be suppressed, then you can instantiate the pattern this way:
</p>
<blockquote>
    <p align="left">
        Develop requirement_name (within context_name context)
    </p>
</blockquote>
<p>
    If&nbsp;a context&nbsp;is specified, there will be one instance of this pattern for each requirement&nbsp;for each
    context.
</p>
<blockquote>
    <p>
        <strong>Example</strong>
    </p>
    <ol>
        <li>
            Develop scenario 1 (within user interface context)
        </li>
        <li>
            Develop scenario 1 (within business logic and DB access context)
        </li>
        <li>
            Develop scenario 2
        </li>
        <li>
            Develop supplemental requirement 1
        </li>
    </ol>
</blockquote>
<p>
    Note that there are four instances of this pattern in the preceding example:
</p>
<ul>
    <li>
        The first two are related to the same requirement (scenario 1) but within two different contexts
    </li>
    <li>
        The last two are related to different requirements, with no context specified.
    </li>
</ul>]]></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="developer" briefDescription="" id="_9kUSEFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Developer" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Role>_0YDosMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_AdllQFY5EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_-Y3UcFY4EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_-YrHMFY4EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_9k_AcFY4EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="design" briefDescription="" id="_9k_AcFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Design" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0WuL8slgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="implementation" briefDescription="" id="_-YrHMFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Implementation" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0YoQcMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="developer_test" briefDescription="" id="_-Y3UcFY4EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Developer Test" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0YuXEclgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="build" briefDescription="" id="_AdllQFY5EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Build" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="design_solution" briefDescription="" id="_cL1KIL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Design the Solution" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Predecessor linkType="finishToFinish" id="_TiPK8DLwEdueZPye-FaNgA"/>
              <Task>_0fshwMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_9kUSEFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_rQ9xIMjkEdqIm8AJUZUQYg</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_KAnAYE9PEdumneEH4I4Yqg</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_BmbHQE_cEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_BmbHQU_cEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_cMHeAL-FEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_cMHeAb-FEdqb7N6KIeDL8Q</MandatoryInput>
              <MandatoryInput>_QN4E4ALlEduHjPEP_YPH-g</MandatoryInput>
              <OptionalInput>_9k_AcFY4EdqI9sTOt2pjHw</OptionalInput>
              <Output>_9k_AcFY4EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="supporting_requirements" briefDescription="" id="_cMHeAL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Supporting Requirements" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_BVh9cL-CEdqb7N6KIeDL8Q</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="architecture" briefDescription="" id="_cMHeAb-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Architecture" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0XAf0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="implement_solution" briefDescription="" id="_dAoEIL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Implement the Solution" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Task>_0hyzgMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_9kUSEFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_BmbHQE_cEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <AdditionallyPerformedBy>_BmbHQU_cEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_9k_AcFY4EdqI9sTOt2pjHw</MandatoryInput>
              <OptionalInput>_-YrHMFY4EdqI9sTOt2pjHw</OptionalInput>
              <OptionalInput>_cMHeAL-FEdqb7N6KIeDL8Q</OptionalInput>
              <OptionalInput>_QN4E4ALlEduHjPEP_YPH-g</OptionalInput>
              <Output>_-YrHMFY4EdqI9sTOt2pjHw</Output>
              <Output>_AdllQFY5EdqI9sTOt2pjHw</Output>
              <Output>_cMHeAL-FEdqb7N6KIeDL8Q</Output>
              <Output>_QN4E4ALlEduHjPEP_YPH-g</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="impl_developer_tests" briefDescription="" id="_cnzUcL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Implement Developer Tests" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Predecessor linkType="finishToFinish" id="__26sYMmIEduwrYVlQ9zp3w">_cL1KIL-FEdqb7N6KIeDL8Q</Predecessor>
              <Task>_0iL1EMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_9kUSEFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_BmbHQU_cEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_-YrHMFY4EdqI9sTOt2pjHw</MandatoryInput>
              <OptionalInput>_9k_AcFY4EdqI9sTOt2pjHw</OptionalInput>
              <Output>_-Y3UcFY4EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="run_developer_tests" briefDescription="" id="_d4GesL-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Run Developer Tests" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Predecessor linkType="finishToFinish" id="_EjyMUE9EEdudU75l2xOQTw">_cnzUcL-FEdqb7N6KIeDL8Q</Predecessor>
              <Predecessor linkType="finishToFinish" id="_c84V8MmJEduwrYVlQ9zp3w">_dAoEIL-FEdqb7N6KIeDL8Q</Predecessor>
              <Task>_0iYCUMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_9kUSEFY4EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <AdditionallyPerformedBy>_BmbHQU_cEduE1dJ2XtzzkQ</AdditionallyPerformedBy>
              <MandatoryInput>_-Y3UcFY4EdqI9sTOt2pjHw</MandatoryInput>
              <MandatoryInput>_-YrHMFY4EdqI9sTOt2pjHw</MandatoryInput>
              <Output>_d4k_0L-FEdqb7N6KIeDL8Q</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_log" briefDescription="" id="_d4k_0L-FEdqb7N6KIeDL8Q" orderingGuide="" suppressed="false" presentationName="Test Log" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="architect" briefDescription="" id="_rQ9xIMjkEdqIm8AJUZUQYg" orderingGuide="" suppressed="false" presentationName="Architect" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Role>_0X9iEMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_cMHeAb-FEdqb7N6KIeDL8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="use_case" briefDescription="" id="_QN4E4ALlEduHjPEP_YPH-g" orderingGuide="" suppressed="false" presentationName="Use Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0VGbUMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_script" briefDescription="" id="_RfwvEDOvEduqsLmIADMQ9g" orderingGuide="" suppressed="false" presentationName="Test Script" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="analyst" briefDescription="" id="_KAnAYE9PEdumneEH4I4Yqg" orderingGuide="" suppressed="false" presentationName="Analyst" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Role>_0VxJsMlgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_cMHeAL-FEdqb7N6KIeDL8Q</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="stakeholder" briefDescription="" id="_BmbHQE_cEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Stakeholder" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Role>_dTa6gMAYEdqX-s4mWhkyqQ</Role>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_BmbHQU_cEduE1dJ2XtzzkQ" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_h2-iAfimEdmugcVr9AdHjQ</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_RfwvEDOvEduqsLmIADMQ9g</ResponsibleFor>
              <ResponsibleFor>_d4k_0L-FEdqb7N6KIeDL8Q</ResponsibleFor>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
        <MethodPackage xsi:type="uma:ProcessComponent" name="test" briefDescription="" id="_0nz79MlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
          <Process xsi:type="uma:CapabilityPattern" name="test" briefDescription="Test and evaluate the requirements developed, from system perspective." id="_0nz79clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="Test" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
            <Presentation xsi:type="uma:ProcessDescription" name="" briefDescription="" id="_mtb-6vL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0" usageGuidance="" externalId="">
              <MainDescription></MainDescription>
              <KeyConsiderations><![CDATA[<p>
    &nbsp;
</p>]]></KeyConsiderations>
              <Alternatives></Alternatives>
              <HowToStaff><![CDATA[<p>
    The staff performing this activity must be integrated into the team.
</p>]]></HowToStaff>
              <Purpose><![CDATA[To create and run tests that validate that the system conforms to the intent.]]></Purpose>
              <Scope></Scope>
              <UsageNotes><![CDATA[<p>
    Testing must occur throughout the process and <span     style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA">
    throughout&nbsp;each iteration.&nbsp;It is not some final inspection to be done at the end. As requirements are de<span     style="FONT-SIZE: 10pt; FONT-FAMILY: Arial; mso-fareast-font-family: Batang; mso-bidi-font-family: Arial; mso-ansi-language: EN-US; mso-fareast-language: KO; mso-bidi-language: AR-SA">
    veloped and integrated into the build they should be tested as soon as possible.</span></span>
</p>]]></UsageNotes>
            </Presentation>
            <BreakdownElement xsi:type="uma:RoleDescriptor" name="tester" briefDescription="" id="_a6qBUFY2EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Tester" hasMultipleOccurrences="true" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <Role>_0ZM4MclgEdmt3adZL5Dmdw</Role>
              <ResponsibleFor>_oSQYEL3SEdqfrv3k16plXw</ResponsibleFor>
              <ResponsibleFor>_a_F1YFY2EdqI9sTOt2pjHw</ResponsibleFor>
              <ResponsibleFor>_a8fNUFY2EdqI9sTOt2pjHw</ResponsibleFor>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_case" briefDescription="" id="_a8fNUFY2EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Test Case" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0ZS-0MlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_script" briefDescription="" id="_a_F1YFY2EdqI9sTOt2pjHw" orderingGuide="" suppressed="false" presentationName="Test Script" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0ZfMEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="implement_tests" briefDescription="" id="_nykLZL3SEdqfrv3k16plXw" orderingGuide="" suppressed="false" presentationName="Implement Tests" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0jO98MlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_a6qBUFY2EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <MandatoryInput>_a8fNUFY2EdqI9sTOt2pjHw</MandatoryInput>
              <OptionalInput>_a_F1YFY2EdqI9sTOt2pjHw</OptionalInput>
              <OptionalInput>_ny2fQL3SEdqfrv3k16plXw</OptionalInput>
              <Output>_a_F1YFY2EdqI9sTOt2pjHw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="build" briefDescription="" id="_ny2fQL3SEdqfrv3k16plXw" orderingGuide="" suppressed="false" presentationName="Build" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0YuXEMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:TaskDescriptor" name="run_tests" briefDescription="" id="_oR39mb3SEdqfrv3k16plXw" orderingGuide="" suppressed="false" presentationName="Run Tests" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" isSynchronizedWithSource="true">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <Task>_0jVEkMlgEdmt3adZL5Dmdw</Task>
              <PerformedPrimarilyBy>_a6qBUFY2EdqI9sTOt2pjHw</PerformedPrimarilyBy>
              <MandatoryInput>_ny2fQL3SEdqfrv3k16plXw</MandatoryInput>
              <MandatoryInput>_a_F1YFY2EdqI9sTOt2pjHw</MandatoryInput>
              <Output>_oSQYEL3SEdqfrv3k16plXw</Output>
              <Output>_os33gL3SEdqfrv3k16plXw</Output>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="test_log" briefDescription="" id="_oSQYEL3SEdqfrv3k16plXw" orderingGuide="" suppressed="false" presentationName="Test Log" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_0ZlSsMlgEdmt3adZL5Dmdw</WorkProduct>
            </BreakdownElement>
            <BreakdownElement xsi:type="uma:WorkProductDescriptor" name="work_items_list" briefDescription="" id="_os33gL3SEdqfrv3k16plXw" orderingGuide="" suppressed="false" presentationName="Work Items List" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isSynchronizedWithSource="true" activityEntryState="" activityExitState="">
              <SuperActivity>_0nz79clgEdmt3adZL5Dmdw</SuperActivity>
              <WorkProduct>_rGNWsCbSEdqh1LYUOGRh2A</WorkProduct>
            </BreakdownElement>
            <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
            <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
          </Process>
        </MethodPackage>
      </MethodPackage>
    </MethodPackage>
    <MethodPackage xsi:type="uma:ProcessComponent" name="openup_basic_process" briefDescription="" id="_0uHYQclgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" global="false" authors="" changeDescription="" version="">
      <Process xsi:type="uma:DeliveryProcess" name="openup_basic_process" briefDescription="This delivery process defines a software development process that supports the  core principles of OpenUP. It is designed to support small co-located teams, consisting  of 3 to 6 team members, working on a project that will last between 3 and 6 months." id="_0uyGoMlgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" presentationName="OpenUP/Basic Lifecycle" hasMultipleOccurrences="false" isOptional="false" isPlanned="false" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityType="na">
        <OwnedRule name="diagram" briefDescription="" id="_u_X-YOETEdqMu-vDNOTdSg" orderingGuide="" suppressed="false" mainDescription="ad_image_uri=_Pt_fYBjoEduxUfEVCtmW4Q|publish_ad_image=true|add_image_uri=|publish_add_image=false|wpd_image_uri=|publish_wpd_image=false"/>
        <Presentation xsi:type="uma:DeliveryProcessDescription" name="" briefDescription="" id="_mtb-4PL5Edm6Nvont3uinw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="" externalId="">
          <MainDescription><![CDATA[<p> OpenUP/Basic is an iterative process with <a class="elementlinkwithusertext" href="./../../openup_basic/guidances/concepts/core_principle_evolve,_GXiogMvoEdqukPpotm3DYg.html" guid="_GXiogMvoEdqukPpotm3DYg">iterations</a>&nbsp;distributed 
  throughout four <a class="elementLinkWithUserText" href="./../../base_concepts/guidances/concepts/phase,__7xOEC7aEdqHMdmRzC0-2g.html" guid="__7xOEC7aEdqHMdmRzC0-2g">phases</a>: 
  <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/inception_phase,_0hmKgBOMEduCNqgZdt_OaA.html" guid="_0hmKgBOMEduCNqgZdt_OaA">Inception</a>, 
  <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/elaboration_phase,_2plxwBOMEduCNqgZdt_OaA.html" guid="_2plxwBOMEduCNqgZdt_OaA">Elaboration</a>, 
  <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/construction_phase,_48EKsBOMEduCNqgZdt_OaA.html" guid="_48EKsBOMEduCNqgZdt_OaA">Construction</a>, 
  and <a class="elementLinkWithUserText" href="./../../openup_basic/guidances/concepts/transition_phase,__ca5UBOMEduCNqgZdt_OaA.html" guid="__ca5UBOMEduCNqgZdt_OaA">Transition</a>. 
</p>
<p> Each phase may have as many iterations as needed, depending on degree of novelty 
  of the business domain, technology being used, architectural complexity, and 
  project size, to name a few factors. </p>
<p> To offer a quick start for teams to plan their iterations,&nbsp;OpenUP/Basic 
  provides&nbsp;work breakdown structure (WBS) templates for each iteration and 
  a WBS template for an end-to-end process. </p>
<p> Iterations may have variable lengths, depending on project characteristics. 
  One-month iterations are typically recommended, because 
  this timeframe provides: </p>
<ul>
  <li> A reasonable amount of time for projects to 
    deliver meaningful increments in functionality. </li>
  <li> Early and frequent customer feedback. </li>
  <li> Timely management of risks and issues during the course of the project. 
  </li>
</ul>
<p> OpenUP/Basic is intended<strong> </strong>to 
  offer process guidance to small projects: </p>
<ul>
    <li>
        
    <div class="O" style="mso-margin-left-alt: 216; mso-char-wrap: 1; mso-kinsoku-overflow: 1" v:shape="_x0000_s1026"> 
      3&nbsp;to&nbsp;6 people on the team </div>
    </li>
    <li>
        
    <div class="O" style="mso-margin-left-alt: 216; mso-char-wrap: 1; mso-kinsoku-overflow: 1" v:shape="_x0000_s1026"> 
      3&nbsp;to&nbsp;6 months of work</div>
    </li>
</ul>]]></MainDescription>
          <KeyConsiderations></KeyConsiderations>
          <Alternatives></Alternatives>
          <HowToStaff></HowToStaff>
          <Purpose><![CDATA[<p>
    The purposes of this delivery process are to:
</p>
<ul>
    <li>
        Offer process guidance for small-scale projects
    </li>
    <li>
        Allow project managers to create project plans based on the proposed work breakdown structures
    </li>
    <li>
        Allow project managers to track status based on goals
    </li>
    <li>
        Allow&nbsp;team members&nbsp;to understand how to perform their work to achieve project goals
    </li>
    <li>
        Provide a complete, end-to-end delivery process that serves as an example for defining alternative delivery
        processes
    </li>
</ul>]]></Purpose>
          <Scope></Scope>
          <UsageNotes></UsageNotes>
          <Scale></Scale>
          <ProjectCharacteristics></ProjectCharacteristics>
          <RiskLevel></RiskLevel>
          <EstimatingTechnique></EstimatingTechnique>
          <ProjectMemberExpertise></ProjectMemberExpertise>
          <TypeOfContract></TypeOfContract>
        </Presentation>
        <BreakdownElement xsi:type="uma:Activity" name="inception_phase_iteration" briefDescription="" id="_xupMvxOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Inception Iteration [1..n]" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false" IsEnactable="false" variabilityBasedOnElement="_0o3r4slgEdmt3adZL5Dmdw" variabilityType="extends">
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Concept>_0hmKgBOMEduCNqgZdt_OaA</Concept>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Milestone" name="lifecycle_objectives" briefDescription="The end of the Inception phase is the first major project milestone, the Lifecycle  Objectives Milestone." id="_y1uwgBOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Lifecycle Objectives Milestone" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false">
          <Presentation xsi:type="uma:BreakdownElementDescription" name="lifecycle_objectives,_mRwHoMA9EdqSgKaj2SZBmg" briefDescription="" id="-qk_QXyoSxOb2C-boCISB5g" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
            <MainDescription><![CDATA[<p> The Lifecycle Objectives Milestone is the first major project milestone. During 
  the iteration<a
    class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html"
    guid="_0l53cMlgEdmt3adZL5Dmdw"> assessment</a>, the following evaluation criteria 
  should be met <a
    class="elementlinkwithusertext"
    href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>: </p>
<ul>
    <li>
        Stakeholder concurrence on
    </li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            
      <li> scope definition</li>
      <li> initial cost and schedule estimates</li>
      <li>definitions and priorities for initial set of requirements</li>
            <li>
                risks identified and mitigation strategies proposed.
            </li>
        </ul>
    </li>
</ul>
<p><br />
  Note:<strong> </strong></p>
<p>The project may be aborted or reconsidered if it fails to reach this milestone.<br />]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_8Kfm0BOSEduCNqgZdt_OaA">_xupMvxOKEduCNqgZdt_OaA</Predecessor>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Activity" name="elaboration_phase_iteration" briefDescription="" id="_0Spa4BOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Elaboration Iteration [1..n]" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="true" IsEnactable="false" variabilityBasedOnElement="_0sTaYMlgEdmt3adZL5Dmdw" variabilityType="extends">
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_8bf3QBOSEduCNqgZdt_OaA">_y1uwgBOKEduCNqgZdt_OaA</Predecessor>
          <Concept>_2plxwBOMEduCNqgZdt_OaA</Concept>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Milestone" name="lifecycle_architecture" briefDescription="At the end of the Elaboration phase is the second important project milestone, the Lifecycle Architecture Milestone." id="_16nd0BOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Lifecycle Architecture Milestone" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false">
          <Presentation xsi:type="uma:BreakdownElementDescription" name="lifecycle_architecture,_RYHw4MA-EdqSgKaj2SZBmg" briefDescription="" id="-3Ul1iAI1nkD0C5AsRtjHFA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
            <MainDescription><![CDATA[<p>
    The Lifecycle Architecture Milestone is the&nbsp;second major project milestone. During iteration <a
    class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html"
    guid="_0l53cMlgEdmt3adZL5Dmdw">assessments</a>&nbsp;in Elaboration, you should keep these&nbsp;evaluation
    criteria&nbsp;in mind&nbsp;<a class="elementlinkwithusertext"
    href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>:
</p>
<ul>
    <li>
        Stability of Vision, requirements and Architecture.
    </li>
    <li>
        Major risk elements addressed and resolved by testing and evaluating executable prototypes.
    </li>
    <li>
        Construction iterations planned in sufficient detail and&nbsp;credibly estimated&nbsp;to allow the work to proceed.
    </li>
    <li>
        Agreement of stakeholders that the current vision can be met if plans are executed to develop complete system on
        top of current architecture.
    </li>
    <li>
        Resourse expenditures versus planned expenditures are acceptable.<br />
    </li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_8s37IBOSEduCNqgZdt_OaA">_0Spa4BOKEduCNqgZdt_OaA</Predecessor>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Activity" name="construction_phase_iteration" briefDescription="" id="_3CqrAROKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Construction Iteration [1..n]" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="true" IsEnactable="false" variabilityBasedOnElement="_y-3IrutQEdqc1LGhiSPqRg" variabilityType="extends">
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_88coMBOSEduCNqgZdt_OaA">_16nd0BOKEduCNqgZdt_OaA</Predecessor>
          <Concept>_48EKsBOMEduCNqgZdt_OaA</Concept>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Milestone" name="initial_operational_capability" briefDescription="The end of Construction phase is the third important project milestone, the Initial  Operational Capability Milestone." id="_31E_YBOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Initial Operational Capability Milestone" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false">
          <Presentation xsi:type="uma:BreakdownElementDescription" name="initial_operational_capability,_TV_y0MA-EdqSgKaj2SZBmg" briefDescription="" id="-Q37Qy6ke_PQDK4jr1EIdcA" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
            <MainDescription><![CDATA[<p> The Initial Operational Capability&nbsp;Milestone is the&nbsp;third major 
  project milestone. During iteration <a
    class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html"
    guid="_0l53cMlgEdmt3adZL5Dmdw">assessments</a>&nbsp;in Construction, keep 
  these&nbsp;evaluation criteria&nbsp;in mind&nbsp;<a class="elementlinkwithusertext"
    href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html"
    guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>: </p>
<ul>
    
  <li> Product release is stable and mature enough to be deployed in the user 
    community.</li>
    <li style="LIST-STYLE-TYPE: none">
        <ul>
            
      <li> The beta product is ready to be handed over to&nbsp;the users.</li>
      <li> All functionality has been developed and all alpha testing (if any) 
        has been completed.</li>
      <li> In addition to the software, a user manual has been developed, and 
        there is a description of the current release. </li>
        </ul>
    </li>
  <li style="LIST-STYLE-TYPE: none"> </li>
  <li> Actual resource expenditures compared to planned expenditures are acceptable.</li>
</ul>
<p> Note:<strong> </strong></p>
<p>In case the project fails to reach this milestone, an iteration can be added 
  to Construction, thus postponing Transition. </p>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_9L0g8BOSEduCNqgZdt_OaA">_3CqrAROKEduCNqgZdt_OaA</Predecessor>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Activity" name="transition_phase_iteration" briefDescription="" id="_467NIhOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Transition Iteration [1..n]" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="true" IsEnactable="false" variabilityBasedOnElement="_0rQRgMlgEdmt3adZL5Dmdw" variabilityType="extends">
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_9abksBOSEduCNqgZdt_OaA">_31E_YBOKEduCNqgZdt_OaA</Predecessor>
          <Concept>__ca5UBOMEduCNqgZdt_OaA</Concept>
        </BreakdownElement>
        <BreakdownElement xsi:type="uma:Milestone" name="product_release" briefDescription="The end of the Transition phase is the fourth important project milestone, the  Product Release Milestone, which is the result of the customer reviewing and accepting  the project deliverables." id="_5v0NwBOKEduCNqgZdt_OaA" orderingGuide="" suppressed="false" presentationName="Product Release Milestone" hasMultipleOccurrences="false" isOptional="false" isPlanned="true" prefix="" isEventDriven="false" isOngoing="false" isRepeatable="false">
          <Presentation xsi:type="uma:BreakdownElementDescription" name="product_release,_X3F_cMA-EdqSgKaj2SZBmg" briefDescription="" id="-Gt2aCyZVy4q1BvcJRM2E-A" orderingGuide="" suppressed="false" authors="" changeDescription="" version="" usageGuidance="">
            <MainDescription><![CDATA[<p> The Product Release Milestone is the last major project milestone. During 
  iteration <a class="elementLinkWithUserText" href="./../../openup_basic/tasks/assess_results,_0l53cMlgEdmt3adZL5Dmdw.html" guid="_0l53cMlgEdmt3adZL5Dmdw">assessment</a>, 
  you decide if the objectives were met, and&nbsp;then close the project.&nbsp;These 
  are the evaluation criteria to keep in mind <a class="elementlinkwithusertext" href="./../../openup_basic/guidances/supportingmaterials/references,_9ToeIB83Edqsvps02rpOOg.html" guid="_9ToeIB83Edqsvps02rpOOg">[KRO03]</a>: 
</p>
<ul>
    
  <li> Users satisfaction and product acceptance</li>
    
  <li> Stakeholder concurrence on acceptable resource expenditures compared to 
    planned expenditures</li>
    
  <li> Product is in production; therefore, a new development cycle for enhancements 
    or maintenance may start</li>
</ul>]]></MainDescription>
            <KeyConsiderations></KeyConsiderations>
          </Presentation>
          <SuperActivity>_0uyGoMlgEdmt3adZL5Dmdw</SuperActivity>
          <Predecessor linkType="finishToFinish" id="_9toNgBOSEduCNqgZdt_OaA">_467NIhOKEduCNqgZdt_OaA</Predecessor>
        </BreakdownElement>
        <SupportingMaterial>_Pt_fYBjoEduxUfEVCtmW4Q</SupportingMaterial>
        <Concept>_48EKsBOMEduCNqgZdt_OaA</Concept>
        <Concept>_2plxwBOMEduCNqgZdt_OaA</Concept>
        <Concept>_0hmKgBOMEduCNqgZdt_OaA</Concept>
        <Concept>__ca5UBOMEduCNqgZdt_OaA</Concept>
        <IncludesPattern>_0o3r4slgEdmt3adZL5Dmdw</IncludesPattern>
        <IncludesPattern>_0sTaYMlgEdmt3adZL5Dmdw</IncludesPattern>
        <IncludesPattern>_0rQRgMlgEdmt3adZL5Dmdw</IncludesPattern>
        <IncludesPattern>_y-3IrutQEdqc1LGhiSPqRg</IncludesPattern>
        <DefaultContext>_0u-T4clgEdmt3adZL5Dmdw</DefaultContext>
        <ValidContext>_0u-T4clgEdmt3adZL5Dmdw</ValidContext>
      </Process>
    </MethodPackage>
  </MethodPlugin>
  <MethodConfiguration name="OpenUPBasic" briefDescription="This configuration includes plug-ins a packages needed for the OpenUP/Basic process." id="_0u-T4clgEdmt3adZL5Dmdw" orderingGuide="" suppressed="false" authors="" changeDescription="" version="1.0.0">
    <MethodPluginSelection>_0TLvwMlgEdmt3adZL5Dmdw</MethodPluginSelection>
    <MethodPluginSelection>_WCUhAO8KEdmKSqa_gSYthg</MethodPluginSelection>
    <MethodPackageSelection>_0UCrYMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0TR2YMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_F6sgkNZqEduNivIYTvKuLw</MethodPackageSelection>
    <MethodPackageSelection>_0TR2YclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0nJNkMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0uHYQMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0u-T4MlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0T8kwMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0T8kwslgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0UCrYclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_OGGKkMpyEdqC_NfSivunjA</MethodPackageSelection>
    <MethodPackageSelection>_L79ggDR5EdutE_HNDTJk5Q</MethodPackageSelection>
    <MethodPackageSelection>_3E1NwDPBEduyTOpiJx8z_g</MethodPackageSelection>
    <MethodPackageSelection>_0b4YwMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0UCrYslgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_FtSMYAFjEduDPKiaP0pu-Q</MethodPackageSelection>
    <MethodPackageSelection>_IIPZQDRjEduU7vV49F9N0A</MethodPackageSelection>
    <MethodPackageSelection>_5la48DR2EdutE_HNDTJk5Q</MethodPackageSelection>
    <MethodPackageSelection>_0aQBEMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_kB42IDRiEduU7vV49F9N0A</MethodPackageSelection>
    <MethodPackageSelection>_0WuL8MlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0WuL8clgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0YcDMMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_PGDx8PisEdmjyaJMRcPDWA</MethodPackageSelection>
    <MethodPackageSelection>_0ZM4MMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0cQzQMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_bxcS4B_REdq3EKSIdbj-MA</MethodPackageSelection>
    <MethodPackageSelection>_y-etQOtQEdqc1LGhiSPqRg</MethodPackageSelection>
    <MethodPackageSelection>_y-k0a-tQEdqc1LGhiSPqRg</MethodPackageSelection>
    <MethodPackageSelection>_eE5nEEbpEduLBN1xMBngqw</MethodPackageSelection>
    <MethodPackageSelection>_MWFjoE9HEdudU75l2xOQTw</MethodPackageSelection>
    <MethodPackageSelection>_y-q7QOtQEdqc1LGhiSPqRg</MethodPackageSelection>
    <MethodPackageSelection>_y_PjEOtQEdqc1LGhiSPqRg</MethodPackageSelection>
    <MethodPackageSelection>_0rWYIMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0rWYIclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0ruyoMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0rcewMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_Wq_VQPinEdmugcVr9AdHjQ</MethodPackageSelection>
    <MethodPackageSelection>_0rilYMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_S_IQ4CliEdqjQsaFX0CJTw</MethodPackageSelection>
    <MethodPackageSelection>_0oSdEclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0oSdEslgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_jK8QsP77Edm1zMZYtD3GjA</MethodPackageSelection>
    <MethodPackageSelection>_0okw8MlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0oreoMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0qrpwMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0q33AMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0CtdMPinEdmugcVr9AdHjQ</MethodPackageSelection>
    <MethodPackageSelection>_0qrpwclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0qxwYMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_mpl9kDbmEduMn613sF6-Uw</MethodPackageSelection>
    <MethodPackageSelection>_TFSlkDboEduMn613sF6-Uw</MethodPackageSelection>
    <MethodPackageSelection>_0o9ygMlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0pJ_xclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_JEyxADboEduMn613sF6-Uw</MethodPackageSelection>
    <MethodPackageSelection>_0pWNAslgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0nJNkclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_XzhPQDboEduMn613sF6-Uw</MethodPackageSelection>
    <MethodPackageSelection>_0sx7iclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0sluQclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_h2-iAPimEdmugcVr9AdHjQ</MethodPackageSelection>
    <MethodPackageSelection>_0nz79MlgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_0uHYQclgEdmt3adZL5Dmdw</MethodPackageSelection>
    <MethodPackageSelection>_xujGABOKEduCNqgZdt_OaA</MethodPackageSelection>
    <MethodPackageSelection>_0SpacBOKEduCNqgZdt_OaA</MethodPackageSelection>
    <MethodPackageSelection>_3CqrABOKEduCNqgZdt_OaA</MethodPackageSelection>
    <MethodPackageSelection>_467NIROKEduCNqgZdt_OaA</MethodPackageSelection>
    <MethodPackageSelection>_WCguSu8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCanoO8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguQ-8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguQO8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguQu8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguQe8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguRe8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguS-8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguTO8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguRO8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguTe8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguR-8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguRu8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_WCguSO8KEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_eNnSAO8LEdmKSqa_gSYthg</MethodPackageSelection>
    <MethodPackageSelection>_douywISSEdu8NaFPL8nS_w</MethodPackageSelection>
    <MethodPackageSelection>_h15dULCxEdujaOuld2kPdg</MethodPackageSelection>
    <MethodPackageSelection>_AejKAMadEduMlb2cQZNTYw</MethodPackageSelection>
    <ProcessView>_RdM7MMXnEduywMSzPTUUwA</ProcessView>
  </MethodConfiguration>
</uma:MethodLibrary>
